
============================ Messages from Goddess ============================
 * Job starting from: Thu Apr 14 15:37:52 CST 2022
 * Job ID           : 22481
 * Job name         : EvalSGPred
 * Job partition    : v100-32g
 * Nodes            : 1
 * Cores            : 4
 * Working directory: ~/segmentationsg/scripts
===============================================================================

Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17481', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'False', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'False', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'MotifSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
loading cached file:  tmp/visual_genome_train_data_.pkl
loading cached file:  tmp/visual_genome_val_data_.pkl
loading cached file:  tmp/visual_genome_test_data_.pkl
[32m[04/14 15:38:08 detectron2]: [0mRank of current process: 0. World size: 1
[32m[04/14 15:38:10 detectron2]: [0mEnvironment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[04/14 15:38:10 detectron2]: [0mCommand line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17481', eval_only=True, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'False', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'False', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'MotifSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[32m[04/14 15:38:10 detectron2]: [0mContents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[32m[04/14 15:38:10 detectron2]: [0mRunning with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mMotifSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[32m[04/14 15:38:10 detectron2]: [0mFull config saved to ../output-step3/config.yaml
[32m[04/14 15:38:11 d2.utils.env]: [0mUsing a generated random seed 11247454
loading word vectors from ../glove/glove.6B.200d.pt
loading word vectors from ../glove/glove.6B.200d.pt
loading word vectors from ../glove/glove.6B.200d.pt
loading word vectors from ../glove/glove.6B.200d.pt
loading word vectors from ../glove/glove.6B.200d.pt
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_head.fc1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_head.fc1.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_head.fc2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_head.fc2.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.cls_score.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.cls_score.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.bbox_pred.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.bbox_pred.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.transfer_cls_score.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.transfer_cls_score.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.transfer_bbox_pred.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: box_predictor.transfer_bbox_pred.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn1.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn2.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn3.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn4.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.mask_fcn4.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.deconv.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.deconv.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.predictor.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: mask_head.predictor.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral2.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output2.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral3.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output3.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral4.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral4.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output4.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output4.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral5.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_lateral5.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output5.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.fpn_output5.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.stem.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.1.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.1.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.1.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.2.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.2.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.2.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.1.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.1.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.1.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.2.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.2.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.2.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.3.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.3.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.3.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.1.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.1.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.1.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.2.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.2.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.2.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.3.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.3.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.3.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.4.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.4.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.4.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.5.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.5.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.5.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.6.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.6.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.6.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.7.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.7.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.7.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.8.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.8.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.8.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.9.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.9.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.9.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.10.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.10.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.10.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.11.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.11.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.11.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.12.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.12.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.12.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.13.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.13.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.13.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.14.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.14.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.14.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.15.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.15.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.15.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.16.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.16.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.16.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.17.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.17.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.17.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.18.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.18.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.18.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.19.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.19.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.19.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.20.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.20.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.20.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.21.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.21.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.21.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.22.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.22.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.22.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.1.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.1.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.1.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.2.conv1.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.2.conv2.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.2.conv3.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.conv.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.conv.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[5m[31mWARNING[0m [32m[04/14 15:38:23 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[32m[04/14 15:38:24 d2.engine.defaults]: [0mModel:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): MotifSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (rel_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): LSTMContextSegmentationC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (obj_ctx_rnn): LSTM(1352, 512, bidirectional=True)
          (decoder_rnn): DecoderRNN(
            (obj_embed): Embedding(3, 200)
            (input_linearity): Linear(in_features=2064, out_features=3072, bias=True)
            (state_linearity): Linear(in_features=512, out_features=2560, bias=True)
            (out_obj): Linear(in_features=512, out_features=2, bias=True)
          )
          (edge_ctx_rnn): LSTM(1736, 512, bidirectional=True)
          (lin_obj_h): Linear(in_features=1024, out_features=512, bias=True)
          (lin_edge_h): Linear(in_features=1024, out_features=512, bias=True)
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[32m[04/14 15:38:24 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ../output-step3/model_0037999.pth ...
[32m[04/14 15:38:50 d2.data.datasets.coco]: [0mLoaded 55 images in COCO format from ../datasets/coco/annotations/instances_val2017.json
[32m[04/14 15:38:50 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 3237         |  spacing   | 4793         | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 8030         |            |              |              |              |[0m
[32m[04/14 15:38:50 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[04/14 15:38:50 d2.data.common]: [0mSerializing 55 elements to byte tensors and concatenating them all ...
[32m[04/14 15:38:50 d2.data.common]: [0mSerialized dataset takes 0.85 MiB
[5m[31mWARNING[0m [32m[04/14 15:38:50 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[04/14 15:39:05 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[04/14 15:39:05 d2.evaluation.coco_evaluation]: [0mSaving results to ../output-step3/coco_instances_results.json
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mEvaluate annotation type *bbox*
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.evaluate() finished in 0.10 seconds.
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mAccumulating evaluation results...
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.accumulate() finished in 0.01 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.143
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.233
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.157
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.106
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.272
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.063
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.157
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.111
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.325
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl  |
|:------:|:------:|:------:|:------:|:------:|:-----:|
| 14.315 | 23.296 | 15.687 | 10.633 | 27.241 |  nan  |
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mSome metrics cannot be computed and is shown as NaN.
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category     | AP    | category   | AP     | category     | AP   |
|:-------------|:------|:-----------|:-------|:-------------|:-----|
| intersection | 6.835 | spacing    | 21.796 | _background_ | nan  |
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mEvaluate annotation type *segm*
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.evaluate() finished in 0.20 seconds.
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mAccumulating evaluation results...
[32m[04/14 15:39:06 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.accumulate() finished in 0.01 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.131
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.224
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.137
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.097
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.318
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.007
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.060
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.153
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.113
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.363
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mEvaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:------:|:------:|:------:|:-----:|:------:|:-----:|
| 13.074 | 22.431 | 13.683 | 9.748 | 31.780 |  nan  |
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mSome metrics cannot be computed and is shown as NaN.
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mPer-category segm AP: 
| category     | AP    | category   | AP     | category     | AP   |
|:-------------|:------|:-----------|:-------|:-------------|:-----|
| intersection | 8.464 | spacing    | 17.685 | _background_ | nan  |
[32m[04/14 15:39:06 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[04/14 15:39:06 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[04/14 15:39:06 d2.evaluation.testing]: [0mcopypaste: 14.3153,23.2957,15.6874,10.6330,27.2411,nan
[32m[04/14 15:39:06 d2.evaluation.testing]: [0mcopypaste: Task: segm
[32m[04/14 15:39:06 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[04/14 15:39:06 d2.evaluation.testing]: [0mcopypaste: 13.0743,22.4315,13.6827,9.7476,31.7805,nan
[32m[04/14 15:39:06 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[04/14 15:39:06 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 3397         |
|              |              |[0m
[32m[04/14 15:39:06 d2.data.common]: [0mSerializing 42 elements to byte tensors and concatenating them all ...
[32m[04/14 15:39:06 d2.data.common]: [0mSerialized dataset takes 0.44 MiB
[32m[04/14 15:39:06 detectron2]: [0mFollowing metrics will be use for evaluation
[32m[04/14 15:39:06 detectron2]: [0m('SGRecall', 'SGNoGraphConstraintRecall', 'SGZeroShotRecall', 'SGPairAccuracy', 'SGMeanRecall')
[5m[31mWARNING[0m [32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[04/14 15:39:06 d2.evaluation.coco_evaluation]: [0mTrying to convert 'VG_test' to COCO format ...
[5m[31mWARNING[0m [32m[04/14 15:39:06 d2.data.datasets.coco]: [0mUsing previously cached COCO format annotations at '../output-step3/inference/VG_test_coco_format.json'. You need to clear the cache file if your dataset has been modified.
[32m[04/14 15:39:06 detectron2]: [0mLoading zero shot triplets
[32m[04/14 15:39:06 detectron2]: [0mStart inference on 42 images
[32m[04/14 15:39:08 detectron2]: [0mInference done 14/42. 0.0761 s / img. ETA=0:00:02
[32m[04/14 15:39:09 detectron2]: [0mTotal inference time: 0:00:02.141855 (0.057888 s / img per device, on 1 devices)
[32m[04/14 15:39:09 detectron2]: [0mTotal inference pure compute time: 0:00:01 (0.033472 s / img per device, on 1 devices)
[32m[04/14 15:39:10 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[04/14 15:39:10 d2.evaluation.coco_evaluation]: [0mSaving results to ../output-step3/inference/coco_instances_results.json
[32m[04/14 15:39:10 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
[32m[04/14 15:39:10 d2.evaluation.fast_eval_api]: [0mEvaluate annotation type *bbox*
[32m[04/14 15:39:10 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.evaluate() finished in 0.02 seconds.
[32m[04/14 15:39:10 d2.evaluation.fast_eval_api]: [0mAccumulating evaluation results...
[32m[04/14 15:39:10 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.accumulate() finished in 0.00 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.029
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.067
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.021
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.023
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.569
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.002
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.015
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.031
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.023
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.604
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000
[32m[04/14 15:39:10 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl  |
|:-----:|:------:|:------:|:-----:|:------:|:-----:|
| 2.895 | 6.749  | 2.115  | 2.253 | 56.943 |  nan  |
[32m[04/14 15:39:10 d2.evaluation.coco_evaluation]: [0mSome metrics cannot be computed and is shown as NaN.
[32m[04/14 15:39:10 detectron2]: [0mGathering data
[32m[04/14 15:39:10 detectron2]: [0mPredictions Gathered
[32m[04/14 15:39:10 detectron2]: [0mSaving output prediction
[32m[04/14 15:39:10 detectron2]: [0mComputing Scene Graph Metrics
[32m[04/14 15:39:10 detectron2]: [0mPreparing Global Container
[32m[04/14 15:39:10 detectron2]: [0mScene Graph Metric Evaluation Complete. Computing recall statistics...
[32m[04/14 15:39:10 detectron2]: [0mScene Graph Results for mode: sgdet
SGG eval:     R @ 20: 0.0000;     R @ 50: 0.0000;     R @ 100: 0.0000;  for mode=sgdet, type=Recall(Main).
SGG eval:  ng-R @ 20: 0.0000;  ng-R @ 50: 0.0000;  ng-R @ 100: 0.0000;  for mode=sgdet, type=No Graph Constraint Recall(Main).
SGG eval:    zR @ 20: nan;    zR @ 50: nan;    zR @ 100: nan;  for mode=sgdet, type=Zero Shot Recall.
SGG eval:    mR @ 20: 0.0000;    mR @ 50: 0.0000;    mR @ 100: 0.0000;  for mode=sgdet, type=Mean Recall.
----------------------- Details ------------------------
(spacing:0.0000) 
--------------------------------------------------------
====================================================================================================

[32m[04/14 15:39:10 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[04/14 15:39:10 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[04/14 15:39:10 d2.evaluation.testing]: [0mcopypaste: 2.8951,6.7493,2.1147,2.2533,56.9427,nan
[32m[04/14 15:39:10 d2.evaluation.testing]: [0mcopypaste: Task: SG
[32m[04/14 15:39:10 d2.evaluation.testing]: [0mcopypaste: SGMeanRecall@20,SGMeanRecall@50,SGMeanRecall@100
[32m[04/14 15:39:10 d2.evaluation.testing]: [0mcopypaste: 0.0000,0.0000,0.0000

============================ Messages from Goddess ============================
 * Job ended at     : Thu Apr 14 15:39:12 CST 2022
===============================================================================

