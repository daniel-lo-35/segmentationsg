[04/16 03:37:35] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 03:37:47] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/16 03:37:47] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17508', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-vctree-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'VCTreeSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/16 03:37:49] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/16 03:37:49] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mVCTreeSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-vctree-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/16 03:37:49] detectron2 INFO: Full config saved to ../output-step3-predcl-vctree-short/config.yaml
[04/16 03:37:49] d2.utils.env INFO: Using a generated random seed 49622295
[04/16 03:37:49] d2.engine.defaults INFO: Auto-scaling the config to batch_size=4, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/16 03:39:12] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/16 03:39:13] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): VCTreeSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (ctx_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): VCTreeLSTMSegmentationContextC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (overlap_embed): Sequential(
            (0): Linear(in_features=6, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (box_embed): Sequential(
            (0): Linear(in_features=9, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (bi_freq_prior): Linear(in_features=4, out_features=1, bias=False)
          (obj_reduce): Linear(in_features=1024, out_features=128, bias=True)
          (emb_reduce): Linear(in_features=200, out_features=128, bias=True)
          (score_pre): Linear(in_features=512, out_features=512, bias=True)
          (score_sub): Linear(in_features=512, out_features=512, bias=True)
          (score_obj): Linear(in_features=512, out_features=512, bias=True)
          (vision_prior): Linear(in_features=1537, out_features=1, bias=True)
          (obj_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1352, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (iofux): Linear(in_features=1352, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (edge_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1736, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (iofux): Linear(in_features=1736, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/16 03:39:13] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 03:39:13] d2.data.build INFO: Removed 0 images with no usable annotations. 299 images left.
[04/16 03:39:13] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 15473        |
|              |              |[0m
[04/16 03:39:13] d2.data.build INFO: Using training sampler TrainingSampler
[04/16 03:39:13] d2.data.common INFO: Serializing 299 elements to byte tensors and concatenating them all ...
[04/16 03:39:14] d2.data.common INFO: Serialized dataset takes 2.08 MiB
[04/16 03:39:14] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/16 03:39:53] d2.data.datasets.coco INFO: Loading ../datasets/coco/annotations/instances_train2017.json takes 1.08 seconds.
[04/16 03:39:53] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/16 03:39:53] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/16 03:39:53] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/16 03:39:53] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/16 03:39:53] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/16 03:39:53] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 03:39:53] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step1/model_weights.pth ...
[04/16 03:40:10] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.embeddings.weight[0m
[34mroi_heads.embeddings_coco.weight[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner_segmentation.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.bi_freq_prior.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.emb_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed1.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed2.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed_segmentation.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_obj.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_pre.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_sub.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.deconv.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.predictor.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_reducer.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.sg_segmentation_features.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.vision_prior.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.ctx_compress.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.freq_bias.obj_baseline.weight[0m
[34mroi_heads.scenegraph_head.predictor.post_cat.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.post_emb.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.up_dim.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.variance_net.{bias, weight}[0m
[04/16 03:40:10] d2.engine.train_loop INFO: Starting training from iteration 0
[04/16 03:40:19] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/r09521612/segmentationsg/segmentationsg/engine/sg_trainer.py", line 267, in run_step
    loss_dict = self.model(data, mask_batched_inputs=mask_data)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/meta_arch/rcnn.py", line 214, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances, gt_relations, segmentation_step=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 592, in forward
    _, _, losses = self._forward_scenegraph(features, pred_instances, targets, relations, segmentation_step=segmentation_step)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 725, in _forward_scenegraph
    return self.scenegraph_head(features, instances, targets, relations, segmentation_step=segmentation_step, return_masks=return_masks)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_head.py", line 291, in forward
    boxes, rel_labels, rel_pair_idxs, rel_binarys = self.samp_processor.gtbox_relsample(boxes, targets, relations)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/sampling.py", line 75, in gtbox_relsample
    binary_rel[tgt_head_idxs, tgt_tail_idxs] = 1
IndexError: tensors used as indices must be long, byte or bool tensors
[04/16 03:40:20] d2.engine.hooks INFO: Total training time: 0:00:09 (0:00:00 on hooks)
[04/16 03:40:20] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 9149M
[04/16 11:48:27] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 11:48:30] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/16 11:48:30] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17532', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-vctree-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'VCTreeSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/16 11:48:31] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/16 11:48:31] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mVCTreeSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-vctree-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/16 11:48:31] detectron2 INFO: Full config saved to ../output-step3-predcl-vctree-short/config.yaml
[04/16 11:48:31] d2.utils.env INFO: Using a generated random seed 31571657
[04/16 11:48:31] d2.engine.defaults INFO: Auto-scaling the config to batch_size=4, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/16 11:48:52] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/16 11:48:54] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): VCTreeSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (ctx_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): VCTreeLSTMSegmentationContextC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (overlap_embed): Sequential(
            (0): Linear(in_features=6, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (box_embed): Sequential(
            (0): Linear(in_features=9, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (bi_freq_prior): Linear(in_features=4, out_features=1, bias=False)
          (obj_reduce): Linear(in_features=1024, out_features=128, bias=True)
          (emb_reduce): Linear(in_features=200, out_features=128, bias=True)
          (score_pre): Linear(in_features=512, out_features=512, bias=True)
          (score_sub): Linear(in_features=512, out_features=512, bias=True)
          (score_obj): Linear(in_features=512, out_features=512, bias=True)
          (vision_prior): Linear(in_features=1537, out_features=1, bias=True)
          (obj_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1352, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (iofux): Linear(in_features=1352, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (edge_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1736, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (iofux): Linear(in_features=1736, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/16 11:48:54] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 11:48:54] d2.data.build INFO: Removed 0 images with no usable annotations. 299 images left.
[04/16 11:48:54] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 15473        |
|              |              |[0m
[04/16 11:48:54] d2.data.build INFO: Using training sampler TrainingSampler
[04/16 11:48:54] d2.data.common INFO: Serializing 299 elements to byte tensors and concatenating them all ...
[04/16 11:48:54] d2.data.common INFO: Serialized dataset takes 2.08 MiB
[04/16 11:48:54] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/16 11:49:02] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/16 11:49:03] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/16 11:49:03] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/16 11:49:03] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/16 11:49:03] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/16 11:49:03] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 11:49:03] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step1/model_weights.pth ...
[04/16 11:49:03] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.embeddings.weight[0m
[34mroi_heads.embeddings_coco.weight[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner_segmentation.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.bi_freq_prior.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.emb_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed1.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed2.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed_segmentation.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_obj.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_pre.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_sub.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.deconv.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.predictor.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_reducer.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.sg_segmentation_features.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.vision_prior.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.ctx_compress.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.freq_bias.obj_baseline.weight[0m
[34mroi_heads.scenegraph_head.predictor.post_cat.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.post_emb.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.up_dim.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.variance_net.{bias, weight}[0m
[04/16 11:49:03] d2.engine.train_loop INFO: Starting training from iteration 0
[04/16 11:49:09] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/r09521612/segmentationsg/segmentationsg/engine/sg_trainer.py", line 267, in run_step
    loss_dict = self.model(data, mask_batched_inputs=mask_data)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/meta_arch/rcnn.py", line 214, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances, gt_relations, segmentation_step=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 592, in forward
    _, _, losses = self._forward_scenegraph(features, pred_instances, targets, relations, segmentation_step=segmentation_step)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 725, in _forward_scenegraph
    return self.scenegraph_head(features, instances, targets, relations, segmentation_step=segmentation_step, return_masks=return_masks)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_head.py", line 291, in forward
    boxes, rel_labels, rel_pair_idxs, rel_binarys = self.samp_processor.gtbox_relsample(boxes, targets, relations)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/sampling.py", line 80, in gtbox_relsample
    rel_possibility[tgt_head_idxs.long(), tgt_tail_idxs.long()] = 0
IndexError: tensors used as indices must be long, byte or bool tensors
[04/16 11:49:09] d2.engine.hooks INFO: Total training time: 0:00:05 (0:00:00 on hooks)
[04/16 11:49:09] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 13174M
[04/16 14:03:37] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 14:03:39] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/16 14:03:39] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17534', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-vctree-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'VCTreeSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/16 14:03:40] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/16 14:03:40] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mVCTreeSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-vctree-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/16 14:03:40] detectron2 INFO: Full config saved to ../output-step3-predcl-vctree-short/config.yaml
[04/16 14:03:40] d2.utils.env INFO: Using a generated random seed 40715575
[04/16 14:03:40] d2.engine.defaults INFO: Auto-scaling the config to batch_size=4, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/16 14:04:01] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/16 14:04:01] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): VCTreeSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (ctx_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): VCTreeLSTMSegmentationContextC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (overlap_embed): Sequential(
            (0): Linear(in_features=6, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (box_embed): Sequential(
            (0): Linear(in_features=9, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (bi_freq_prior): Linear(in_features=4, out_features=1, bias=False)
          (obj_reduce): Linear(in_features=1024, out_features=128, bias=True)
          (emb_reduce): Linear(in_features=200, out_features=128, bias=True)
          (score_pre): Linear(in_features=512, out_features=512, bias=True)
          (score_sub): Linear(in_features=512, out_features=512, bias=True)
          (score_obj): Linear(in_features=512, out_features=512, bias=True)
          (vision_prior): Linear(in_features=1537, out_features=1, bias=True)
          (obj_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1352, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (iofux): Linear(in_features=1352, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (edge_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1736, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (iofux): Linear(in_features=1736, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/16 14:04:01] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 14:04:01] d2.data.build INFO: Removed 0 images with no usable annotations. 299 images left.
[04/16 14:04:01] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 15473        |
|              |              |[0m
[04/16 14:04:01] d2.data.build INFO: Using training sampler TrainingSampler
[04/16 14:04:01] d2.data.common INFO: Serializing 299 elements to byte tensors and concatenating them all ...
[04/16 14:04:01] d2.data.common INFO: Serialized dataset takes 2.08 MiB
[04/16 14:04:01] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/16 14:04:10] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/16 14:04:10] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/16 14:04:10] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/16 14:04:10] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/16 14:04:10] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/16 14:04:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 14:04:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step1/model_weights.pth ...
[04/16 14:04:11] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.embeddings.weight[0m
[34mroi_heads.embeddings_coco.weight[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner_segmentation.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.bi_freq_prior.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.emb_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed1.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed2.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed_segmentation.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_obj.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_pre.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_sub.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.deconv.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.predictor.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_reducer.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.sg_segmentation_features.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.vision_prior.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.ctx_compress.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.freq_bias.obj_baseline.weight[0m
[34mroi_heads.scenegraph_head.predictor.post_cat.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.post_emb.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.up_dim.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.variance_net.{bias, weight}[0m
[04/16 14:04:11] d2.engine.train_loop INFO: Starting training from iteration 0
[04/16 14:06:06] d2.utils.events INFO:  eta: 6:31:16  iter: 19  total_loss: 0.8308  loss_rel: 0.5712  loss_refine_obj: 0  binary_loss: 0.2499  loss_mask_segmentation: 0  time: 5.6961  data_time: 0.4169  lr: 2.6069e-05  max_mem: 18598M
[04/16 14:08:06] d2.utils.events INFO:  eta: 6:35:05  iter: 39  total_loss: 0.6883  loss_rel: 0.4206  loss_refine_obj: 0  binary_loss: 0.2686  loss_mask_segmentation: 0  time: 5.8551  data_time: 0.3227  lr: 2.7194e-05  max_mem: 23957M
[04/16 14:10:01] d2.utils.events INFO:  eta: 6:30:50  iter: 59  total_loss: 0.5693  loss_rel: 0.2922  loss_refine_obj: 0  binary_loss: 0.2796  loss_mask_segmentation: 0  time: 5.8151  data_time: 0.3018  lr: 2.8319e-05  max_mem: 23957M
[04/16 14:11:55] d2.utils.events INFO:  eta: 6:24:44  iter: 79  total_loss: 0.4618  loss_rel: 0.2158  loss_refine_obj: 0  binary_loss: 0.2425  loss_mask_segmentation: 0  time: 5.7908  data_time: 0.2924  lr: 2.9444e-05  max_mem: 23957M
[04/16 14:13:59] d2.utils.events INFO:  eta: 6:26:18  iter: 99  total_loss: 0.444  loss_rel: 0.1698  loss_refine_obj: 0  binary_loss: 0.2588  loss_mask_segmentation: 0  time: 5.8710  data_time: 0.3088  lr: 3.0569e-05  max_mem: 23957M
[04/16 14:15:58] d2.utils.events INFO:  eta: 6:20:56  iter: 119  total_loss: 0.4094  loss_rel: 0.1416  loss_refine_obj: 0  binary_loss: 0.2578  loss_mask_segmentation: 0  time: 5.8784  data_time: 0.3050  lr: 3.1694e-05  max_mem: 25633M
[04/16 14:17:51] d2.utils.events INFO:  eta: 6:15:25  iter: 139  total_loss: 0.3684  loss_rel: 0.1226  loss_refine_obj: 0  binary_loss: 0.2472  loss_mask_segmentation: 0  time: 5.8496  data_time: 0.2839  lr: 3.2819e-05  max_mem: 25633M
[04/16 14:19:58] d2.utils.events INFO:  eta: 6:12:41  iter: 159  total_loss: 0.3703  loss_rel: 0.1007  loss_refine_obj: 0  binary_loss: 0.2747  loss_mask_segmentation: 0  time: 5.9095  data_time: 0.3682  lr: 3.3944e-05  max_mem: 25633M
[04/16 14:22:03] d2.utils.events INFO:  eta: 6:10:25  iter: 179  total_loss: 0.3728  loss_rel: 0.1116  loss_refine_obj: 0  binary_loss: 0.2697  loss_mask_segmentation: 0  time: 5.9488  data_time: 0.3734  lr: 3.5069e-05  max_mem: 26166M
[04/16 14:23:48] d2.utils.events INFO:  eta: 6:04:22  iter: 199  total_loss: 0.3798  loss_rel: 0.08005  loss_refine_obj: 0  binary_loss: 0.287  loss_mask_segmentation: 0  time: 5.8763  data_time: 0.2985  lr: 3.6194e-05  max_mem: 26166M
[04/16 14:25:56] d2.utils.events INFO:  eta: 6:03:14  iter: 219  total_loss: 0.346  loss_rel: 0.104  loss_refine_obj: 0  binary_loss: 0.2464  loss_mask_segmentation: 0  time: 5.9264  data_time: 0.3242  lr: 3.7319e-05  max_mem: 26166M
[04/16 14:28:01] d2.utils.events INFO:  eta: 6:04:36  iter: 239  total_loss: 0.3729  loss_rel: 0.07505  loss_refine_obj: 0  binary_loss: 0.2921  loss_mask_segmentation: 0  time: 5.9513  data_time: 0.3215  lr: 3.8444e-05  max_mem: 26166M
[04/16 14:30:13] d2.utils.events INFO:  eta: 6:04:31  iter: 259  total_loss: 0.3099  loss_rel: 0.06285  loss_refine_obj: 0  binary_loss: 0.2501  loss_mask_segmentation: 0  time: 6.0011  data_time: 0.3094  lr: 3.9569e-05  max_mem: 26166M
[04/16 14:32:13] d2.utils.events INFO:  eta: 6:03:07  iter: 279  total_loss: 0.3299  loss_rel: 0.06448  loss_refine_obj: 0  binary_loss: 0.2529  loss_mask_segmentation: 0  time: 6.0012  data_time: 0.3248  lr: 4.0694e-05  max_mem: 26166M
[04/16 14:34:22] d2.utils.events INFO:  eta: 6:03:02  iter: 299  total_loss: 0.3294  loss_rel: 0.06249  loss_refine_obj: 0  binary_loss: 0.2549  loss_mask_segmentation: 0  time: 6.0315  data_time: 0.3525  lr: 4.1819e-05  max_mem: 26166M
[04/16 14:36:30] d2.utils.events INFO:  eta: 6:02:31  iter: 319  total_loss: 0.3163  loss_rel: 0.0554  loss_refine_obj: 0  binary_loss: 0.2639  loss_mask_segmentation: 0  time: 6.0554  data_time: 0.3556  lr: 4.2944e-05  max_mem: 26166M
[04/16 14:38:46] d2.utils.events INFO:  eta: 6:01:47  iter: 339  total_loss: 0.3183  loss_rel: 0.06371  loss_refine_obj: 0  binary_loss: 0.2483  loss_mask_segmentation: 0  time: 6.0998  data_time: 0.3472  lr: 4.4069e-05  max_mem: 26166M
[04/16 14:40:51] d2.utils.events INFO:  eta: 6:00:23  iter: 359  total_loss: 0.328  loss_rel: 0.05421  loss_refine_obj: 0  binary_loss: 0.2538  loss_mask_segmentation: 0  time: 6.1060  data_time: 0.3341  lr: 4.5194e-05  max_mem: 26166M
[04/16 14:42:49] d2.utils.events INFO:  eta: 5:57:49  iter: 379  total_loss: 0.3461  loss_rel: 0.04461  loss_refine_obj: 0  binary_loss: 0.2808  loss_mask_segmentation: 0  time: 6.0970  data_time: 0.2877  lr: 4.6319e-05  max_mem: 26166M
[04/16 14:44:56] d2.utils.events INFO:  eta: 5:55:51  iter: 399  total_loss: 0.3014  loss_rel: 0.05156  loss_refine_obj: 0  binary_loss: 0.243  loss_mask_segmentation: 0  time: 6.1100  data_time: 0.2928  lr: 4.7444e-05  max_mem: 26166M
[04/16 14:46:55] d2.utils.events INFO:  eta: 5:53:52  iter: 419  total_loss: 0.3081  loss_rel: 0.04237  loss_refine_obj: 0  binary_loss: 0.2693  loss_mask_segmentation: 0  time: 6.1001  data_time: 0.3329  lr: 4.8569e-05  max_mem: 26166M
[04/16 14:48:56] d2.utils.events INFO:  eta: 5:51:53  iter: 439  total_loss: 0.3238  loss_rel: 0.03874  loss_refine_obj: 0  binary_loss: 0.2814  loss_mask_segmentation: 0  time: 6.0985  data_time: 0.2974  lr: 4.9694e-05  max_mem: 26166M
[04/16 14:51:07] d2.utils.events INFO:  eta: 5:50:57  iter: 459  total_loss: 0.3108  loss_rel: 0.03232  loss_refine_obj: 0  binary_loss: 0.2768  loss_mask_segmentation: 0  time: 6.1180  data_time: 0.3155  lr: 5.0819e-05  max_mem: 26166M
[04/16 14:53:03] d2.utils.events INFO:  eta: 5:48:30  iter: 479  total_loss: 0.3081  loss_rel: 0.03604  loss_refine_obj: 0  binary_loss: 0.2591  loss_mask_segmentation: 0  time: 6.1043  data_time: 0.2983  lr: 5.1944e-05  max_mem: 26166M
[04/16 14:55:11] d2.utils.events INFO:  eta: 5:46:32  iter: 499  total_loss: 0.3237  loss_rel: 0.04113  loss_refine_obj: 0  binary_loss: 0.2745  loss_mask_segmentation: 0  time: 6.1166  data_time: 0.3062  lr: 5.3069e-05  max_mem: 26166M
[04/16 14:57:11] d2.utils.events INFO:  eta: 5:44:51  iter: 519  total_loss: 0.3055  loss_rel: 0.03089  loss_refine_obj: 0  binary_loss: 0.2622  loss_mask_segmentation: 0  time: 6.1115  data_time: 0.3235  lr: 5.4194e-05  max_mem: 26166M
[04/16 14:59:09] d2.utils.events INFO:  eta: 5:42:53  iter: 539  total_loss: 0.288  loss_rel: 0.03394  loss_refine_obj: 0  binary_loss: 0.2472  loss_mask_segmentation: 0  time: 6.1044  data_time: 0.3317  lr: 5.5319e-05  max_mem: 26166M
[04/16 15:01:21] d2.utils.events INFO:  eta: 5:41:43  iter: 559  total_loss: 0.3033  loss_rel: 0.0286  loss_refine_obj: 0  binary_loss: 0.2734  loss_mask_segmentation: 0  time: 6.1221  data_time: 0.3106  lr: 5.6444e-05  max_mem: 26166M
[04/16 15:03:22] d2.utils.events INFO:  eta: 5:39:28  iter: 579  total_loss: 0.2854  loss_rel: 0.03335  loss_refine_obj: 0  binary_loss: 0.2461  loss_mask_segmentation: 0  time: 6.1187  data_time: 0.3016  lr: 5.7569e-05  max_mem: 26166M
[04/16 15:05:35] d2.utils.events INFO:  eta: 5:37:47  iter: 599  total_loss: 0.3275  loss_rel: 0.03  loss_refine_obj: 0  binary_loss: 0.2616  loss_mask_segmentation: 0  time: 6.1365  data_time: 0.3104  lr: 5.8694e-05  max_mem: 26592M
[04/16 15:07:46] d2.utils.events INFO:  eta: 5:36:48  iter: 619  total_loss: 0.2963  loss_rel: 0.0334  loss_refine_obj: 0  binary_loss: 0.271  loss_mask_segmentation: 0  time: 6.1506  data_time: 0.3372  lr: 5.9819e-05  max_mem: 26592M
[04/16 15:09:59] d2.utils.events INFO:  eta: 5:35:41  iter: 639  total_loss: 0.2881  loss_rel: 0.03073  loss_refine_obj: 0  binary_loss: 0.2651  loss_mask_segmentation: 0  time: 6.1662  data_time: 0.3041  lr: 6.0944e-05  max_mem: 26592M
[04/16 15:11:56] d2.utils.events INFO:  eta: 5:33:01  iter: 659  total_loss: 0.2945  loss_rel: 0.02352  loss_refine_obj: 0  binary_loss: 0.2498  loss_mask_segmentation: 0  time: 6.1555  data_time: 0.3097  lr: 6.2069e-05  max_mem: 26592M
[04/16 15:13:53] d2.utils.events INFO:  eta: 5:30:29  iter: 679  total_loss: 0.2875  loss_rel: 0.02405  loss_refine_obj: 0  binary_loss: 0.2581  loss_mask_segmentation: 0  time: 6.1470  data_time: 0.3074  lr: 6.3194e-05  max_mem: 26592M
[04/16 15:16:08] d2.utils.events INFO:  eta: 5:28:40  iter: 699  total_loss: 0.2905  loss_rel: 0.03253  loss_refine_obj: 0  binary_loss: 0.2434  loss_mask_segmentation: 0  time: 6.1640  data_time: 0.3305  lr: 6.4319e-05  max_mem: 26592M
[04/16 15:18:07] d2.utils.events INFO:  eta: 5:26:09  iter: 719  total_loss: 0.2969  loss_rel: 0.02304  loss_refine_obj: 0  binary_loss: 0.2606  loss_mask_segmentation: 0  time: 6.1588  data_time: 0.3000  lr: 6.5444e-05  max_mem: 26592M
[04/16 15:20:16] d2.utils.events INFO:  eta: 5:24:50  iter: 739  total_loss: 0.2962  loss_rel: 0.02536  loss_refine_obj: 0  binary_loss: 0.2694  loss_mask_segmentation: 0  time: 6.1668  data_time: 0.3557  lr: 6.6569e-05  max_mem: 26592M
[04/16 15:22:15] d2.utils.events INFO:  eta: 5:23:03  iter: 759  total_loss: 0.2979  loss_rel: 0.01913  loss_refine_obj: 0  binary_loss: 0.2704  loss_mask_segmentation: 0  time: 6.1601  data_time: 0.3063  lr: 6.7694e-05  max_mem: 26592M
[04/16 15:24:26] d2.utils.events INFO:  eta: 5:21:43  iter: 779  total_loss: 0.3054  loss_rel: 0.02389  loss_refine_obj: 0  binary_loss: 0.2751  loss_mask_segmentation: 0  time: 6.1703  data_time: 0.3176  lr: 6.8819e-05  max_mem: 26592M
[04/16 15:26:34] d2.utils.events INFO:  eta: 5:19:57  iter: 799  total_loss: 0.2863  loss_rel: 0.03307  loss_refine_obj: 0  binary_loss: 0.2455  loss_mask_segmentation: 0  time: 6.1765  data_time: 0.3282  lr: 6.9944e-05  max_mem: 26592M
[04/16 15:28:45] d2.utils.events INFO:  eta: 5:18:07  iter: 819  total_loss: 0.2801  loss_rel: 0.01802  loss_refine_obj: 0  binary_loss: 0.2574  loss_mask_segmentation: 0  time: 6.1849  data_time: 0.3470  lr: 7.1069e-05  max_mem: 26592M
[04/16 15:30:54] d2.utils.events INFO:  eta: 5:16:23  iter: 839  total_loss: 0.2729  loss_rel: 0.02055  loss_refine_obj: 0  binary_loss: 0.249  loss_mask_segmentation: 0  time: 6.1909  data_time: 0.3274  lr: 7.2194e-05  max_mem: 26592M
[04/16 15:33:01] d2.utils.events INFO:  eta: 5:14:46  iter: 859  total_loss: 0.3024  loss_rel: 0.02166  loss_refine_obj: 0  binary_loss: 0.2728  loss_mask_segmentation: 0  time: 6.1954  data_time: 0.3122  lr: 7.3319e-05  max_mem: 26592M
[04/16 15:35:08] d2.utils.events INFO:  eta: 5:13:00  iter: 879  total_loss: 0.3015  loss_rel: 0.03539  loss_refine_obj: 0  binary_loss: 0.2609  loss_mask_segmentation: 0  time: 6.1989  data_time: 0.3221  lr: 7.4444e-05  max_mem: 26592M
[04/16 15:37:10] d2.utils.events INFO:  eta: 5:11:00  iter: 899  total_loss: 0.2589  loss_rel: 0.0207  loss_refine_obj: 0  binary_loss: 0.2414  loss_mask_segmentation: 0  time: 6.1967  data_time: 0.3416  lr: 7.5569e-05  max_mem: 26592M
[04/16 15:39:08] d2.utils.events INFO:  eta: 5:08:58  iter: 919  total_loss: 0.2921  loss_rel: 0.03138  loss_refine_obj: 0  binary_loss: 0.2628  loss_mask_segmentation: 0  time: 6.1896  data_time: 0.3263  lr: 7.6694e-05  max_mem: 26592M
[04/16 15:41:13] d2.utils.events INFO:  eta: 5:06:58  iter: 939  total_loss: 0.2769  loss_rel: 0.02582  loss_refine_obj: 0  binary_loss: 0.2513  loss_mask_segmentation: 0  time: 6.1905  data_time: 0.3549  lr: 7.7819e-05  max_mem: 26592M
[04/16 15:43:18] d2.utils.events INFO:  eta: 5:04:59  iter: 959  total_loss: 0.3129  loss_rel: 0.02569  loss_refine_obj: 0  binary_loss: 0.2729  loss_mask_segmentation: 0  time: 6.1919  data_time: 0.2929  lr: 7.8944e-05  max_mem: 26592M
[04/16 15:45:31] d2.utils.events INFO:  eta: 5:03:06  iter: 979  total_loss: 0.2631  loss_rel: 0.02285  loss_refine_obj: 0  binary_loss: 0.2429  loss_mask_segmentation: 0  time: 6.2012  data_time: 0.3107  lr: 8.0069e-05  max_mem: 26592M
[04/16 15:47:32] d2.utils.events INFO:  eta: 5:01:05  iter: 999  total_loss: 0.2854  loss_rel: 0.01834  loss_refine_obj: 0  binary_loss: 0.2659  loss_mask_segmentation: 0  time: 6.1988  data_time: 0.3513  lr: 8.1194e-05  max_mem: 26592M
[04/16 15:49:47] d2.utils.events INFO:  eta: 4:59:15  iter: 1019  total_loss: 0.2842  loss_rel: 0.01634  loss_refine_obj: 0  binary_loss: 0.2755  loss_mask_segmentation: 0  time: 6.2088  data_time: 0.3357  lr: 8.2319e-05  max_mem: 26592M
[04/16 15:51:54] d2.utils.events INFO:  eta: 4:58:09  iter: 1039  total_loss: 0.2809  loss_rel: 0.01529  loss_refine_obj: 0  binary_loss: 0.2558  loss_mask_segmentation: 0  time: 6.2117  data_time: 0.3405  lr: 8.3444e-05  max_mem: 26592M
[04/16 15:53:59] d2.utils.events INFO:  eta: 4:56:16  iter: 1059  total_loss: 0.2659  loss_rel: 0.01744  loss_refine_obj: 0  binary_loss: 0.2437  loss_mask_segmentation: 0  time: 6.2126  data_time: 0.3162  lr: 8.4569e-05  max_mem: 26592M
[04/16 15:56:01] d2.utils.events INFO:  eta: 4:54:39  iter: 1079  total_loss: 0.2648  loss_rel: 0.02228  loss_refine_obj: 0  binary_loss: 0.2525  loss_mask_segmentation: 0  time: 6.2107  data_time: 0.3374  lr: 8.5694e-05  max_mem: 26592M
[04/16 15:58:16] d2.utils.events INFO:  eta: 4:53:04  iter: 1099  total_loss: 0.2904  loss_rel: 0.01588  loss_refine_obj: 0  binary_loss: 0.268  loss_mask_segmentation: 0  time: 6.2200  data_time: 0.3285  lr: 8.6819e-05  max_mem: 26592M
[04/16 16:00:16] d2.utils.events INFO:  eta: 4:51:10  iter: 1119  total_loss: 0.2976  loss_rel: 0.02174  loss_refine_obj: 0  binary_loss: 0.284  loss_mask_segmentation: 0  time: 6.2164  data_time: 0.3354  lr: 8.7944e-05  max_mem: 26592M
[04/16 16:02:12] d2.utils.events INFO:  eta: 4:49:14  iter: 1139  total_loss: 0.293  loss_rel: 0.01684  loss_refine_obj: 0  binary_loss: 0.2738  loss_mask_segmentation: 0  time: 6.2092  data_time: 0.3257  lr: 8.9069e-05  max_mem: 26592M
[04/16 16:04:25] d2.utils.events INFO:  eta: 4:47:43  iter: 1159  total_loss: 0.2876  loss_rel: 0.01232  loss_refine_obj: 0  binary_loss: 0.2472  loss_mask_segmentation: 0  time: 6.2164  data_time: 0.3513  lr: 9.0194e-05  max_mem: 26592M
[04/16 16:06:35] d2.utils.events INFO:  eta: 4:45:52  iter: 1179  total_loss: 0.2663  loss_rel: 0.02491  loss_refine_obj: 0  binary_loss: 0.2382  loss_mask_segmentation: 0  time: 6.2211  data_time: 0.3158  lr: 9.1319e-05  max_mem: 26592M
[04/16 16:08:40] d2.utils.events INFO:  eta: 4:44:50  iter: 1199  total_loss: 0.2835  loss_rel: 0.01776  loss_refine_obj: 0  binary_loss: 0.2539  loss_mask_segmentation: 0  time: 6.2216  data_time: 0.3120  lr: 9.2444e-05  max_mem: 26592M
[04/16 16:10:46] d2.utils.events INFO:  eta: 4:42:09  iter: 1219  total_loss: 0.2763  loss_rel: 0.01469  loss_refine_obj: 0  binary_loss: 0.2592  loss_mask_segmentation: 0  time: 6.2226  data_time: 0.3210  lr: 9.3569e-05  max_mem: 26592M
[04/16 16:12:53] d2.utils.events INFO:  eta: 4:40:46  iter: 1239  total_loss: 0.2718  loss_rel: 0.014  loss_refine_obj: 0  binary_loss: 0.2576  loss_mask_segmentation: 0  time: 6.2251  data_time: 0.3091  lr: 9.4694e-05  max_mem: 26592M
[04/16 16:15:08] d2.utils.events INFO:  eta: 4:39:38  iter: 1259  total_loss: 0.2664  loss_rel: 0.02106  loss_refine_obj: 0  binary_loss: 0.2417  loss_mask_segmentation: 0  time: 6.2330  data_time: 0.3117  lr: 9.5819e-05  max_mem: 28177M
[04/16 16:17:16] d2.utils.events INFO:  eta: 4:37:48  iter: 1279  total_loss: 0.2832  loss_rel: 0.01698  loss_refine_obj: 0  binary_loss: 0.2659  loss_mask_segmentation: 0  time: 6.2356  data_time: 0.3048  lr: 9.6944e-05  max_mem: 28177M
[04/16 16:19:12] d2.utils.events INFO:  eta: 4:34:31  iter: 1299  total_loss: 0.2865  loss_rel: 0.02085  loss_refine_obj: 0  binary_loss: 0.2524  loss_mask_segmentation: 0  time: 6.2292  data_time: 0.3049  lr: 9.8069e-05  max_mem: 28177M
[04/16 16:21:22] d2.utils.events INFO:  eta: 4:32:49  iter: 1319  total_loss: 0.2633  loss_rel: 0.02024  loss_refine_obj: 0  binary_loss: 0.2385  loss_mask_segmentation: 0  time: 6.2331  data_time: 0.3225  lr: 9.9194e-05  max_mem: 28177M
[04/16 16:23:26] d2.utils.events INFO:  eta: 4:30:04  iter: 1339  total_loss: 0.3011  loss_rel: 0.015  loss_refine_obj: 0  binary_loss: 0.2925  loss_mask_segmentation: 0  time: 6.2323  data_time: 0.3389  lr: 0.00010032  max_mem: 28177M
[04/16 16:25:27] d2.utils.events INFO:  eta: 4:28:14  iter: 1359  total_loss: 0.2688  loss_rel: 0.02168  loss_refine_obj: 0  binary_loss: 0.2453  loss_mask_segmentation: 0  time: 6.2300  data_time: 0.3287  lr: 0.00010144  max_mem: 28177M
[04/16 16:27:32] d2.utils.events INFO:  eta: 4:26:23  iter: 1379  total_loss: 0.2668  loss_rel: 0.01346  loss_refine_obj: 0  binary_loss: 0.256  loss_mask_segmentation: 0  time: 6.2304  data_time: 0.3238  lr: 0.00010257  max_mem: 28177M
[04/16 16:29:33] d2.utils.events INFO:  eta: 4:24:21  iter: 1399  total_loss: 0.2787  loss_rel: 0.01458  loss_refine_obj: 0  binary_loss: 0.2447  loss_mask_segmentation: 0  time: 6.2273  data_time: 0.3355  lr: 0.00010369  max_mem: 28177M
[04/16 16:31:42] d2.utils.events INFO:  eta: 4:23:23  iter: 1419  total_loss: 0.2908  loss_rel: 0.01866  loss_refine_obj: 0  binary_loss: 0.2679  loss_mask_segmentation: 0  time: 6.2310  data_time: 0.3376  lr: 0.00010482  max_mem: 28177M
[04/16 16:33:44] d2.utils.events INFO:  eta: 4:21:24  iter: 1439  total_loss: 0.2949  loss_rel: 0.01436  loss_refine_obj: 0  binary_loss: 0.2779  loss_mask_segmentation: 0  time: 6.2287  data_time: 0.3257  lr: 0.00010594  max_mem: 28177M
[04/16 16:35:48] d2.utils.events INFO:  eta: 4:18:34  iter: 1459  total_loss: 0.2735  loss_rel: 0.01705  loss_refine_obj: 0  binary_loss: 0.2545  loss_mask_segmentation: 0  time: 6.2286  data_time: 0.3288  lr: 0.00010707  max_mem: 28177M
[04/16 16:37:57] d2.utils.events INFO:  eta: 4:17:37  iter: 1479  total_loss: 0.2928  loss_rel: 0.01671  loss_refine_obj: 0  binary_loss: 0.2637  loss_mask_segmentation: 0  time: 6.2310  data_time: 0.3195  lr: 0.00010819  max_mem: 28177M
[04/16 16:40:02] d2.utils.events INFO:  eta: 4:15:34  iter: 1499  total_loss: 0.2598  loss_rel: 0.01556  loss_refine_obj: 0  binary_loss: 0.2465  loss_mask_segmentation: 0  time: 6.2318  data_time: 0.3320  lr: 0.00010932  max_mem: 28177M
[04/16 16:42:12] d2.utils.events INFO:  eta: 4:13:39  iter: 1519  total_loss: 0.2934  loss_rel: 0.01756  loss_refine_obj: 0  binary_loss: 0.2714  loss_mask_segmentation: 0  time: 6.2352  data_time: 0.3696  lr: 0.00011044  max_mem: 28177M
[04/16 16:44:15] d2.utils.events INFO:  eta: 4:11:32  iter: 1539  total_loss: 0.2814  loss_rel: 0.01758  loss_refine_obj: 0  binary_loss: 0.2522  loss_mask_segmentation: 0  time: 6.2342  data_time: 0.3185  lr: 0.00011157  max_mem: 28177M
[04/16 16:46:21] d2.utils.events INFO:  eta: 4:09:20  iter: 1559  total_loss: 0.2743  loss_rel: 0.01565  loss_refine_obj: 0  binary_loss: 0.254  loss_mask_segmentation: 0  time: 6.2350  data_time: 0.3033  lr: 0.00011269  max_mem: 28177M
[04/16 16:48:20] d2.utils.events INFO:  eta: 4:07:10  iter: 1579  total_loss: 0.2743  loss_rel: 0.01445  loss_refine_obj: 0  binary_loss: 0.2621  loss_mask_segmentation: 0  time: 6.2310  data_time: 0.3146  lr: 0.00011382  max_mem: 28177M
[04/16 16:50:31] d2.utils.events INFO:  eta: 4:05:07  iter: 1599  total_loss: 0.2742  loss_rel: 0.01467  loss_refine_obj: 0  binary_loss: 0.2504  loss_mask_segmentation: 0  time: 6.2349  data_time: 0.3318  lr: 0.00011494  max_mem: 28177M
[04/16 16:52:26] d2.utils.events INFO:  eta: 4:01:49  iter: 1619  total_loss: 0.2756  loss_rel: 0.014  loss_refine_obj: 0  binary_loss: 0.2462  loss_mask_segmentation: 0  time: 6.2293  data_time: 0.3376  lr: 0.00011607  max_mem: 28177M
[04/16 16:54:43] d2.utils.events INFO:  eta: 3:59:57  iter: 1639  total_loss: 0.2827  loss_rel: 0.0109  loss_refine_obj: 0  binary_loss: 0.2685  loss_mask_segmentation: 0  time: 6.2364  data_time: 0.3412  lr: 0.00011719  max_mem: 28177M
[04/16 16:56:46] d2.utils.events INFO:  eta: 3:58:47  iter: 1659  total_loss: 0.2733  loss_rel: 0.01329  loss_refine_obj: 0  binary_loss: 0.2572  loss_mask_segmentation: 0  time: 6.2354  data_time: 0.3140  lr: 0.00011832  max_mem: 28177M
[04/16 16:59:01] d2.utils.events INFO:  eta: 3:57:17  iter: 1679  total_loss: 0.2788  loss_rel: 0.01428  loss_refine_obj: 0  binary_loss: 0.2638  loss_mask_segmentation: 0  time: 6.2416  data_time: 0.3392  lr: 0.00011944  max_mem: 28177M
[04/16 17:01:08] d2.utils.events INFO:  eta: 3:55:07  iter: 1699  total_loss: 0.2792  loss_rel: 0.01386  loss_refine_obj: 0  binary_loss: 0.2624  loss_mask_segmentation: 0  time: 6.2426  data_time: 0.3282  lr: 0.00012057  max_mem: 28177M
[04/16 17:03:12] d2.utils.events INFO:  eta: 3:53:17  iter: 1719  total_loss: 0.2723  loss_rel: 0.01394  loss_refine_obj: 0  binary_loss: 0.2584  loss_mask_segmentation: 0  time: 6.2420  data_time: 0.3105  lr: 0.00012169  max_mem: 28177M
[04/16 17:05:20] d2.utils.events INFO:  eta: 3:50:37  iter: 1739  total_loss: 0.2822  loss_rel: 0.01051  loss_refine_obj: 0  binary_loss: 0.2686  loss_mask_segmentation: 0  time: 6.2440  data_time: 0.2964  lr: 0.00012282  max_mem: 28177M
[04/16 17:07:30] d2.utils.events INFO:  eta: 3:48:44  iter: 1759  total_loss: 0.2654  loss_rel: 0.0141  loss_refine_obj: 0  binary_loss: 0.2471  loss_mask_segmentation: 0  time: 6.2471  data_time: 0.3210  lr: 0.00012394  max_mem: 28177M
[04/16 17:09:35] d2.utils.events INFO:  eta: 3:46:32  iter: 1779  total_loss: 0.2526  loss_rel: 0.01029  loss_refine_obj: 0  binary_loss: 0.2438  loss_mask_segmentation: 0  time: 6.2472  data_time: 0.3358  lr: 0.00012507  max_mem: 28177M
[04/16 17:11:43] d2.utils.events INFO:  eta: 3:44:44  iter: 1799  total_loss: 0.2878  loss_rel: 0.009487  loss_refine_obj: 0  binary_loss: 0.2764  loss_mask_segmentation: 0  time: 6.2486  data_time: 0.3808  lr: 0.00012619  max_mem: 28177M
[04/16 17:13:52] d2.utils.events INFO:  eta: 3:42:23  iter: 1819  total_loss: 0.2789  loss_rel: 0.01113  loss_refine_obj: 0  binary_loss: 0.2741  loss_mask_segmentation: 0  time: 6.2506  data_time: 0.3088  lr: 0.00012732  max_mem: 28177M
[04/16 17:15:43] d2.utils.events INFO:  eta: 3:39:27  iter: 1839  total_loss: 0.2795  loss_rel: 0.01397  loss_refine_obj: 0  binary_loss: 0.2671  loss_mask_segmentation: 0  time: 6.2434  data_time: 0.2911  lr: 0.00012844  max_mem: 28177M
[04/16 17:17:59] d2.utils.events INFO:  eta: 3:37:51  iter: 1859  total_loss: 0.2566  loss_rel: 0.01182  loss_refine_obj: 0  binary_loss: 0.2333  loss_mask_segmentation: 0  time: 6.2491  data_time: 0.3105  lr: 0.00012957  max_mem: 28177M
[04/16 17:20:02] d2.utils.events INFO:  eta: 3:35:33  iter: 1879  total_loss: 0.2857  loss_rel: 0.009162  loss_refine_obj: 0  binary_loss: 0.27  loss_mask_segmentation: 0  time: 6.2479  data_time: 0.3329  lr: 0.00013069  max_mem: 28177M
[04/16 17:22:05] d2.utils.events INFO:  eta: 3:33:31  iter: 1899  total_loss: 0.2836  loss_rel: 0.01063  loss_refine_obj: 0  binary_loss: 0.2627  loss_mask_segmentation: 0  time: 6.2472  data_time: 0.3237  lr: 0.00013182  max_mem: 28177M
[04/16 17:24:11] d2.utils.events INFO:  eta: 3:31:59  iter: 1919  total_loss: 0.2654  loss_rel: 0.00864  loss_refine_obj: 0  binary_loss: 0.2569  loss_mask_segmentation: 0  time: 6.2474  data_time: 0.3332  lr: 0.00013294  max_mem: 28177M
[04/16 17:26:27] d2.utils.events INFO:  eta: 3:30:15  iter: 1939  total_loss: 0.2579  loss_rel: 0.01039  loss_refine_obj: 0  binary_loss: 0.2508  loss_mask_segmentation: 0  time: 6.2530  data_time: 0.3480  lr: 0.00013407  max_mem: 28177M
[04/16 17:28:25] d2.utils.events INFO:  eta: 3:27:27  iter: 1959  total_loss: 0.2674  loss_rel: 0.009004  loss_refine_obj: 0  binary_loss: 0.2546  loss_mask_segmentation: 0  time: 6.2495  data_time: 0.3315  lr: 0.00013519  max_mem: 28177M
[04/16 17:30:38] d2.utils.events INFO:  eta: 3:25:38  iter: 1979  total_loss: 0.282  loss_rel: 0.01057  loss_refine_obj: 0  binary_loss: 0.2549  loss_mask_segmentation: 0  time: 6.2534  data_time: 0.3228  lr: 0.00013632  max_mem: 28177M
[04/16 17:32:37] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-vctree-short/model_0001999.pth
[04/16 17:33:03] d2.utils.events INFO:  eta: 3:23:23  iter: 1999  total_loss: 0.2696  loss_rel: 0.0144  loss_refine_obj: 0  binary_loss: 0.2474  loss_mask_segmentation: 0  time: 6.2505  data_time: 0.3276  lr: 0.00013744  max_mem: 28177M
[04/16 17:35:11] d2.utils.events INFO:  eta: 3:21:34  iter: 2019  total_loss: 0.2907  loss_rel: 0.006512  loss_refine_obj: 0  binary_loss: 0.2826  loss_mask_segmentation: 0  time: 6.2518  data_time: 0.3155  lr: 0.00013857  max_mem: 28177M
[04/16 17:37:15] d2.utils.events INFO:  eta: 3:19:17  iter: 2039  total_loss: 0.2566  loss_rel: 0.007242  loss_refine_obj: 0  binary_loss: 0.2472  loss_mask_segmentation: 0  time: 6.2516  data_time: 0.3117  lr: 0.00013969  max_mem: 28177M
[04/16 17:39:18] d2.utils.events INFO:  eta: 3:16:59  iter: 2059  total_loss: 0.2513  loss_rel: 0.004706  loss_refine_obj: 0  binary_loss: 0.2349  loss_mask_segmentation: 0  time: 6.2503  data_time: 0.3014  lr: 0.00014082  max_mem: 28177M
[04/16 17:41:12] d2.utils.events INFO:  eta: 3:14:38  iter: 2079  total_loss: 0.2959  loss_rel: 0.01055  loss_refine_obj: 0  binary_loss: 0.2806  loss_mask_segmentation: 0  time: 6.2449  data_time: 0.3697  lr: 0.00014194  max_mem: 28177M
[04/16 17:43:18] d2.utils.events INFO:  eta: 3:12:04  iter: 2099  total_loss: 0.2811  loss_rel: 0.0101  loss_refine_obj: 0  binary_loss: 0.2683  loss_mask_segmentation: 0  time: 6.2457  data_time: 0.3252  lr: 0.00014307  max_mem: 28177M
[04/16 17:45:28] d2.utils.events INFO:  eta: 3:10:08  iter: 2119  total_loss: 0.2646  loss_rel: 0.01133  loss_refine_obj: 0  binary_loss: 0.2518  loss_mask_segmentation: 0  time: 6.2478  data_time: 0.3232  lr: 0.00014419  max_mem: 28177M
[04/16 17:47:26] d2.utils.events INFO:  eta: 3:08:45  iter: 2139  total_loss: 0.2908  loss_rel: 0.01675  loss_refine_obj: 0  binary_loss: 0.2662  loss_mask_segmentation: 0  time: 6.2449  data_time: 0.3350  lr: 0.00014532  max_mem: 28177M
[04/16 17:49:19] d2.utils.events INFO:  eta: 3:06:00  iter: 2159  total_loss: 0.2748  loss_rel: 0.006813  loss_refine_obj: 0  binary_loss: 0.2593  loss_mask_segmentation: 0  time: 6.2392  data_time: 0.2849  lr: 0.00014644  max_mem: 28177M
[04/16 17:51:29] d2.utils.events INFO:  eta: 3:03:54  iter: 2179  total_loss: 0.2921  loss_rel: 0.01081  loss_refine_obj: 0  binary_loss: 0.2858  loss_mask_segmentation: 0  time: 6.2415  data_time: 0.3134  lr: 0.00014757  max_mem: 28177M
[04/16 17:53:35] d2.utils.events INFO:  eta: 3:01:57  iter: 2199  total_loss: 0.2703  loss_rel: 0.01161  loss_refine_obj: 0  binary_loss: 0.2554  loss_mask_segmentation: 0  time: 6.2420  data_time: 0.3570  lr: 0.00014869  max_mem: 28177M
[04/16 17:55:37] d2.utils.events INFO:  eta: 2:59:58  iter: 2219  total_loss: 0.2684  loss_rel: 0.009749  loss_refine_obj: 0  binary_loss: 0.2556  loss_mask_segmentation: 0  time: 6.2406  data_time: 0.3106  lr: 0.00014982  max_mem: 28177M
[04/16 17:57:39] d2.utils.events INFO:  eta: 2:57:50  iter: 2239  total_loss: 0.278  loss_rel: 0.006447  loss_refine_obj: 0  binary_loss: 0.2688  loss_mask_segmentation: 0  time: 6.2394  data_time: 0.3045  lr: 0.00015094  max_mem: 28177M
[04/16 17:59:39] d2.utils.events INFO:  eta: 2:55:07  iter: 2259  total_loss: 0.2832  loss_rel: 0.006749  loss_refine_obj: 0  binary_loss: 0.268  loss_mask_segmentation: 0  time: 6.2373  data_time: 0.3190  lr: 0.00015207  max_mem: 28177M
[04/16 18:01:48] d2.utils.events INFO:  eta: 2:53:02  iter: 2279  total_loss: 0.2629  loss_rel: 0.009621  loss_refine_obj: 0  binary_loss: 0.2539  loss_mask_segmentation: 0  time: 6.2391  data_time: 0.3383  lr: 0.00015319  max_mem: 28177M
[04/16 18:03:53] d2.utils.events INFO:  eta: 2:51:39  iter: 2299  total_loss: 0.2562  loss_rel: 0.008156  loss_refine_obj: 0  binary_loss: 0.2389  loss_mask_segmentation: 0  time: 6.2393  data_time: 0.3243  lr: 0.00015432  max_mem: 28177M
[04/16 18:05:50] d2.utils.events INFO:  eta: 2:48:55  iter: 2319  total_loss: 0.2734  loss_rel: 0.01239  loss_refine_obj: 0  binary_loss: 0.2562  loss_mask_segmentation: 0  time: 6.2358  data_time: 0.3207  lr: 0.00015544  max_mem: 28177M
[04/16 18:07:55] d2.utils.events INFO:  eta: 2:46:48  iter: 2339  total_loss: 0.2507  loss_rel: 0.01018  loss_refine_obj: 0  binary_loss: 0.2356  loss_mask_segmentation: 0  time: 6.2359  data_time: 0.3524  lr: 0.00015657  max_mem: 28177M
[04/16 18:10:09] d2.utils.events INFO:  eta: 2:44:58  iter: 2359  total_loss: 0.269  loss_rel: 0.007675  loss_refine_obj: 0  binary_loss: 0.2574  loss_mask_segmentation: 0  time: 6.2398  data_time: 0.2916  lr: 0.00015769  max_mem: 28177M
[04/16 18:12:03] d2.utils.events INFO:  eta: 2:42:53  iter: 2379  total_loss: 0.2781  loss_rel: 0.00548  loss_refine_obj: 0  binary_loss: 0.2684  loss_mask_segmentation: 0  time: 6.2351  data_time: 0.3139  lr: 0.00015882  max_mem: 28177M
[04/16 18:14:02] d2.utils.events INFO:  eta: 2:40:52  iter: 2399  total_loss: 0.2726  loss_rel: 0.01179  loss_refine_obj: 0  binary_loss: 0.2534  loss_mask_segmentation: 0  time: 6.2329  data_time: 0.3064  lr: 0.00015994  max_mem: 28177M
[04/16 18:16:06] d2.utils.events INFO:  eta: 2:38:02  iter: 2419  total_loss: 0.2719  loss_rel: 0.005685  loss_refine_obj: 0  binary_loss: 0.2689  loss_mask_segmentation: 0  time: 6.2326  data_time: 0.3081  lr: 0.00016107  max_mem: 28177M
[04/16 18:17:57] d2.utils.events INFO:  eta: 2:35:48  iter: 2439  total_loss: 0.2867  loss_rel: 0.007559  loss_refine_obj: 0  binary_loss: 0.273  loss_mask_segmentation: 0  time: 6.2270  data_time: 0.3096  lr: 0.00016219  max_mem: 28177M
[04/16 18:20:11] d2.utils.events INFO:  eta: 2:33:58  iter: 2459  total_loss: 0.2543  loss_rel: 0.01158  loss_refine_obj: 0  binary_loss: 0.2396  loss_mask_segmentation: 0  time: 6.2310  data_time: 0.3001  lr: 0.00016332  max_mem: 28177M
[04/16 18:22:09] d2.utils.events INFO:  eta: 2:31:40  iter: 2479  total_loss: 0.2473  loss_rel: 0.01487  loss_refine_obj: 0  binary_loss: 0.2364  loss_mask_segmentation: 0  time: 6.2280  data_time: 0.3377  lr: 0.00016444  max_mem: 28177M
[04/16 18:24:07] d2.utils.events INFO:  eta: 2:29:09  iter: 2499  total_loss: 0.2699  loss_rel: 0.006323  loss_refine_obj: 0  binary_loss: 0.2583  loss_mask_segmentation: 0  time: 6.2255  data_time: 0.3093  lr: 0.00016557  max_mem: 28177M
[04/16 18:26:15] d2.utils.events INFO:  eta: 2:27:05  iter: 2519  total_loss: 0.2567  loss_rel: 0.004442  loss_refine_obj: 0  binary_loss: 0.2432  loss_mask_segmentation: 0  time: 6.2270  data_time: 0.3099  lr: 0.00016669  max_mem: 28177M
[04/16 18:28:11] d2.utils.events INFO:  eta: 2:24:58  iter: 2539  total_loss: 0.2892  loss_rel: 0.006439  loss_refine_obj: 0  binary_loss: 0.26  loss_mask_segmentation: 0  time: 6.2234  data_time: 0.3242  lr: 0.00016782  max_mem: 28177M
[04/16 18:30:20] d2.utils.events INFO:  eta: 2:23:05  iter: 2559  total_loss: 0.3019  loss_rel: 0.005284  loss_refine_obj: 0  binary_loss: 0.2823  loss_mask_segmentation: 0  time: 6.2251  data_time: 0.3025  lr: 0.00016894  max_mem: 28177M
[04/16 18:32:25] d2.utils.events INFO:  eta: 2:21:15  iter: 2579  total_loss: 0.2517  loss_rel: 0.009721  loss_refine_obj: 0  binary_loss: 0.2313  loss_mask_segmentation: 0  time: 6.2254  data_time: 0.3335  lr: 0.00017007  max_mem: 28177M
[04/16 18:34:32] d2.utils.events INFO:  eta: 2:19:12  iter: 2599  total_loss: 0.2593  loss_rel: 0.004048  loss_refine_obj: 0  binary_loss: 0.2563  loss_mask_segmentation: 0  time: 6.2263  data_time: 0.3176  lr: 0.00017119  max_mem: 28177M
[04/16 18:36:39] d2.utils.events INFO:  eta: 2:17:42  iter: 2619  total_loss: 0.2455  loss_rel: 0.006151  loss_refine_obj: 0  binary_loss: 0.2381  loss_mask_segmentation: 0  time: 6.2273  data_time: 0.3162  lr: 0.00017232  max_mem: 28177M
[04/16 18:38:32] d2.utils.events INFO:  eta: 2:14:59  iter: 2639  total_loss: 0.2806  loss_rel: 0.004634  loss_refine_obj: 0  binary_loss: 0.2641  loss_mask_segmentation: 0  time: 6.2228  data_time: 0.3083  lr: 0.00017344  max_mem: 28177M
[04/16 18:40:33] d2.utils.events INFO:  eta: 2:12:47  iter: 2659  total_loss: 0.2813  loss_rel: 0.008787  loss_refine_obj: 0  binary_loss: 0.2687  loss_mask_segmentation: 0  time: 6.2217  data_time: 0.3086  lr: 0.00017457  max_mem: 28177M
[04/16 18:42:42] d2.utils.events INFO:  eta: 2:10:43  iter: 2679  total_loss: 0.2716  loss_rel: 0.004313  loss_refine_obj: 0  binary_loss: 0.2668  loss_mask_segmentation: 0  time: 6.2233  data_time: 0.3259  lr: 0.00017569  max_mem: 28177M
[04/16 18:43:01] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/r09521612/segmentationsg/segmentationsg/engine/sg_trainer.py", line 267, in run_step
    loss_dict = self.model(data, mask_batched_inputs=mask_data)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/meta_arch/rcnn.py", line 213, in forward
    _, mask_detector_losses = self.roi_heads(mask_images, mask_features, mask_proposals, mask_gt_instances, None, segmentation_step=True)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 592, in forward
    _, _, losses = self._forward_scenegraph(features, pred_instances, targets, relations, segmentation_step=segmentation_step)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 725, in _forward_scenegraph
    return self.scenegraph_head(features, instances, targets, relations, segmentation_step=segmentation_step, return_masks=return_masks)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_head.py", line 315, in forward
    refine_logits, relation_logits, add_losses, mask_losses, proposals = self.predictor(proposals, boxes, rel_pair_idxs, rel_labels, rel_binarys, roi_features, union_features, self.logger, mask_box_features=mask_box_features, masks=masks, segmentation_step=segmentation_step, return_masks=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_predictor.py", line 649, in forward
    obj_dists, obj_preds, edge_ctx, binary_preds, mask_losses, proposals = self.context_layer(roi_features, proposals, boxes, rel_pair_idxs, logger, mask_box_features=mask_box_features, masks=masks, segmentation_step=segmentation_step, return_masks=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/vctree/model_vctree.py", line 674, in forward
    mask_losses, proposals = self.segmentation_head(mask_features, masks, proposals, return_masks=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/mask_head.py", line 147, in forward
    x = self.layers(x)
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/modeling/roi_heads/mask_head.py", line 283, in layers
    x = layer(x)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 98, in forward
    return F.relu(input, inplace=self.inplace)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/functional.py", line 1299, in relu
    result = torch.relu(input)
RuntimeError: CUDA out of memory. Tried to allocate 1.74 GiB (GPU 0; 31.75 GiB total capacity; 25.38 GiB already allocated; 1.20 GiB free; 29.16 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/16 18:43:01] d2.engine.hooks INFO: Overall training speed: 2680 iterations in 4:38:04 (6.2257 s / it)
[04/16 18:43:01] d2.engine.hooks INFO: Total training time: 4:38:37 (0:00:32 on hooks)
[04/16 18:43:01] d2.utils.events INFO:  eta: 2:10:31  iter: 2682  total_loss: 0.2665  loss_rel: 0.002795  loss_refine_obj: 0  binary_loss: 0.2614  loss_mask_segmentation: 0  time: 6.2234  data_time: 0.3258  lr: 0.00017581  max_mem: 28177M
[04/17 08:26:34] detectron2 INFO: Rank of current process: 0. World size: 1
[04/17 08:26:36] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/17 08:26:36] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17544', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-vctree-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'VCTreeSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/17 08:26:36] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/17 08:26:36] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mVCTreeSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-vctree-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/17 08:26:36] detectron2 INFO: Full config saved to ../output-step3-predcl-vctree-short/config.yaml
[04/17 08:26:37] d2.utils.env INFO: Using a generated random seed 37397391
[04/17 08:26:37] d2.engine.defaults INFO: Auto-scaling the config to batch_size=4, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/17 08:26:58] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/17 08:26:59] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): VCTreeSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (ctx_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): VCTreeLSTMSegmentationContextC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (overlap_embed): Sequential(
            (0): Linear(in_features=6, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (box_embed): Sequential(
            (0): Linear(in_features=9, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (bi_freq_prior): Linear(in_features=4, out_features=1, bias=False)
          (obj_reduce): Linear(in_features=1024, out_features=128, bias=True)
          (emb_reduce): Linear(in_features=200, out_features=128, bias=True)
          (score_pre): Linear(in_features=512, out_features=512, bias=True)
          (score_sub): Linear(in_features=512, out_features=512, bias=True)
          (score_obj): Linear(in_features=512, out_features=512, bias=True)
          (vision_prior): Linear(in_features=1537, out_features=1, bias=True)
          (obj_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1352, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (iofux): Linear(in_features=1352, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (edge_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1736, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (iofux): Linear(in_features=1736, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/17 08:26:59] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/17 08:26:59] d2.data.build INFO: Removed 0 images with no usable annotations. 342 images left.
[04/17 08:26:59] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 17669        |
|              |              |[0m
[04/17 08:26:59] d2.data.build INFO: Using training sampler TrainingSampler
[04/17 08:26:59] d2.data.common INFO: Serializing 342 elements to byte tensors and concatenating them all ...
[04/17 08:26:59] d2.data.common INFO: Serialized dataset takes 2.38 MiB
[04/17 08:26:59] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/17 08:27:07] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/17 08:27:07] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/17 08:27:07] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/17 08:27:07] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/17 08:27:07] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/17 08:27:07] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/17 08:27:07] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step3-predcl-vctree-short/model_0001999.pth ...
[04/17 08:27:31] fvcore.common.checkpoint INFO: Loading trainer from ../output-step3-predcl-vctree-short/model_0001999.pth ...
[04/17 08:27:31] d2.engine.hooks INFO: Loading scheduler from state_dict ...
[04/17 08:27:32] d2.engine.train_loop INFO: Starting training from iteration 2000
[04/17 08:29:27] d2.utils.events INFO:  eta: 3:04:44  iter: 2019  total_loss: 0.264  loss_rel: 0.01261  loss_refine_obj: 0  binary_loss: 0.2315  loss_mask_segmentation: 0  time: 5.6330  data_time: 0.4235  lr: 0.00013857  max_mem: 21234M
[04/17 08:31:10] d2.utils.events INFO:  eta: 2:59:12  iter: 2039  total_loss: 0.2813  loss_rel: 0.01433  loss_refine_obj: 0  binary_loss: 0.2553  loss_mask_segmentation: 0  time: 5.3867  data_time: 0.2930  lr: 0.00013969  max_mem: 21234M
[04/17 08:32:54] d2.utils.events INFO:  eta: 2:51:31  iter: 2059  total_loss: 0.2974  loss_rel: 0.008754  loss_refine_obj: 0  binary_loss: 0.2874  loss_mask_segmentation: 0  time: 5.3252  data_time: 0.2969  lr: 0.00014082  max_mem: 21234M
[04/17 08:34:39] d2.utils.events INFO:  eta: 2:47:43  iter: 2079  total_loss: 0.2732  loss_rel: 0.01176  loss_refine_obj: 0  binary_loss: 0.256  loss_mask_segmentation: 0  time: 5.2964  data_time: 0.3057  lr: 0.00014194  max_mem: 24029M
[04/17 08:36:32] d2.utils.events INFO:  eta: 2:47:42  iter: 2099  total_loss: 0.2615  loss_rel: 0.01129  loss_refine_obj: 0  binary_loss: 0.2475  loss_mask_segmentation: 0  time: 5.3743  data_time: 0.3365  lr: 0.00014307  max_mem: 24029M
[04/17 08:38:19] d2.utils.events INFO:  eta: 2:45:48  iter: 2119  total_loss: 0.2895  loss_rel: 0.01329  loss_refine_obj: 0  binary_loss: 0.2714  loss_mask_segmentation: 0  time: 5.3688  data_time: 0.3081  lr: 0.00014419  max_mem: 24029M
[04/17 08:40:13] d2.utils.events INFO:  eta: 2:44:19  iter: 2139  total_loss: 0.2637  loss_rel: 0.0119  loss_refine_obj: 0  binary_loss: 0.2509  loss_mask_segmentation: 0  time: 5.4142  data_time: 0.3226  lr: 0.00014532  max_mem: 24029M
[04/17 08:42:08] d2.utils.events INFO:  eta: 2:46:46  iter: 2159  total_loss: 0.2755  loss_rel: 0.009648  loss_refine_obj: 0  binary_loss: 0.2509  loss_mask_segmentation: 0  time: 5.4591  data_time: 0.3243  lr: 0.00014644  max_mem: 25656M
[04/17 08:43:50] d2.utils.events INFO:  eta: 2:40:27  iter: 2179  total_loss: 0.2594  loss_rel: 0.008974  loss_refine_obj: 0  binary_loss: 0.2527  loss_mask_segmentation: 0  time: 5.4171  data_time: 0.2899  lr: 0.00014757  max_mem: 25656M
[04/17 08:45:36] d2.utils.events INFO:  eta: 2:38:41  iter: 2199  total_loss: 0.2646  loss_rel: 0.009454  loss_refine_obj: 0  binary_loss: 0.2481  loss_mask_segmentation: 0  time: 5.4036  data_time: 0.3193  lr: 0.00014869  max_mem: 25656M
[04/17 08:47:22] d2.utils.events INFO:  eta: 2:36:45  iter: 2219  total_loss: 0.2629  loss_rel: 0.009764  loss_refine_obj: 0  binary_loss: 0.2466  loss_mask_segmentation: 0  time: 5.3953  data_time: 0.3115  lr: 0.00014982  max_mem: 25656M
[04/17 08:49:16] d2.utils.events INFO:  eta: 2:36:17  iter: 2239  total_loss: 0.2904  loss_rel: 0.006132  loss_refine_obj: 0  binary_loss: 0.2775  loss_mask_segmentation: 0  time: 5.4187  data_time: 0.3301  lr: 0.00015094  max_mem: 25656M
[04/17 08:51:03] d2.utils.events INFO:  eta: 2:33:24  iter: 2259  total_loss: 0.2551  loss_rel: 0.01098  loss_refine_obj: 0  binary_loss: 0.2392  loss_mask_segmentation: 0  time: 5.4137  data_time: 0.3237  lr: 0.00015207  max_mem: 25656M
[04/17 08:52:50] d2.utils.events INFO:  eta: 2:31:57  iter: 2279  total_loss: 0.2542  loss_rel: 0.00829  loss_refine_obj: 0  binary_loss: 0.241  loss_mask_segmentation: 0  time: 5.4112  data_time: 0.3087  lr: 0.00015319  max_mem: 25656M
[04/17 08:54:33] d2.utils.events INFO:  eta: 2:29:45  iter: 2299  total_loss: 0.268  loss_rel: 0.009051  loss_refine_obj: 0  binary_loss: 0.2509  loss_mask_segmentation: 0  time: 5.3918  data_time: 0.2901  lr: 0.00015432  max_mem: 25656M
[04/17 08:56:24] d2.utils.events INFO:  eta: 2:28:05  iter: 2319  total_loss: 0.2643  loss_rel: 0.01174  loss_refine_obj: 0  binary_loss: 0.2532  loss_mask_segmentation: 0  time: 5.4014  data_time: 0.3338  lr: 0.00015544  max_mem: 25656M
[04/17 08:58:13] d2.utils.events INFO:  eta: 2:26:20  iter: 2339  total_loss: 0.2927  loss_rel: 0.004508  loss_refine_obj: 0  binary_loss: 0.2857  loss_mask_segmentation: 0  time: 5.4040  data_time: 0.3119  lr: 0.00015657  max_mem: 25656M
[04/17 09:00:02] d2.utils.events INFO:  eta: 2:24:34  iter: 2359  total_loss: 0.2553  loss_rel: 0.01016  loss_refine_obj: 0  binary_loss: 0.2447  loss_mask_segmentation: 0  time: 5.4073  data_time: 0.3193  lr: 0.00015769  max_mem: 25656M
[04/17 09:01:48] d2.utils.events INFO:  eta: 2:22:42  iter: 2379  total_loss: 0.2684  loss_rel: 0.01214  loss_refine_obj: 0  binary_loss: 0.2558  loss_mask_segmentation: 0  time: 5.4007  data_time: 0.3072  lr: 0.00015882  max_mem: 25656M
[04/17 09:03:36] d2.utils.events INFO:  eta: 2:20:50  iter: 2399  total_loss: 0.2619  loss_rel: 0.006663  loss_refine_obj: 0  binary_loss: 0.2544  loss_mask_segmentation: 0  time: 5.4018  data_time: 0.3401  lr: 0.00015994  max_mem: 25656M
[04/17 09:05:26] d2.utils.events INFO:  eta: 2:19:04  iter: 2419  total_loss: 0.264  loss_rel: 0.006223  loss_refine_obj: 0  binary_loss: 0.252  loss_mask_segmentation: 0  time: 5.4053  data_time: 0.3130  lr: 0.00016107  max_mem: 25656M
[04/17 09:07:15] d2.utils.events INFO:  eta: 2:17:17  iter: 2439  total_loss: 0.2595  loss_rel: 0.01322  loss_refine_obj: 0  binary_loss: 0.2511  loss_mask_segmentation: 0  time: 5.4081  data_time: 0.3043  lr: 0.00016219  max_mem: 25656M
[04/17 09:09:00] d2.utils.events INFO:  eta: 2:15:16  iter: 2459  total_loss: 0.2689  loss_rel: 0.007844  loss_refine_obj: 0  binary_loss: 0.2568  loss_mask_segmentation: 0  time: 5.3999  data_time: 0.3012  lr: 0.00016332  max_mem: 25656M
[04/17 09:10:52] d2.utils.events INFO:  eta: 2:13:45  iter: 2479  total_loss: 0.2778  loss_rel: 0.006809  loss_refine_obj: 0  binary_loss: 0.2629  loss_mask_segmentation: 0  time: 5.4095  data_time: 0.3389  lr: 0.00016444  max_mem: 25656M
[04/17 09:12:33] d2.utils.events INFO:  eta: 2:11:34  iter: 2499  total_loss: 0.2698  loss_rel: 0.008209  loss_refine_obj: 0  binary_loss: 0.2547  loss_mask_segmentation: 0  time: 5.3944  data_time: 0.3326  lr: 0.00016557  max_mem: 25656M
[04/17 09:14:25] d2.utils.events INFO:  eta: 2:10:00  iter: 2519  total_loss: 0.2703  loss_rel: 0.005822  loss_refine_obj: 0  binary_loss: 0.2597  loss_mask_segmentation: 0  time: 5.4016  data_time: 0.3297  lr: 0.00016669  max_mem: 25656M
[04/17 09:16:06] d2.utils.events INFO:  eta: 2:07:41  iter: 2539  total_loss: 0.2839  loss_rel: 0.005053  loss_refine_obj: 0  binary_loss: 0.2799  loss_mask_segmentation: 0  time: 5.3886  data_time: 0.2984  lr: 0.00016782  max_mem: 25656M
[04/17 09:17:57] d2.utils.events INFO:  eta: 2:06:07  iter: 2559  total_loss: 0.2664  loss_rel: 0.009117  loss_refine_obj: 0  binary_loss: 0.2499  loss_mask_segmentation: 0  time: 5.3953  data_time: 0.3144  lr: 0.00016894  max_mem: 25656M
[04/17 09:19:50] d2.utils.events INFO:  eta: 2:04:33  iter: 2579  total_loss: 0.2564  loss_rel: 0.009561  loss_refine_obj: 0  binary_loss: 0.2445  loss_mask_segmentation: 0  time: 5.4029  data_time: 0.3402  lr: 0.00017007  max_mem: 25656M
[04/17 09:21:34] d2.utils.events INFO:  eta: 2:02:28  iter: 2599  total_loss: 0.2591  loss_rel: 0.007688  loss_refine_obj: 0  binary_loss: 0.24  loss_mask_segmentation: 0  time: 5.3976  data_time: 0.2992  lr: 0.00017119  max_mem: 25656M
[04/17 09:23:27] d2.utils.events INFO:  eta: 2:01:02  iter: 2619  total_loss: 0.2538  loss_rel: 0.006863  loss_refine_obj: 0  binary_loss: 0.2437  loss_mask_segmentation: 0  time: 5.4050  data_time: 0.3192  lr: 0.00017232  max_mem: 25656M
[04/17 09:25:14] d2.utils.events INFO:  eta: 1:59:10  iter: 2639  total_loss: 0.2958  loss_rel: 0.007334  loss_refine_obj: 0  binary_loss: 0.2788  loss_mask_segmentation: 0  time: 5.4025  data_time: 0.3160  lr: 0.00017344  max_mem: 25656M
[04/17 09:26:59] d2.utils.events INFO:  eta: 1:57:19  iter: 2659  total_loss: 0.2653  loss_rel: 0.005617  loss_refine_obj: 0  binary_loss: 0.2605  loss_mask_segmentation: 0  time: 5.3985  data_time: 0.3123  lr: 0.00017457  max_mem: 25656M
[04/17 09:28:45] d2.utils.events INFO:  eta: 1:55:34  iter: 2679  total_loss: 0.2557  loss_rel: 0.006161  loss_refine_obj: 0  binary_loss: 0.2397  loss_mask_segmentation: 0  time: 5.3959  data_time: 0.3080  lr: 0.00017569  max_mem: 25656M
[04/17 09:30:37] d2.utils.events INFO:  eta: 1:54:06  iter: 2699  total_loss: 0.2814  loss_rel: 0.00615  loss_refine_obj: 0  binary_loss: 0.2702  loss_mask_segmentation: 0  time: 5.4008  data_time: 0.3263  lr: 0.00017682  max_mem: 25656M
[04/17 09:32:26] d2.utils.events INFO:  eta: 1:52:38  iter: 2719  total_loss: 0.2962  loss_rel: 0.004542  loss_refine_obj: 0  binary_loss: 0.288  loss_mask_segmentation: 0  time: 5.4031  data_time: 0.3395  lr: 0.00017794  max_mem: 25656M
[04/17 09:34:08] d2.utils.events INFO:  eta: 1:50:36  iter: 2739  total_loss: 0.2648  loss_rel: 0.005249  loss_refine_obj: 0  binary_loss: 0.2516  loss_mask_segmentation: 0  time: 5.3940  data_time: 0.3092  lr: 0.00017907  max_mem: 25656M
[04/17 09:35:56] d2.utils.events INFO:  eta: 1:49:02  iter: 2759  total_loss: 0.2486  loss_rel: 0.008741  loss_refine_obj: 0  binary_loss: 0.2364  loss_mask_segmentation: 0  time: 5.3948  data_time: 0.3380  lr: 0.00018019  max_mem: 25656M
[04/17 09:37:44] d2.utils.events INFO:  eta: 1:47:23  iter: 2779  total_loss: 0.2485  loss_rel: 0.005748  loss_refine_obj: 0  binary_loss: 0.2455  loss_mask_segmentation: 0  time: 5.3949  data_time: 0.3090  lr: 0.00018132  max_mem: 25656M
[04/17 09:39:40] d2.utils.events INFO:  eta: 1:45:49  iter: 2799  total_loss: 0.2574  loss_rel: 0.009234  loss_refine_obj: 0  binary_loss: 0.2439  loss_mask_segmentation: 0  time: 5.4046  data_time: 0.3546  lr: 0.00018244  max_mem: 25656M
[04/17 09:41:25] d2.utils.events INFO:  eta: 1:44:14  iter: 2819  total_loss: 0.2663  loss_rel: 0.007238  loss_refine_obj: 0  binary_loss: 0.2626  loss_mask_segmentation: 0  time: 5.4004  data_time: 0.3113  lr: 0.00018357  max_mem: 25656M
[04/17 09:43:14] d2.utils.events INFO:  eta: 1:42:42  iter: 2839  total_loss: 0.2746  loss_rel: 0.008292  loss_refine_obj: 0  binary_loss: 0.2681  loss_mask_segmentation: 0  time: 5.4021  data_time: 0.3173  lr: 0.00018469  max_mem: 25656M
[04/17 09:45:00] d2.utils.events INFO:  eta: 1:40:53  iter: 2859  total_loss: 0.2551  loss_rel: 0.00459  loss_refine_obj: 0  binary_loss: 0.247  loss_mask_segmentation: 0  time: 5.3992  data_time: 0.3311  lr: 0.00018582  max_mem: 25656M
[04/17 09:46:46] d2.utils.events INFO:  eta: 1:39:06  iter: 2879  total_loss: 0.273  loss_rel: 0.006304  loss_refine_obj: 0  binary_loss: 0.2656  loss_mask_segmentation: 0  time: 5.3974  data_time: 0.3255  lr: 0.00018694  max_mem: 25656M
[04/17 09:47:25] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/r09521612/segmentationsg/segmentationsg/engine/sg_trainer.py", line 267, in run_step
    loss_dict = self.model(data, mask_batched_inputs=mask_data)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/meta_arch/rcnn.py", line 213, in forward
    _, mask_detector_losses = self.roi_heads(mask_images, mask_features, mask_proposals, mask_gt_instances, None, segmentation_step=True)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 592, in forward
    _, _, losses = self._forward_scenegraph(features, pred_instances, targets, relations, segmentation_step=segmentation_step)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 725, in _forward_scenegraph
    return self.scenegraph_head(features, instances, targets, relations, segmentation_step=segmentation_step, return_masks=return_masks)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_head.py", line 315, in forward
    refine_logits, relation_logits, add_losses, mask_losses, proposals = self.predictor(proposals, boxes, rel_pair_idxs, rel_labels, rel_binarys, roi_features, union_features, self.logger, mask_box_features=mask_box_features, masks=masks, segmentation_step=segmentation_step, return_masks=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_predictor.py", line 649, in forward
    obj_dists, obj_preds, edge_ctx, binary_preds, mask_losses, proposals = self.context_layer(roi_features, proposals, boxes, rel_pair_idxs, logger, mask_box_features=mask_box_features, masks=masks, segmentation_step=segmentation_step, return_masks=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/vctree/model_vctree.py", line 674, in forward
    mask_losses, proposals = self.segmentation_head(mask_features, masks, proposals, return_masks=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/mask_head.py", line 147, in forward
    x = self.layers(x)
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/modeling/roi_heads/mask_head.py", line 283, in layers
    x = layer(x)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 98, in forward
    return F.relu(input, inplace=self.inplace)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/functional.py", line 1299, in relu
    result = torch.relu(input)
RuntimeError: CUDA out of memory. Tried to allocate 1.75 GiB (GPU 0; 31.75 GiB total capacity; 24.90 GiB already allocated; 1.25 GiB free; 29.11 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/17 09:47:26] d2.engine.hooks INFO: Overall training speed: 885 iterations in 1:19:38 (5.3996 s / it)
[04/17 09:47:26] d2.engine.hooks INFO: Total training time: 1:19:40 (0:00:01 on hooks)
[04/17 09:47:26] d2.utils.events INFO:  eta: 1:38:14  iter: 2887  total_loss: 0.2821  loss_rel: 0.006304  loss_refine_obj: 0  binary_loss: 0.2724  loss_mask_segmentation: 0  time: 5.3933  data_time: 0.3140  lr: 0.00018734  max_mem: 26345M
[04/17 10:04:32] detectron2 INFO: Rank of current process: 0. World size: 1
[04/17 10:04:34] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/17 10:04:34] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17546', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-vctree-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '8', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'VCTreeSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/17 10:04:35] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/17 10:04:35] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mVCTreeSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-vctree-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/17 10:04:35] detectron2 INFO: Full config saved to ../output-step3-predcl-vctree-short/config.yaml
[04/17 10:04:35] d2.utils.env INFO: Using a generated random seed 35727443
[04/17 10:04:35] d2.engine.defaults INFO: Auto-scaling the config to batch_size=2, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/17 10:05:10] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/17 10:05:11] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): VCTreeSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (ctx_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): VCTreeLSTMSegmentationContextC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (overlap_embed): Sequential(
            (0): Linear(in_features=6, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (box_embed): Sequential(
            (0): Linear(in_features=9, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (bi_freq_prior): Linear(in_features=4, out_features=1, bias=False)
          (obj_reduce): Linear(in_features=1024, out_features=128, bias=True)
          (emb_reduce): Linear(in_features=200, out_features=128, bias=True)
          (score_pre): Linear(in_features=512, out_features=512, bias=True)
          (score_sub): Linear(in_features=512, out_features=512, bias=True)
          (score_obj): Linear(in_features=512, out_features=512, bias=True)
          (vision_prior): Linear(in_features=1537, out_features=1, bias=True)
          (obj_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1352, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (iofux): Linear(in_features=1352, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (edge_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1736, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (iofux): Linear(in_features=1736, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/17 10:05:11] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/17 10:05:11] d2.data.build INFO: Removed 0 images with no usable annotations. 342 images left.
[04/17 10:05:11] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 17669        |
|              |              |[0m
[04/17 10:05:11] d2.data.build INFO: Using training sampler TrainingSampler
[04/17 10:05:11] d2.data.common INFO: Serializing 342 elements to byte tensors and concatenating them all ...
[04/17 10:05:11] d2.data.common INFO: Serialized dataset takes 2.38 MiB
[04/17 10:05:11] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/17 10:05:30] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/17 10:05:30] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/17 10:05:30] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/17 10:05:30] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/17 10:05:30] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/17 10:05:30] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/17 10:05:30] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step3-predcl-vctree-short/model_0001999.pth ...
[04/17 10:05:35] fvcore.common.checkpoint INFO: Loading trainer from ../output-step3-predcl-vctree-short/model_0001999.pth ...
[04/17 10:05:35] d2.engine.hooks INFO: Loading scheduler from state_dict ...
[04/17 10:05:35] d2.engine.train_loop INFO: Starting training from iteration 2000
[04/17 10:06:29] d2.utils.events INFO:  eta: 1:19:30  iter: 2019  total_loss: 0.2859  loss_rel: 0.007062  loss_refine_obj: 0  binary_loss: 0.2702  loss_mask_segmentation: 0  time: 2.5079  data_time: 0.1153  lr: 0.00013857  max_mem: 15085M
[04/17 10:07:17] d2.utils.events INFO:  eta: 1:16:34  iter: 2039  total_loss: 0.2832  loss_rel: 0.008286  loss_refine_obj: 0  binary_loss: 0.2413  loss_mask_segmentation: 0  time: 2.4391  data_time: 0.0486  lr: 0.00013969  max_mem: 15085M
[04/17 10:08:14] d2.utils.events INFO:  eta: 1:19:49  iter: 2059  total_loss: 0.2804  loss_rel: 0.01381  loss_refine_obj: 0  binary_loss: 0.2666  loss_mask_segmentation: 0  time: 2.5720  data_time: 0.0414  lr: 0.00014082  max_mem: 16040M
[04/17 10:09:05] d2.utils.events INFO:  eta: 1:19:10  iter: 2079  total_loss: 0.2723  loss_rel: 0.005048  loss_refine_obj: 0  binary_loss: 0.2555  loss_mask_segmentation: 0  time: 2.5671  data_time: 0.0304  lr: 0.00014194  max_mem: 16040M
[04/17 10:10:00] d2.utils.events INFO:  eta: 1:18:33  iter: 2099  total_loss: 0.2383  loss_rel: 0.01925  loss_refine_obj: 0  binary_loss: 0.2147  loss_mask_segmentation: 0  time: 2.6045  data_time: 0.0353  lr: 0.00014307  max_mem: 16040M
[04/17 10:10:54] d2.utils.events INFO:  eta: 1:19:24  iter: 2119  total_loss: 0.2684  loss_rel: 0.01959  loss_refine_obj: 0  binary_loss: 0.2381  loss_mask_segmentation: 0  time: 2.6264  data_time: 0.0343  lr: 0.00014419  max_mem: 16040M
[04/17 10:11:50] d2.utils.events INFO:  eta: 1:19:09  iter: 2139  total_loss: 0.2586  loss_rel: 0.01314  loss_refine_obj: 0  binary_loss: 0.2321  loss_mask_segmentation: 0  time: 2.6498  data_time: 0.0571  lr: 0.00014532  max_mem: 16040M
[04/17 10:12:41] d2.utils.events INFO:  eta: 1:17:42  iter: 2159  total_loss: 0.2487  loss_rel: 0.004747  loss_refine_obj: 0  binary_loss: 0.2419  loss_mask_segmentation: 0  time: 2.6338  data_time: 0.0276  lr: 0.00014644  max_mem: 16040M
[04/17 10:13:30] d2.utils.events INFO:  eta: 1:15:58  iter: 2179  total_loss: 0.2771  loss_rel: 0.009764  loss_refine_obj: 0  binary_loss: 0.2578  loss_mask_segmentation: 0  time: 2.6136  data_time: 0.0364  lr: 0.00014757  max_mem: 16351M
[04/17 10:14:24] d2.utils.events INFO:  eta: 1:15:25  iter: 2199  total_loss: 0.2698  loss_rel: 0.01921  loss_refine_obj: 0  binary_loss: 0.2502  loss_mask_segmentation: 0  time: 2.6252  data_time: 0.0475  lr: 0.00014869  max_mem: 16351M
[04/17 10:15:16] d2.utils.events INFO:  eta: 1:14:32  iter: 2219  total_loss: 0.2786  loss_rel: 0.006185  loss_refine_obj: 0  binary_loss: 0.2702  loss_mask_segmentation: 0  time: 2.6227  data_time: 0.0344  lr: 0.00014982  max_mem: 16351M
[04/17 10:16:06] d2.utils.events INFO:  eta: 1:13:14  iter: 2239  total_loss: 0.2709  loss_rel: 0.00586  loss_refine_obj: 0  binary_loss: 0.26  loss_mask_segmentation: 0  time: 2.6099  data_time: 0.0371  lr: 0.00015094  max_mem: 16351M
[04/17 10:17:01] d2.utils.events INFO:  eta: 1:12:28  iter: 2259  total_loss: 0.2515  loss_rel: 0.006036  loss_refine_obj: 0  binary_loss: 0.2437  loss_mask_segmentation: 0  time: 2.6229  data_time: 0.0379  lr: 0.00015207  max_mem: 16570M
[04/17 10:17:53] d2.utils.events INFO:  eta: 1:11:38  iter: 2279  total_loss: 0.2914  loss_rel: 0.00888  loss_refine_obj: 0  binary_loss: 0.2684  loss_mask_segmentation: 0  time: 2.6202  data_time: 0.0363  lr: 0.00015319  max_mem: 16570M
[04/17 10:18:47] d2.utils.events INFO:  eta: 1:10:57  iter: 2299  total_loss: 0.2528  loss_rel: 0.01085  loss_refine_obj: 0  binary_loss: 0.2374  loss_mask_segmentation: 0  time: 2.6241  data_time: 0.0395  lr: 0.00015432  max_mem: 16570M
[04/17 10:19:40] d2.utils.events INFO:  eta: 1:10:28  iter: 2319  total_loss: 0.2572  loss_rel: 0.01196  loss_refine_obj: 0  binary_loss: 0.2416  loss_mask_segmentation: 0  time: 2.6260  data_time: 0.0373  lr: 0.00015544  max_mem: 16570M
[04/17 10:20:31] d2.utils.events INFO:  eta: 1:09:30  iter: 2339  total_loss: 0.2603  loss_rel: 0.008154  loss_refine_obj: 0  binary_loss: 0.2414  loss_mask_segmentation: 0  time: 2.6212  data_time: 0.0309  lr: 0.00015657  max_mem: 19514M
[04/17 10:21:23] d2.utils.events INFO:  eta: 1:09:02  iter: 2359  total_loss: 0.2453  loss_rel: 0.004184  loss_refine_obj: 0  binary_loss: 0.2324  loss_mask_segmentation: 0  time: 2.6198  data_time: 0.0350  lr: 0.00015769  max_mem: 19514M
[04/17 10:22:15] d2.utils.events INFO:  eta: 1:07:57  iter: 2379  total_loss: 0.2833  loss_rel: 0.009881  loss_refine_obj: 0  binary_loss: 0.2823  loss_mask_segmentation: 0  time: 2.6193  data_time: 0.0711  lr: 0.00015882  max_mem: 19514M
[04/17 10:23:07] d2.utils.events INFO:  eta: 1:07:16  iter: 2399  total_loss: 0.2608  loss_rel: 0.005615  loss_refine_obj: 0  binary_loss: 0.2411  loss_mask_segmentation: 0  time: 2.6179  data_time: 0.0372  lr: 0.00015994  max_mem: 19514M
[04/17 10:24:01] d2.utils.events INFO:  eta: 1:06:31  iter: 2419  total_loss: 0.2638  loss_rel: 0.01187  loss_refine_obj: 0  binary_loss: 0.2467  loss_mask_segmentation: 0  time: 2.6231  data_time: 0.0449  lr: 0.00016107  max_mem: 19816M
[04/17 10:24:53] d2.utils.events INFO:  eta: 1:05:46  iter: 2439  total_loss: 0.2585  loss_rel: 0.006172  loss_refine_obj: 0  binary_loss: 0.25  loss_mask_segmentation: 0  time: 2.6205  data_time: 0.0356  lr: 0.00016219  max_mem: 19816M
[04/17 10:25:44] d2.utils.events INFO:  eta: 1:04:50  iter: 2459  total_loss: 0.2571  loss_rel: 0.01737  loss_refine_obj: 0  binary_loss: 0.2403  loss_mask_segmentation: 0  time: 2.6179  data_time: 0.0341  lr: 0.00016332  max_mem: 19816M
[04/17 10:26:39] d2.utils.events INFO:  eta: 1:04:11  iter: 2479  total_loss: 0.2854  loss_rel: 0.003044  loss_refine_obj: 0  binary_loss: 0.2839  loss_mask_segmentation: 0  time: 2.6229  data_time: 0.0415  lr: 0.00016444  max_mem: 19816M
[04/17 10:27:30] d2.utils.events INFO:  eta: 1:03:09  iter: 2499  total_loss: 0.2849  loss_rel: 0.007882  loss_refine_obj: 0  binary_loss: 0.2818  loss_mask_segmentation: 0  time: 2.6205  data_time: 0.0622  lr: 0.00016557  max_mem: 19816M
[04/17 10:28:20] d2.utils.events INFO:  eta: 1:02:18  iter: 2519  total_loss: 0.2386  loss_rel: 0.006506  loss_refine_obj: 0  binary_loss: 0.2267  loss_mask_segmentation: 0  time: 2.6153  data_time: 0.0460  lr: 0.00016669  max_mem: 19816M
[04/17 10:29:12] d2.utils.events INFO:  eta: 1:01:39  iter: 2539  total_loss: 0.2595  loss_rel: 0.008248  loss_refine_obj: 0  binary_loss: 0.2242  loss_mask_segmentation: 0  time: 2.6144  data_time: 0.0539  lr: 0.00016782  max_mem: 19816M
[04/17 10:30:07] d2.utils.events INFO:  eta: 1:00:49  iter: 2559  total_loss: 0.2797  loss_rel: 0.01761  loss_refine_obj: 0  binary_loss: 0.2481  loss_mask_segmentation: 0  time: 2.6191  data_time: 0.0408  lr: 0.00016894  max_mem: 19816M
[04/17 10:31:03] d2.utils.events INFO:  eta: 1:00:02  iter: 2579  total_loss: 0.305  loss_rel: 0.00532  loss_refine_obj: 0  binary_loss: 0.2844  loss_mask_segmentation: 0  time: 2.6263  data_time: 0.0341  lr: 0.00017007  max_mem: 19816M
[04/17 10:31:54] d2.utils.events INFO:  eta: 0:59:08  iter: 2599  total_loss: 0.2967  loss_rel: 0.0144  loss_refine_obj: 0  binary_loss: 0.2714  loss_mask_segmentation: 0  time: 2.6231  data_time: 0.0385  lr: 0.00017119  max_mem: 19816M
[04/17 10:32:43] d2.utils.events INFO:  eta: 0:58:16  iter: 2619  total_loss: 0.2591  loss_rel: 0.003506  loss_refine_obj: 0  binary_loss: 0.2541  loss_mask_segmentation: 0  time: 2.6180  data_time: 0.0389  lr: 0.00017232  max_mem: 19816M
[04/17 10:33:37] d2.utils.events INFO:  eta: 0:57:26  iter: 2639  total_loss: 0.2689  loss_rel: 0.01935  loss_refine_obj: 0  binary_loss: 0.2408  loss_mask_segmentation: 0  time: 2.6206  data_time: 0.0554  lr: 0.00017344  max_mem: 19816M
[04/17 10:34:29] d2.utils.events INFO:  eta: 0:56:30  iter: 2659  total_loss: 0.2761  loss_rel: 0.01417  loss_refine_obj: 0  binary_loss: 0.2416  loss_mask_segmentation: 0  time: 2.6190  data_time: 0.0679  lr: 0.00017457  max_mem: 19816M
[04/17 10:35:22] d2.utils.events INFO:  eta: 0:55:44  iter: 2679  total_loss: 0.2517  loss_rel: 0.0125  loss_refine_obj: 0  binary_loss: 0.245  loss_mask_segmentation: 0  time: 2.6201  data_time: 0.0470  lr: 0.00017569  max_mem: 19816M
[04/17 10:36:14] d2.utils.events INFO:  eta: 0:54:49  iter: 2699  total_loss: 0.2562  loss_rel: 0.00856  loss_refine_obj: 0  binary_loss: 0.2376  loss_mask_segmentation: 0  time: 2.6191  data_time: 0.0329  lr: 0.00017682  max_mem: 19816M
[04/17 10:37:03] d2.utils.events INFO:  eta: 0:53:53  iter: 2719  total_loss: 0.2799  loss_rel: 0.009383  loss_refine_obj: 0  binary_loss: 0.2644  loss_mask_segmentation: 0  time: 2.6148  data_time: 0.0374  lr: 0.00017794  max_mem: 19816M
[04/17 10:37:55] d2.utils.events INFO:  eta: 0:53:03  iter: 2739  total_loss: 0.2893  loss_rel: 0.0058  loss_refine_obj: 0  binary_loss: 0.2646  loss_mask_segmentation: 0  time: 2.6147  data_time: 0.0704  lr: 0.00017907  max_mem: 19816M
[04/17 10:38:48] d2.utils.events INFO:  eta: 0:52:17  iter: 2759  total_loss: 0.2536  loss_rel: 0.005697  loss_refine_obj: 0  binary_loss: 0.2482  loss_mask_segmentation: 0  time: 2.6156  data_time: 0.0411  lr: 0.00018019  max_mem: 19816M
[04/17 10:39:40] d2.utils.events INFO:  eta: 0:51:22  iter: 2779  total_loss: 0.264  loss_rel: 0.002923  loss_refine_obj: 0  binary_loss: 0.2606  loss_mask_segmentation: 0  time: 2.6155  data_time: 0.0418  lr: 0.00018132  max_mem: 19816M
[04/17 10:40:40] d2.utils.events INFO:  eta: 0:50:43  iter: 2799  total_loss: 0.2693  loss_rel: 0.00434  loss_refine_obj: 0  binary_loss: 0.2475  loss_mask_segmentation: 0  time: 2.6240  data_time: 0.0379  lr: 0.00018244  max_mem: 19816M
[04/17 10:41:28] d2.utils.events INFO:  eta: 0:49:48  iter: 2819  total_loss: 0.2587  loss_rel: 0.007584  loss_refine_obj: 0  binary_loss: 0.2406  loss_mask_segmentation: 0  time: 2.6193  data_time: 0.0340  lr: 0.00018357  max_mem: 19816M
[04/17 10:42:22] d2.utils.events INFO:  eta: 0:49:02  iter: 2839  total_loss: 0.2292  loss_rel: 0.006367  loss_refine_obj: 0  binary_loss: 0.2264  loss_mask_segmentation: 0  time: 2.6213  data_time: 0.0357  lr: 0.00018469  max_mem: 19816M
[04/17 10:43:13] d2.utils.events INFO:  eta: 0:48:09  iter: 2859  total_loss: 0.2732  loss_rel: 0.0074  loss_refine_obj: 0  binary_loss: 0.2496  loss_mask_segmentation: 0  time: 2.6195  data_time: 0.0391  lr: 0.00018582  max_mem: 19816M
[04/17 10:44:08] d2.utils.events INFO:  eta: 0:47:24  iter: 2879  total_loss: 0.2464  loss_rel: 0.005626  loss_refine_obj: 0  binary_loss: 0.2401  loss_mask_segmentation: 0  time: 2.6228  data_time: 0.0473  lr: 0.00018694  max_mem: 19816M
[04/17 10:44:59] d2.utils.events INFO:  eta: 0:46:30  iter: 2899  total_loss: 0.2658  loss_rel: 0.003142  loss_refine_obj: 0  binary_loss: 0.2588  loss_mask_segmentation: 0  time: 2.6211  data_time: 0.0600  lr: 0.00018807  max_mem: 19816M
[04/17 10:45:51] d2.utils.events INFO:  eta: 0:45:39  iter: 2919  total_loss: 0.279  loss_rel: 0.007971  loss_refine_obj: 0  binary_loss: 0.2621  loss_mask_segmentation: 0  time: 2.6206  data_time: 0.0363  lr: 0.00018919  max_mem: 19816M
[04/17 10:46:43] d2.utils.events INFO:  eta: 0:44:48  iter: 2939  total_loss: 0.2789  loss_rel: 0.005977  loss_refine_obj: 0  binary_loss: 0.2689  loss_mask_segmentation: 0  time: 2.6193  data_time: 0.0382  lr: 0.00019032  max_mem: 19816M
[04/17 10:47:36] d2.utils.events INFO:  eta: 0:44:01  iter: 2959  total_loss: 0.2479  loss_rel: 0.004734  loss_refine_obj: 0  binary_loss: 0.2313  loss_mask_segmentation: 0  time: 2.6198  data_time: 0.0429  lr: 0.00019144  max_mem: 19816M
[04/17 10:48:29] d2.utils.events INFO:  eta: 0:43:13  iter: 2979  total_loss: 0.2453  loss_rel: 0.002582  loss_refine_obj: 0  binary_loss: 0.2384  loss_mask_segmentation: 0  time: 2.6208  data_time: 0.0292  lr: 0.00019257  max_mem: 19816M
[04/17 10:49:21] d2.utils.events INFO:  eta: 0:42:18  iter: 2999  total_loss: 0.262  loss_rel: 0.005211  loss_refine_obj: 0  binary_loss: 0.2598  loss_mask_segmentation: 0  time: 2.6199  data_time: 0.0390  lr: 0.00019369  max_mem: 19816M
[04/17 10:50:15] d2.utils.events INFO:  eta: 0:41:31  iter: 3019  total_loss: 0.2441  loss_rel: 0.003598  loss_refine_obj: 0  binary_loss: 0.2396  loss_mask_segmentation: 0  time: 2.6221  data_time: 0.0523  lr: 0.00019482  max_mem: 19816M
[04/17 10:51:08] d2.utils.events INFO:  eta: 0:40:45  iter: 3039  total_loss: 0.2682  loss_rel: 0.005416  loss_refine_obj: 0  binary_loss: 0.2406  loss_mask_segmentation: 0  time: 2.6226  data_time: 0.0395  lr: 0.00019594  max_mem: 19816M
[04/17 10:51:58] d2.utils.events INFO:  eta: 0:39:42  iter: 3059  total_loss: 0.3026  loss_rel: 0.001802  loss_refine_obj: 0  binary_loss: 0.2824  loss_mask_segmentation: 0  time: 2.6203  data_time: 0.0363  lr: 0.00019707  max_mem: 19816M
[04/17 10:52:50] d2.utils.events INFO:  eta: 0:38:53  iter: 3079  total_loss: 0.2655  loss_rel: 0.003374  loss_refine_obj: 0  binary_loss: 0.2553  loss_mask_segmentation: 0  time: 2.6197  data_time: 0.0298  lr: 0.00019819  max_mem: 19816M
[04/17 10:53:40] d2.utils.events INFO:  eta: 0:37:56  iter: 3099  total_loss: 0.2729  loss_rel: 0.004763  loss_refine_obj: 0  binary_loss: 0.2661  loss_mask_segmentation: 0  time: 2.6173  data_time: 0.0486  lr: 0.00019932  max_mem: 19816M
[04/17 10:54:37] d2.utils.events INFO:  eta: 0:37:03  iter: 3119  total_loss: 0.2485  loss_rel: 0.01686  loss_refine_obj: 0  binary_loss: 0.2236  loss_mask_segmentation: 0  time: 2.6212  data_time: 0.0457  lr: 0.00020044  max_mem: 19816M
[04/17 10:55:26] d2.utils.events INFO:  eta: 0:36:08  iter: 3139  total_loss: 0.2906  loss_rel: 0.00491  loss_refine_obj: 0  binary_loss: 0.2866  loss_mask_segmentation: 0  time: 2.6186  data_time: 0.0261  lr: 0.00020157  max_mem: 19816M
[04/17 10:56:16] d2.utils.events INFO:  eta: 0:35:17  iter: 3159  total_loss: 0.2625  loss_rel: 0.00816  loss_refine_obj: 0  binary_loss: 0.2545  loss_mask_segmentation: 0  time: 2.6163  data_time: 0.0397  lr: 0.00020269  max_mem: 19816M
[04/17 10:57:11] d2.utils.events INFO:  eta: 0:34:32  iter: 3179  total_loss: 0.2492  loss_rel: 0.01135  loss_refine_obj: 0  binary_loss: 0.2275  loss_mask_segmentation: 0  time: 2.6187  data_time: 0.0573  lr: 0.00020382  max_mem: 19816M
[04/17 10:58:03] d2.utils.events INFO:  eta: 0:33:41  iter: 3199  total_loss: 0.2584  loss_rel: 0.008627  loss_refine_obj: 0  binary_loss: 0.2357  loss_mask_segmentation: 0  time: 2.6181  data_time: 0.0323  lr: 0.00020494  max_mem: 19816M
[04/17 10:58:57] d2.utils.events INFO:  eta: 0:32:58  iter: 3219  total_loss: 0.267  loss_rel: 0.004294  loss_refine_obj: 0  binary_loss: 0.2569  loss_mask_segmentation: 0  time: 2.6197  data_time: 0.0462  lr: 0.00020607  max_mem: 19816M
[04/17 10:59:51] d2.utils.events INFO:  eta: 0:32:14  iter: 3239  total_loss: 0.2555  loss_rel: 0.00375  loss_refine_obj: 0  binary_loss: 0.2524  loss_mask_segmentation: 0  time: 2.6207  data_time: 0.0575  lr: 0.00020719  max_mem: 19816M
[04/17 11:00:46] d2.utils.events INFO:  eta: 0:31:25  iter: 3259  total_loss: 0.2438  loss_rel: 0.002693  loss_refine_obj: 0  binary_loss: 0.2391  loss_mask_segmentation: 0  time: 2.6228  data_time: 0.0346  lr: 0.00020832  max_mem: 19816M
[04/17 11:01:38] d2.utils.events INFO:  eta: 0:30:33  iter: 3279  total_loss: 0.2597  loss_rel: 0.004242  loss_refine_obj: 0  binary_loss: 0.2529  loss_mask_segmentation: 0  time: 2.6226  data_time: 0.0402  lr: 0.00020944  max_mem: 19816M
[04/17 11:02:35] d2.utils.events INFO:  eta: 0:29:44  iter: 3299  total_loss: 0.2441  loss_rel: 0.007546  loss_refine_obj: 0  binary_loss: 0.2181  loss_mask_segmentation: 0  time: 2.6258  data_time: 0.0604  lr: 0.00021057  max_mem: 19816M
[04/17 11:03:23] d2.utils.events INFO:  eta: 0:28:50  iter: 3319  total_loss: 0.2893  loss_rel: 0.003685  loss_refine_obj: 0  binary_loss: 0.2888  loss_mask_segmentation: 0  time: 2.6226  data_time: 0.0460  lr: 0.00021169  max_mem: 19816M
[04/17 11:04:15] d2.utils.events INFO:  eta: 0:28:00  iter: 3339  total_loss: 0.2421  loss_rel: 0.005541  loss_refine_obj: 0  binary_loss: 0.228  loss_mask_segmentation: 0  time: 2.6221  data_time: 0.0401  lr: 0.00021282  max_mem: 19816M
[04/17 11:05:05] d2.utils.events INFO:  eta: 0:27:05  iter: 3359  total_loss: 0.287  loss_rel: 0.004833  loss_refine_obj: 0  binary_loss: 0.2725  loss_mask_segmentation: 0  time: 2.6204  data_time: 0.0492  lr: 0.00021394  max_mem: 19816M
[04/17 11:05:59] d2.utils.events INFO:  eta: 0:26:18  iter: 3379  total_loss: 0.2663  loss_rel: 0.005229  loss_refine_obj: 0  binary_loss: 0.2496  loss_mask_segmentation: 0  time: 2.6213  data_time: 0.0357  lr: 0.00021507  max_mem: 19816M
[04/17 11:06:54] d2.utils.events INFO:  eta: 0:25:29  iter: 3399  total_loss: 0.2789  loss_rel: 0.006517  loss_refine_obj: 0  binary_loss: 0.2645  loss_mask_segmentation: 0  time: 2.6234  data_time: 0.0312  lr: 0.00021619  max_mem: 19816M
[04/17 11:07:40] d2.utils.events INFO:  eta: 0:24:35  iter: 3419  total_loss: 0.238  loss_rel: 0.004523  loss_refine_obj: 0  binary_loss: 0.226  loss_mask_segmentation: 0  time: 2.6187  data_time: 0.0325  lr: 0.00021732  max_mem: 19816M
[04/17 11:08:35] d2.utils.events INFO:  eta: 0:23:45  iter: 3439  total_loss: 0.2778  loss_rel: 0.001799  loss_refine_obj: 0  binary_loss: 0.2465  loss_mask_segmentation: 0  time: 2.6209  data_time: 0.0435  lr: 0.00021844  max_mem: 19816M
[04/17 11:09:28] d2.utils.events INFO:  eta: 0:22:57  iter: 3459  total_loss: 0.261  loss_rel: 0.01095  loss_refine_obj: 0  binary_loss: 0.2578  loss_mask_segmentation: 0  time: 2.6207  data_time: 0.0446  lr: 0.00021957  max_mem: 19816M
[04/17 11:10:25] d2.utils.events INFO:  eta: 0:22:06  iter: 3479  total_loss: 0.2372  loss_rel: 0.007013  loss_refine_obj: 0  binary_loss: 0.23  loss_mask_segmentation: 0  time: 2.6238  data_time: 0.0415  lr: 0.00022069  max_mem: 19816M
[04/17 11:11:16] d2.utils.events INFO:  eta: 0:21:15  iter: 3499  total_loss: 0.2483  loss_rel: 0.002517  loss_refine_obj: 0  binary_loss: 0.246  loss_mask_segmentation: 0  time: 2.6228  data_time: 0.0414  lr: 0.00022182  max_mem: 19816M
[04/17 11:12:09] d2.utils.events INFO:  eta: 0:20:24  iter: 3519  total_loss: 0.255  loss_rel: 0.004292  loss_refine_obj: 0  binary_loss: 0.2433  loss_mask_segmentation: 0  time: 2.6235  data_time: 0.0594  lr: 0.00022294  max_mem: 19816M
[04/17 11:13:01] d2.utils.events INFO:  eta: 0:19:32  iter: 3539  total_loss: 0.2675  loss_rel: 0.006996  loss_refine_obj: 0  binary_loss: 0.2512  loss_mask_segmentation: 0  time: 2.6231  data_time: 0.0495  lr: 0.00022407  max_mem: 19816M
[04/17 11:13:55] d2.utils.events INFO:  eta: 0:18:40  iter: 3559  total_loss: 0.2481  loss_rel: 0.001946  loss_refine_obj: 0  binary_loss: 0.2298  loss_mask_segmentation: 0  time: 2.6242  data_time: 0.0405  lr: 0.00022519  max_mem: 19816M
[04/17 11:14:46] d2.utils.events INFO:  eta: 0:17:47  iter: 3579  total_loss: 0.3006  loss_rel: 0.006371  loss_refine_obj: 0  binary_loss: 0.2866  loss_mask_segmentation: 0  time: 2.6229  data_time: 0.0489  lr: 0.00022632  max_mem: 19816M
[04/17 11:15:38] d2.utils.events INFO:  eta: 0:16:56  iter: 3599  total_loss: 0.2759  loss_rel: 0.001938  loss_refine_obj: 0  binary_loss: 0.2622  loss_mask_segmentation: 0  time: 2.6227  data_time: 0.0380  lr: 0.00022744  max_mem: 19816M
[04/17 11:16:26] d2.utils.events INFO:  eta: 0:16:04  iter: 3619  total_loss: 0.2613  loss_rel: 0.003409  loss_refine_obj: 0  binary_loss: 0.2481  loss_mask_segmentation: 0  time: 2.6203  data_time: 0.0304  lr: 0.00022857  max_mem: 19816M
[04/17 11:17:18] d2.utils.events INFO:  eta: 0:15:12  iter: 3639  total_loss: 0.2432  loss_rel: 0.003194  loss_refine_obj: 0  binary_loss: 0.2342  loss_mask_segmentation: 0  time: 2.6196  data_time: 0.0532  lr: 0.00022969  max_mem: 19816M
[04/17 11:18:10] d2.utils.events INFO:  eta: 0:14:21  iter: 3659  total_loss: 0.2646  loss_rel: 0.003721  loss_refine_obj: 0  binary_loss: 0.2513  loss_mask_segmentation: 0  time: 2.6193  data_time: 0.0366  lr: 0.00023082  max_mem: 19816M
[04/17 11:19:08] d2.utils.events INFO:  eta: 0:13:33  iter: 3679  total_loss: 0.248  loss_rel: 0.002851  loss_refine_obj: 0  binary_loss: 0.2416  loss_mask_segmentation: 0  time: 2.6228  data_time: 0.0580  lr: 0.00023194  max_mem: 19816M
[04/17 11:20:03] d2.utils.events INFO:  eta: 0:12:42  iter: 3699  total_loss: 0.2659  loss_rel: 0.003378  loss_refine_obj: 0  binary_loss: 0.2575  loss_mask_segmentation: 0  time: 2.6240  data_time: 0.0482  lr: 0.00023307  max_mem: 19816M
[04/17 11:20:51] d2.utils.events INFO:  eta: 0:11:50  iter: 3719  total_loss: 0.282  loss_rel: 0.005286  loss_refine_obj: 0  binary_loss: 0.2654  loss_mask_segmentation: 0  time: 2.6219  data_time: 0.0237  lr: 0.00023419  max_mem: 19816M
[04/17 11:21:44] d2.utils.events INFO:  eta: 0:10:59  iter: 3739  total_loss: 0.2649  loss_rel: 0.006173  loss_refine_obj: 0  binary_loss: 0.2444  loss_mask_segmentation: 0  time: 2.6218  data_time: 0.0459  lr: 0.00023532  max_mem: 19816M
[04/17 11:22:35] d2.utils.events INFO:  eta: 0:10:07  iter: 3759  total_loss: 0.2914  loss_rel: 0.0015  loss_refine_obj: 0  binary_loss: 0.2909  loss_mask_segmentation: 0  time: 2.6214  data_time: 0.0370  lr: 0.00023644  max_mem: 19816M
[04/17 11:23:27] d2.utils.events INFO:  eta: 0:09:16  iter: 3779  total_loss: 0.2427  loss_rel: 0.002799  loss_refine_obj: 0  binary_loss: 0.2302  loss_mask_segmentation: 0  time: 2.6207  data_time: 0.0338  lr: 0.00023757  max_mem: 20468M
[04/17 11:24:21] d2.utils.events INFO:  eta: 0:08:24  iter: 3799  total_loss: 0.2493  loss_rel: 0.004469  loss_refine_obj: 0  binary_loss: 0.2418  loss_mask_segmentation: 0  time: 2.6217  data_time: 0.0396  lr: 0.00023869  max_mem: 20468M
[04/17 11:25:14] d2.utils.events INFO:  eta: 0:07:35  iter: 3819  total_loss: 0.2556  loss_rel: 0.00388  loss_refine_obj: 0  binary_loss: 0.2511  loss_mask_segmentation: 0  time: 2.6219  data_time: 0.0476  lr: 0.00023982  max_mem: 20468M
[04/17 11:26:07] d2.utils.events INFO:  eta: 0:06:43  iter: 3839  total_loss: 0.2589  loss_rel: 0.008758  loss_refine_obj: 0  binary_loss: 0.2223  loss_mask_segmentation: 0  time: 2.6222  data_time: 0.0340  lr: 0.00024094  max_mem: 20468M
[04/17 11:27:01] d2.utils.events INFO:  eta: 0:05:53  iter: 3859  total_loss: 0.2608  loss_rel: 0.002762  loss_refine_obj: 0  binary_loss: 0.253  loss_mask_segmentation: 0  time: 2.6231  data_time: 0.0368  lr: 0.00024207  max_mem: 20468M
[04/17 11:27:57] d2.utils.events INFO:  eta: 0:05:02  iter: 3879  total_loss: 0.2413  loss_rel: 0.009417  loss_refine_obj: 0  binary_loss: 0.2296  loss_mask_segmentation: 0  time: 2.6249  data_time: 0.0405  lr: 0.00024319  max_mem: 20468M
[04/17 11:28:50] d2.utils.events INFO:  eta: 0:04:12  iter: 3899  total_loss: 0.2507  loss_rel: 0.002385  loss_refine_obj: 0  binary_loss: 0.2244  loss_mask_segmentation: 0  time: 2.6251  data_time: 0.0540  lr: 0.00024432  max_mem: 20468M
[04/17 11:29:44] d2.utils.events INFO:  eta: 0:03:21  iter: 3919  total_loss: 0.2465  loss_rel: 0.001799  loss_refine_obj: 0  binary_loss: 0.2444  loss_mask_segmentation: 0  time: 2.6260  data_time: 0.0513  lr: 0.00024544  max_mem: 20468M
[04/17 11:30:38] d2.utils.events INFO:  eta: 0:02:31  iter: 3939  total_loss: 0.2592  loss_rel: 0.00224  loss_refine_obj: 0  binary_loss: 0.2575  loss_mask_segmentation: 0  time: 2.6265  data_time: 0.0347  lr: 0.00024657  max_mem: 20468M
[04/17 11:31:37] d2.utils.events INFO:  eta: 0:01:40  iter: 3959  total_loss: 0.284  loss_rel: 0.004037  loss_refine_obj: 0  binary_loss: 0.2667  loss_mask_segmentation: 0  time: 2.6299  data_time: 0.0474  lr: 0.00024769  max_mem: 20468M
[04/17 11:32:27] d2.utils.events INFO:  eta: 0:00:50  iter: 3979  total_loss: 0.2618  loss_rel: 0.001614  loss_refine_obj: 0  binary_loss: 0.2575  loss_mask_segmentation: 0  time: 2.6288  data_time: 0.0447  lr: 0.00024882  max_mem: 20468M
[04/17 11:33:22] d2.data.datasets.coco INFO: Loaded 55 images in COCO format from ../datasets/coco/annotations/instances_val2017.json
[04/17 11:33:22] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 3237         |  spacing   | 4793         | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 8030         |            |              |              |              |[0m
[04/17 11:33:22] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/17 11:33:22] d2.data.common INFO: Serializing 55 elements to byte tensors and concatenating them all ...
[04/17 11:33:22] d2.data.common INFO: Serialized dataset takes 0.85 MiB
[04/17 11:33:22] d2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[04/17 11:34:15] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/17 11:34:15] d2.evaluation.coco_evaluation INFO: Saving results to ../output-step3-predcl-vctree-short/coco_instances_results.json
[04/17 11:34:15] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/17 11:34:15] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/17 11:34:15] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.23 seconds.
[04/17 11:34:15] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/17 11:34:15] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/17 11:34:15] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl  |
|:------:|:------:|:------:|:------:|:------:|:-----:|
| 84.143 | 84.143 | 84.143 | 79.687 | 94.554 |  nan  |
[04/17 11:34:15] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[04/17 11:34:15] d2.evaluation.coco_evaluation INFO: Per-category bbox AP: 
| category     | AP     | category   | AP     | category     | AP   |
|:-------------|:-------|:-----------|:-------|:-------------|:-----|
| intersection | 91.058 | spacing    | 77.228 | _background_ | nan  |
[04/17 11:34:16] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *segm*
[04/17 11:34:16] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.37 seconds.
[04/17 11:34:16] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/17 11:34:16] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/17 11:34:16] d2.evaluation.coco_evaluation INFO: Evaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl  |
|:------:|:------:|:------:|:------:|:------:|:-----:|
| 51.489 | 81.545 | 59.105 | 49.092 | 65.249 |  nan  |
[04/17 11:34:16] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[04/17 11:34:16] d2.evaluation.coco_evaluation INFO: Per-category segm AP: 
| category     | AP     | category   | AP     | category     | AP   |
|:-------------|:-------|:-----------|:-------|:-------------|:-----|
| intersection | 55.721 | spacing    | 47.258 | _background_ | nan  |
[04/17 11:34:16] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/17 11:34:16] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/17 11:34:16] d2.evaluation.testing INFO: copypaste: 84.1430,84.1430,84.1430,79.6873,94.5545,nan
[04/17 11:34:16] d2.evaluation.testing INFO: copypaste: Task: segm
[04/17 11:34:16] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/17 11:34:16] d2.evaluation.testing INFO: copypaste: 51.4894,81.5446,59.1050,49.0920,65.2495,nan
[04/17 11:34:16] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/17 11:34:16] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 3397         |
|              |              |[0m
[04/17 11:34:16] d2.data.common INFO: Serializing 42 elements to byte tensors and concatenating them all ...
[04/17 11:34:16] d2.data.common INFO: Serialized dataset takes 0.44 MiB
[04/17 11:34:16] detectron2 INFO: Following metrics will be use for evaluation
[04/17 11:34:16] detectron2 INFO: ('SGRecall', 'SGNoGraphConstraintRecall', 'SGZeroShotRecall', 'SGPairAccuracy', 'SGMeanRecall')
[04/17 11:34:16] d2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[04/17 11:34:16] d2.evaluation.coco_evaluation INFO: Trying to convert 'VG_test' to COCO format ...
[04/17 11:34:16] d2.data.datasets.coco INFO: Converting annotations of dataset 'VG_test' to COCO format ...)
[04/17 11:34:16] d2.data.datasets.coco INFO: Converting dataset dicts into COCO format
[04/17 11:34:16] d2.data.datasets.coco INFO: Conversion finished, #images: 42, #annotations: 3397
[04/17 11:34:16] d2.data.datasets.coco INFO: Caching COCO format annotations at '../output-step3-predcl-vctree-short/inference/VG_test_coco_format.json' ...
[04/17 11:34:17] detectron2 INFO: Loading zero shot triplets
[04/17 11:34:17] detectron2 INFO: Start inference on 42 images
[04/17 11:34:19] detectron2 INFO: Inference done 14/42. 0.1221 s / img. ETA=0:00:03
[04/17 11:34:21] detectron2 INFO: Total inference time: 0:00:03.672195 (0.099249 s / img per device, on 1 devices)
[04/17 11:34:21] detectron2 INFO: Total inference pure compute time: 0:00:02 (0.059467 s / img per device, on 1 devices)
[04/17 11:34:22] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/17 11:34:22] d2.evaluation.coco_evaluation INFO: Saving results to ../output-step3-predcl-vctree-short/inference/coco_instances_results.json
[04/17 11:34:22] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/17 11:34:22] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/17 11:34:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.03 seconds.
[04/17 11:34:22] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/17 11:34:22] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/17 11:34:22] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |   APm   |  APl  |
|:-----:|:------:|:------:|:-----:|:-------:|:-----:|
| 7.921 | 7.921  | 7.921  | 6.931 | 100.000 |  nan  |
[04/17 11:34:22] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[04/17 11:34:22] detectron2 INFO: Gathering data
[04/17 11:34:22] detectron2 INFO: Predictions Gathered
[04/17 11:34:22] detectron2 INFO: Saving output prediction
[04/17 11:34:22] detectron2 INFO: Computing Scene Graph Metrics
[04/17 11:34:22] detectron2 INFO: Preparing Global Container
[04/17 11:34:22] detectron2 INFO: Scene Graph Metric Evaluation Complete. Computing recall statistics...
[04/17 11:34:22] detectron2 INFO: Scene Graph Results for mode: predcls
[04/17 11:34:22] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/17 11:34:22] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/17 11:34:22] d2.evaluation.testing INFO: copypaste: 7.9208,7.9208,7.9208,6.9307,100.0000,nan
[04/17 11:34:22] d2.evaluation.testing INFO: copypaste: Task: SG
[04/17 11:34:22] d2.evaluation.testing INFO: copypaste: SGMeanRecall@20,SGMeanRecall@50,SGMeanRecall@100
[04/17 11:34:22] d2.evaluation.testing INFO: copypaste: 0.3855,0.6820,0.8837
[04/17 11:34:22] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-vctree-short/best_model_final.pth.pth
[04/17 11:34:48] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-vctree-short/model_0003999.pth
[04/17 11:35:18] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-vctree-short/model_final.pth
[04/17 11:35:57] d2.utils.events INFO:  eta: 0:00:00  iter: 3999  total_loss: 0.2766  loss_rel: 0.00229  loss_refine_obj: 0  binary_loss: 0.2665  loss_mask_segmentation: 0  time: 2.6296  data_time: 0.0356  lr: 0.00024994  max_mem: 20468M
[04/17 11:35:57] d2.engine.hooks INFO: Overall training speed: 1998 iterations in 1:27:34 (2.6296 s / it)
[04/17 11:35:57] d2.engine.hooks INFO: Total training time: 1:30:12 (0:02:38 on hooks)
