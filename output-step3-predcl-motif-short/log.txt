[04/16 03:41:54] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 03:42:09] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/16 03:42:09] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17509', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-motif-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'MotifSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/16 03:42:10] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/16 03:42:10] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mMotifSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-motif-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/16 03:42:10] detectron2 INFO: Full config saved to ../output-step3-predcl-motif-short/config.yaml
[04/16 03:42:10] d2.utils.env INFO: Using a generated random seed 10775095
[04/16 03:42:10] d2.engine.defaults INFO: Auto-scaling the config to batch_size=4, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/16 03:42:25] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/16 03:42:26] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/16 03:42:26] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): MotifSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (rel_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): LSTMContextSegmentationC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (obj_ctx_rnn): LSTM(1352, 512, bidirectional=True)
          (edge_ctx_rnn): LSTM(1736, 512, bidirectional=True)
          (lin_obj_h): Linear(in_features=1024, out_features=512, bias=True)
          (lin_edge_h): Linear(in_features=1024, out_features=512, bias=True)
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/16 03:42:26] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 03:42:26] d2.data.build INFO: Removed 0 images with no usable annotations. 299 images left.
[04/16 03:42:26] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 15473        |
|              |              |[0m
[04/16 03:42:26] d2.data.build INFO: Using training sampler TrainingSampler
[04/16 03:42:26] d2.data.common INFO: Serializing 299 elements to byte tensors and concatenating them all ...
[04/16 03:42:26] d2.data.common INFO: Serialized dataset takes 2.08 MiB
[04/16 03:42:26] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/16 03:42:59] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/16 03:42:59] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/16 03:42:59] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/16 03:42:59] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/16 03:42:59] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/16 03:42:59] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 03:42:59] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step1/model_weights.pth ...
[04/16 03:43:01] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.embeddings.weight[0m
[34mroi_heads.embeddings_coco.weight[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner_segmentation.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.{bias_hh_l0, bias_hh_l0_reverse, bias_ih_l0, bias_ih_l0_reverse, weight_hh_l0, weight_hh_l0_reverse, weight_ih_l0, weight_ih_l0_reverse}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.lin_edge_h.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.lin_obj_h.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.{bias_hh_l0, bias_hh_l0_reverse, bias_ih_l0, bias_ih_l0_reverse, weight_hh_l0, weight_hh_l0_reverse, weight_ih_l0, weight_ih_l0_reverse}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed1.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed2.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed_segmentation.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.deconv.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.predictor.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_reducer.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.sg_segmentation_features.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.freq_bias.obj_baseline.weight[0m
[34mroi_heads.scenegraph_head.predictor.post_cat.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.post_emb.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.rel_compress.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.up_dim.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.variance_net.{bias, weight}[0m
[04/16 03:43:01] d2.engine.train_loop INFO: Starting training from iteration 0
[04/16 03:43:05] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/r09521612/segmentationsg/segmentationsg/engine/sg_trainer.py", line 267, in run_step
    loss_dict = self.model(data, mask_batched_inputs=mask_data)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/meta_arch/rcnn.py", line 214, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances, gt_relations, segmentation_step=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 592, in forward
    _, _, losses = self._forward_scenegraph(features, pred_instances, targets, relations, segmentation_step=segmentation_step)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 725, in _forward_scenegraph
    return self.scenegraph_head(features, instances, targets, relations, segmentation_step=segmentation_step, return_masks=return_masks)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_head.py", line 291, in forward
    boxes, rel_labels, rel_pair_idxs, rel_binarys = self.samp_processor.gtbox_relsample(boxes, targets, relations)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/sampling.py", line 75, in gtbox_relsample
    binary_rel[tgt_head_idxs, tgt_tail_idxs] = 1
IndexError: tensors used as indices must be long, byte or bool tensors
[04/16 03:43:05] d2.engine.hooks INFO: Total training time: 0:00:04 (0:00:00 on hooks)
[04/16 03:43:05] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 8108M
[04/16 11:46:58] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 11:47:03] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/16 11:47:03] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17531', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-motif-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'MotifSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/16 11:47:03] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/16 11:47:03] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mMotifSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-motif-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/16 11:47:03] detectron2 INFO: Full config saved to ../output-step3-predcl-motif-short/config.yaml
[04/16 11:47:03] d2.utils.env INFO: Using a generated random seed 3995701
[04/16 11:47:03] d2.engine.defaults INFO: Auto-scaling the config to batch_size=4, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/16 11:47:42] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/16 11:47:43] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): MotifSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (rel_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): LSTMContextSegmentationC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (obj_ctx_rnn): LSTM(1352, 512, bidirectional=True)
          (edge_ctx_rnn): LSTM(1736, 512, bidirectional=True)
          (lin_obj_h): Linear(in_features=1024, out_features=512, bias=True)
          (lin_edge_h): Linear(in_features=1024, out_features=512, bias=True)
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/16 11:47:43] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 11:47:43] d2.data.build INFO: Removed 0 images with no usable annotations. 299 images left.
[04/16 11:47:43] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 15473        |
|              |              |[0m
[04/16 11:47:43] d2.data.build INFO: Using training sampler TrainingSampler
[04/16 11:47:43] d2.data.common INFO: Serializing 299 elements to byte tensors and concatenating them all ...
[04/16 11:47:43] d2.data.common INFO: Serialized dataset takes 2.08 MiB
[04/16 11:47:43] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/16 11:47:58] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/16 11:47:59] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/16 11:47:59] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/16 11:47:59] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/16 11:47:59] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/16 11:47:59] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 11:47:59] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step1/model_weights.pth ...
[04/16 11:47:59] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.embeddings.weight[0m
[34mroi_heads.embeddings_coco.weight[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner_segmentation.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.{bias_hh_l0, bias_hh_l0_reverse, bias_ih_l0, bias_ih_l0_reverse, weight_hh_l0, weight_hh_l0_reverse, weight_ih_l0, weight_ih_l0_reverse}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.lin_edge_h.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.lin_obj_h.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.{bias_hh_l0, bias_hh_l0_reverse, bias_ih_l0, bias_ih_l0_reverse, weight_hh_l0, weight_hh_l0_reverse, weight_ih_l0, weight_ih_l0_reverse}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed1.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed2.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed_segmentation.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.deconv.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.predictor.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_reducer.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.sg_segmentation_features.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.freq_bias.obj_baseline.weight[0m
[34mroi_heads.scenegraph_head.predictor.post_cat.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.post_emb.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.rel_compress.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.up_dim.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.variance_net.{bias, weight}[0m
[04/16 11:47:59] d2.engine.train_loop INFO: Starting training from iteration 0
[04/16 11:48:05] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/r09521612/segmentationsg/segmentationsg/engine/sg_trainer.py", line 267, in run_step
    loss_dict = self.model(data, mask_batched_inputs=mask_data)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/meta_arch/rcnn.py", line 214, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances, gt_relations, segmentation_step=False)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 592, in forward
    _, _, losses = self._forward_scenegraph(features, pred_instances, targets, relations, segmentation_step=segmentation_step)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/roi_heads.py", line 725, in _forward_scenegraph
    return self.scenegraph_head(features, instances, targets, relations, segmentation_step=segmentation_step, return_masks=return_masks)
  File "/home/r09521612/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/scenegraph_head.py", line 291, in forward
    boxes, rel_labels, rel_pair_idxs, rel_binarys = self.samp_processor.gtbox_relsample(boxes, targets, relations)
  File "/home/r09521612/segmentationsg/segmentationsg/modeling/roi_heads/scenegraph_head/sampling.py", line 80, in gtbox_relsample
    rel_possibility[tgt_head_idxs, tgt_tail_idxs] = 0
IndexError: tensors used as indices must be long, byte or bool tensors
[04/16 11:48:05] d2.engine.hooks INFO: Total training time: 0:00:05 (0:00:00 on hooks)
[04/16 11:48:05] d2.utils.events INFO:  iter: 0    lr: N/A  max_mem: 12575M
[04/16 11:49:29] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 11:49:32] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/16 11:49:32] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/sg_dev_masktransfer_rebar.yaml', dist_url='tcp://127.0.0.1:17533', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1/model_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-motif-short', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets/vg/VG-SGG.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'MotifSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch', 'DATASETS.VISUAL_GENOME.FILTER_NON_OVERLAP', 'False'], resume=True)
[04/16 11:49:32] detectron2 INFO: Contents of args.config_file=../configs/sg_dev_masktransfer_rebar.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(6000, 8000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m10000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[04/16 11:49:32] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m43
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets/vg/VG-SGG.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mMotifSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1/model_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-motif-short
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m6000
[38;5;15m  [39m-[38;5;15m [39m8000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[04/16 11:49:32] detectron2 INFO: Full config saved to ../output-step3-predcl-motif-short/config.yaml
[04/16 11:49:32] d2.utils.env INFO: Using a generated random seed 32875373
[04/16 11:49:32] d2.engine.defaults INFO: Auto-scaling the config to batch_size=4, learning_rate=0.00025, max_iter=4000, warmup=4000.
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_head.fc1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_head.fc1.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_head.fc2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_head.fc2.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.cls_score.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.bbox_pred.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.transfer_cls_score.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: box_predictor.transfer_bbox_pred.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn1.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn2.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn3.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.mask_fcn4.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.deconv.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.deconv.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.predictor.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: mask_head.predictor.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral2.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output2.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral3.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output3.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral4.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output4.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_lateral5.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.fpn_output5.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.stem.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.0.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.1.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res2.2.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.0.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.1.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.2.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res3.3.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.0.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.1.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.2.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.3.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.4.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.5.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.6.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.7.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.8.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.9.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.10.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.11.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.12.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.13.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.14.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.15.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.16.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.17.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.18.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.19.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.20.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.21.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res4.22.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.0.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.1.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv1.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv2.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: backbone.bottom_up.res5.2.conv3.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.conv.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[04/16 11:49:47] detectron2 WARNING: Freezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[04/16 11:49:48] d2.engine.defaults INFO: Model:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=3, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=8, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(258, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(257, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=4, out_features=6, bias=True)
      )
      (predictor): MotifSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (rel_compress): Linear(in_features=4096, out_features=2, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(4, 2)
        )
        (context_layer): LSTMContextSegmentationC(
          (obj_embed1): Embedding(2, 200)
          (obj_embed2): Embedding(2, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (obj_ctx_rnn): LSTM(1352, 512, bidirectional=True)
          (edge_ctx_rnn): LSTM(1736, 512, bidirectional=True)
          (lin_obj_h): Linear(in_features=1024, out_features=512, bias=True)
          (lin_edge_h): Linear(in_features=1024, out_features=512, bias=True)
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(3, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[04/16 11:49:48] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 11:49:48] d2.data.build INFO: Removed 0 images with no usable annotations. 299 images left.
[04/16 11:49:48] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 15473        |
|              |              |[0m
[04/16 11:49:48] d2.data.build INFO: Using training sampler TrainingSampler
[04/16 11:49:48] d2.data.common INFO: Serializing 299 elements to byte tensors and concatenating them all ...
[04/16 11:49:48] d2.data.common INFO: Serialized dataset takes 2.08 MiB
[04/16 11:49:48] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[04/16 11:49:55] d2.data.datasets.coco INFO: Loaded 374 images in COCO format from ../datasets/coco/annotations/instances_train2017.json
[04/16 11:49:55] d2.data.build INFO: Removed 0 images with no usable annotations. 374 images left.
[04/16 11:49:55] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 21303        |  spacing   | 30096        | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 51399        |            |              |              |              |[0m
[04/16 11:49:55] d2.data.common INFO: Serializing 374 elements to byte tensors and concatenating them all ...
[04/16 11:49:55] d2.data.common INFO: Serialized dataset takes 5.49 MiB
[04/16 11:49:55] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[04/16 11:49:55] fvcore.common.checkpoint INFO: [Checkpointer] Loading from ../output-step1/model_weights.pth ...
[04/16 11:49:56] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.embeddings.weight[0m
[34mroi_heads.embeddings_coco.weight[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner_segmentation.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.{bias_hh_l0, bias_hh_l0_reverse, bias_ih_l0, bias_ih_l0_reverse, weight_hh_l0, weight_hh_l0_reverse, weight_ih_l0, weight_ih_l0_reverse}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.lin_edge_h.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.lin_obj_h.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.{bias_hh_l0, bias_hh_l0_reverse, bias_ih_l0, bias_ih_l0_reverse, weight_hh_l0, weight_hh_l0_reverse, weight_ih_l0, weight_ih_l0_reverse}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed1.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed2.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed_segmentation.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.deconv.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.predictor.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_reducer.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.sg_segmentation_features.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.freq_bias.obj_baseline.weight[0m
[34mroi_heads.scenegraph_head.predictor.post_cat.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.post_emb.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.rel_compress.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.up_dim.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.variance_net.{bias, weight}[0m
[04/16 11:49:56] d2.engine.train_loop INFO: Starting training from iteration 0
[04/16 11:50:46] d2.utils.events INFO:  eta: 2:31:43  iter: 19  total_loss: 0.6017  loss_rel: 0.6017  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.3440  data_time: 0.4719  lr: 2.6069e-05  max_mem: 21607M
[04/16 11:51:29] d2.utils.events INFO:  eta: 2:24:50  iter: 39  total_loss: 0.5441  loss_rel: 0.5441  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2505  data_time: 0.2927  lr: 2.7194e-05  max_mem: 21607M
[04/16 11:52:15] d2.utils.events INFO:  eta: 2:25:33  iter: 59  total_loss: 0.4549  loss_rel: 0.4549  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2566  data_time: 0.3361  lr: 2.8319e-05  max_mem: 21607M
[04/16 11:53:01] d2.utils.events INFO:  eta: 2:26:02  iter: 79  total_loss: 0.372  loss_rel: 0.372  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2661  data_time: 0.3201  lr: 2.9444e-05  max_mem: 22649M
[04/16 11:53:45] d2.utils.events INFO:  eta: 2:24:12  iter: 99  total_loss: 0.2748  loss_rel: 0.2748  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2540  data_time: 0.2961  lr: 3.0569e-05  max_mem: 22649M
[04/16 11:54:30] d2.utils.events INFO:  eta: 2:23:27  iter: 119  total_loss: 0.2304  loss_rel: 0.2304  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2579  data_time: 0.3204  lr: 3.1694e-05  max_mem: 22649M
[04/16 11:55:14] d2.utils.events INFO:  eta: 2:22:08  iter: 139  total_loss: 0.1938  loss_rel: 0.1938  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2484  data_time: 0.2609  lr: 3.2819e-05  max_mem: 22649M
[04/16 11:55:58] d2.utils.events INFO:  eta: 2:21:04  iter: 159  total_loss: 0.1553  loss_rel: 0.1553  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2432  data_time: 0.3017  lr: 3.3944e-05  max_mem: 22649M
[04/16 11:56:42] d2.utils.events INFO:  eta: 2:20:08  iter: 179  total_loss: 0.1417  loss_rel: 0.1417  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2368  data_time: 0.2692  lr: 3.5069e-05  max_mem: 23242M
[04/16 11:57:29] d2.utils.events INFO:  eta: 2:19:54  iter: 199  total_loss: 0.1205  loss_rel: 0.1205  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2484  data_time: 0.2987  lr: 3.6194e-05  max_mem: 23242M
[04/16 11:58:13] d2.utils.events INFO:  eta: 2:18:52  iter: 219  total_loss: 0.1212  loss_rel: 0.1212  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2432  data_time: 0.2676  lr: 3.7319e-05  max_mem: 23242M
[04/16 11:58:56] d2.utils.events INFO:  eta: 2:17:47  iter: 239  total_loss: 0.096  loss_rel: 0.096  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2344  data_time: 0.2665  lr: 3.8444e-05  max_mem: 23242M
[04/16 11:59:40] d2.utils.events INFO:  eta: 2:17:12  iter: 259  total_loss: 0.08621  loss_rel: 0.08621  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2328  data_time: 0.2888  lr: 3.9569e-05  max_mem: 23242M
[04/16 12:00:26] d2.utils.events INFO:  eta: 2:16:48  iter: 279  total_loss: 0.09139  loss_rel: 0.09139  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2360  data_time: 0.3209  lr: 4.0694e-05  max_mem: 23242M
[04/16 12:01:11] d2.utils.events INFO:  eta: 2:16:06  iter: 299  total_loss: 0.07155  loss_rel: 0.07155  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2372  data_time: 0.3003  lr: 4.1819e-05  max_mem: 23242M
[04/16 12:01:55] d2.utils.events INFO:  eta: 2:15:20  iter: 319  total_loss: 0.06344  loss_rel: 0.06344  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2340  data_time: 0.2648  lr: 4.2944e-05  max_mem: 23242M
[04/16 12:02:39] d2.utils.events INFO:  eta: 2:14:36  iter: 339  total_loss: 0.05867  loss_rel: 0.05867  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2340  data_time: 0.2815  lr: 4.4069e-05  max_mem: 23242M
[04/16 12:03:24] d2.utils.events INFO:  eta: 2:13:51  iter: 359  total_loss: 0.06223  loss_rel: 0.06223  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2338  data_time: 0.3012  lr: 4.5194e-05  max_mem: 23242M
[04/16 12:04:08] d2.utils.events INFO:  eta: 2:12:59  iter: 379  total_loss: 0.06168  loss_rel: 0.06168  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2325  data_time: 0.2759  lr: 4.6319e-05  max_mem: 23242M
[04/16 12:04:52] d2.utils.events INFO:  eta: 2:12:08  iter: 399  total_loss: 0.07072  loss_rel: 0.07072  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2309  data_time: 0.2647  lr: 4.7444e-05  max_mem: 23242M
[04/16 12:05:37] d2.utils.events INFO:  eta: 2:11:25  iter: 419  total_loss: 0.04647  loss_rel: 0.04647  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2304  data_time: 0.2890  lr: 4.8569e-05  max_mem: 23242M
[04/16 12:06:21] d2.utils.events INFO:  eta: 2:10:55  iter: 439  total_loss: 0.05815  loss_rel: 0.05815  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2299  data_time: 0.2827  lr: 4.9694e-05  max_mem: 23242M
[04/16 12:07:06] d2.utils.events INFO:  eta: 2:10:16  iter: 459  total_loss: 0.05401  loss_rel: 0.05401  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2301  data_time: 0.2802  lr: 5.0819e-05  max_mem: 23242M
[04/16 12:07:49] d2.utils.events INFO:  eta: 2:09:12  iter: 479  total_loss: 0.04172  loss_rel: 0.04172  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2276  data_time: 0.2732  lr: 5.1944e-05  max_mem: 23242M
[04/16 12:08:34] d2.utils.events INFO:  eta: 2:08:29  iter: 499  total_loss: 0.04808  loss_rel: 0.04808  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2275  data_time: 0.3067  lr: 5.3069e-05  max_mem: 23242M
[04/16 12:09:18] d2.utils.events INFO:  eta: 2:07:51  iter: 519  total_loss: 0.05004  loss_rel: 0.05004  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2280  data_time: 0.2855  lr: 5.4194e-05  max_mem: 23242M
[04/16 12:10:04] d2.utils.events INFO:  eta: 2:07:01  iter: 539  total_loss: 0.05245  loss_rel: 0.05245  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2299  data_time: 0.2839  lr: 5.5319e-05  max_mem: 23242M
[04/16 12:10:48] d2.utils.events INFO:  eta: 2:06:04  iter: 559  total_loss: 0.03689  loss_rel: 0.03689  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2282  data_time: 0.2763  lr: 5.6444e-05  max_mem: 23242M
[04/16 12:11:32] d2.utils.events INFO:  eta: 2:05:15  iter: 579  total_loss: 0.0496  loss_rel: 0.0496  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2276  data_time: 0.2847  lr: 5.7569e-05  max_mem: 23242M
[04/16 12:12:16] d2.utils.events INFO:  eta: 2:04:22  iter: 599  total_loss: 0.03499  loss_rel: 0.03499  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2262  data_time: 0.2814  lr: 5.8694e-05  max_mem: 23242M
[04/16 12:13:01] d2.utils.events INFO:  eta: 2:03:34  iter: 619  total_loss: 0.05214  loss_rel: 0.05214  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2273  data_time: 0.3055  lr: 5.9819e-05  max_mem: 23242M
[04/16 12:13:46] d2.utils.events INFO:  eta: 2:03:04  iter: 639  total_loss: 0.05052  loss_rel: 0.05052  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2280  data_time: 0.2714  lr: 6.0944e-05  max_mem: 23242M
[04/16 12:14:30] d2.utils.events INFO:  eta: 2:02:17  iter: 659  total_loss: 0.03892  loss_rel: 0.03892  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2269  data_time: 0.2860  lr: 6.2069e-05  max_mem: 23242M
[04/16 12:15:16] d2.utils.events INFO:  eta: 2:01:36  iter: 679  total_loss: 0.03789  loss_rel: 0.03789  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2291  data_time: 0.3031  lr: 6.3194e-05  max_mem: 23242M
[04/16 12:16:00] d2.utils.events INFO:  eta: 2:00:48  iter: 699  total_loss: 0.04917  loss_rel: 0.04917  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2284  data_time: 0.2954  lr: 6.4319e-05  max_mem: 23242M
[04/16 12:16:44] d2.utils.events INFO:  eta: 1:59:59  iter: 719  total_loss: 0.03359  loss_rel: 0.03359  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2278  data_time: 0.2778  lr: 6.5444e-05  max_mem: 23242M
[04/16 12:17:29] d2.utils.events INFO:  eta: 1:59:20  iter: 739  total_loss: 0.02313  loss_rel: 0.02313  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2282  data_time: 0.2928  lr: 6.6569e-05  max_mem: 23242M
[04/16 12:18:12] d2.utils.events INFO:  eta: 1:58:27  iter: 759  total_loss: 0.03912  loss_rel: 0.03912  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2264  data_time: 0.2831  lr: 6.7694e-05  max_mem: 23242M
[04/16 12:18:58] d2.utils.events INFO:  eta: 1:57:47  iter: 779  total_loss: 0.03817  loss_rel: 0.03817  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2279  data_time: 0.2708  lr: 6.8819e-05  max_mem: 23242M
[04/16 12:19:42] d2.utils.events INFO:  eta: 1:56:59  iter: 799  total_loss: 0.02851  loss_rel: 0.02851  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2270  data_time: 0.2814  lr: 6.9944e-05  max_mem: 23242M
[04/16 12:20:27] d2.utils.events INFO:  eta: 1:56:20  iter: 819  total_loss: 0.02948  loss_rel: 0.02948  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2278  data_time: 0.2941  lr: 7.1069e-05  max_mem: 23242M
[04/16 12:21:12] d2.utils.events INFO:  eta: 1:55:32  iter: 839  total_loss: 0.0265  loss_rel: 0.0265  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2277  data_time: 0.2778  lr: 7.2194e-05  max_mem: 23242M
[04/16 12:21:57] d2.utils.events INFO:  eta: 1:55:00  iter: 859  total_loss: 0.03067  loss_rel: 0.03067  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2290  data_time: 0.3433  lr: 7.3319e-05  max_mem: 23242M
[04/16 12:22:41] d2.utils.events INFO:  eta: 1:54:08  iter: 879  total_loss: 0.01996  loss_rel: 0.01996  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2282  data_time: 0.2722  lr: 7.4444e-05  max_mem: 23242M
[04/16 12:23:25] d2.utils.events INFO:  eta: 1:53:29  iter: 899  total_loss: 0.03351  loss_rel: 0.03351  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2278  data_time: 0.2967  lr: 7.5569e-05  max_mem: 23242M
[04/16 12:24:12] d2.utils.events INFO:  eta: 1:52:47  iter: 919  total_loss: 0.03126  loss_rel: 0.03126  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2296  data_time: 0.2935  lr: 7.6694e-05  max_mem: 23242M
[04/16 12:24:55] d2.utils.events INFO:  eta: 1:52:01  iter: 939  total_loss: 0.02618  loss_rel: 0.02618  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2281  data_time: 0.2700  lr: 7.7819e-05  max_mem: 23242M
[04/16 12:25:39] d2.utils.events INFO:  eta: 1:51:13  iter: 959  total_loss: 0.03268  loss_rel: 0.03268  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2278  data_time: 0.2776  lr: 7.8944e-05  max_mem: 23242M
[04/16 12:26:23] d2.utils.events INFO:  eta: 1:50:25  iter: 979  total_loss: 0.02325  loss_rel: 0.02325  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2276  data_time: 0.2701  lr: 8.0069e-05  max_mem: 23242M
[04/16 12:27:07] d2.utils.events INFO:  eta: 1:49:41  iter: 999  total_loss: 0.02084  loss_rel: 0.02084  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2267  data_time: 0.2479  lr: 8.1194e-05  max_mem: 23242M
[04/16 12:27:52] d2.utils.events INFO:  eta: 1:48:57  iter: 1019  total_loss: 0.02309  loss_rel: 0.02309  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2275  data_time: 0.2675  lr: 8.2319e-05  max_mem: 23242M
[04/16 12:28:35] d2.utils.events INFO:  eta: 1:48:13  iter: 1039  total_loss: 0.03169  loss_rel: 0.03169  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2260  data_time: 0.2619  lr: 8.3444e-05  max_mem: 23242M
[04/16 12:29:19] d2.utils.events INFO:  eta: 1:47:22  iter: 1059  total_loss: 0.02904  loss_rel: 0.02904  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2250  data_time: 0.2698  lr: 8.4569e-05  max_mem: 23242M
[04/16 12:30:03] d2.utils.events INFO:  eta: 1:46:35  iter: 1079  total_loss: 0.02452  loss_rel: 0.02452  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2248  data_time: 0.2561  lr: 8.5694e-05  max_mem: 23242M
[04/16 12:30:47] d2.utils.events INFO:  eta: 1:45:51  iter: 1099  total_loss: 0.02256  loss_rel: 0.02256  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2244  data_time: 0.2767  lr: 8.6819e-05  max_mem: 23242M
[04/16 12:31:32] d2.utils.events INFO:  eta: 1:45:06  iter: 1119  total_loss: 0.02487  loss_rel: 0.02487  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2249  data_time: 0.2681  lr: 8.7944e-05  max_mem: 23242M
[04/16 12:32:16] d2.utils.events INFO:  eta: 1:44:18  iter: 1139  total_loss: 0.03003  loss_rel: 0.03003  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2236  data_time: 0.2464  lr: 8.9069e-05  max_mem: 23242M
[04/16 12:32:59] d2.utils.events INFO:  eta: 1:43:31  iter: 1159  total_loss: 0.03006  loss_rel: 0.03006  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2231  data_time: 0.2720  lr: 9.0194e-05  max_mem: 23242M
[04/16 12:33:43] d2.utils.events INFO:  eta: 1:42:44  iter: 1179  total_loss: 0.02801  loss_rel: 0.02801  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2223  data_time: 0.2552  lr: 9.1319e-05  max_mem: 23242M
[04/16 12:34:27] d2.utils.events INFO:  eta: 1:41:57  iter: 1199  total_loss: 0.02753  loss_rel: 0.02753  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2220  data_time: 0.2743  lr: 9.2444e-05  max_mem: 23242M
[04/16 12:35:13] d2.utils.events INFO:  eta: 1:41:15  iter: 1219  total_loss: 0.02508  loss_rel: 0.02508  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2230  data_time: 0.2882  lr: 9.3569e-05  max_mem: 23242M
[04/16 12:35:57] d2.utils.events INFO:  eta: 1:40:36  iter: 1239  total_loss: 0.01703  loss_rel: 0.01703  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2231  data_time: 0.2852  lr: 9.4694e-05  max_mem: 23242M
[04/16 12:36:46] d2.utils.events INFO:  eta: 1:39:58  iter: 1259  total_loss: 0.03158  loss_rel: 0.03158  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2267  data_time: 0.4856  lr: 9.5819e-05  max_mem: 23242M
[04/16 12:37:32] d2.utils.events INFO:  eta: 1:39:08  iter: 1279  total_loss: 0.02736  loss_rel: 0.02736  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2274  data_time: 0.2980  lr: 9.6944e-05  max_mem: 23242M
[04/16 12:38:16] d2.utils.events INFO:  eta: 1:38:22  iter: 1299  total_loss: 0.02348  loss_rel: 0.02348  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2270  data_time: 0.3011  lr: 9.8069e-05  max_mem: 23242M
[04/16 12:39:02] d2.utils.events INFO:  eta: 1:37:49  iter: 1319  total_loss: 0.01834  loss_rel: 0.01834  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2285  data_time: 0.2911  lr: 9.9194e-05  max_mem: 23242M
[04/16 12:39:46] d2.utils.events INFO:  eta: 1:36:55  iter: 1339  total_loss: 0.02045  loss_rel: 0.02045  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2276  data_time: 0.2555  lr: 0.00010032  max_mem: 23242M
[04/16 12:40:29] d2.utils.events INFO:  eta: 1:36:05  iter: 1359  total_loss: 0.01681  loss_rel: 0.01681  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2269  data_time: 0.2862  lr: 0.00010144  max_mem: 23242M
[04/16 12:41:16] d2.utils.events INFO:  eta: 1:35:30  iter: 1379  total_loss: 0.02173  loss_rel: 0.02173  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2280  data_time: 0.3254  lr: 0.00010257  max_mem: 23242M
[04/16 12:41:59] d2.utils.events INFO:  eta: 1:34:45  iter: 1399  total_loss: 0.01863  loss_rel: 0.01863  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2273  data_time: 0.2721  lr: 0.00010369  max_mem: 23242M
[04/16 12:42:43] d2.utils.events INFO:  eta: 1:34:00  iter: 1419  total_loss: 0.02187  loss_rel: 0.02187  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2271  data_time: 0.2762  lr: 0.00010482  max_mem: 23242M
[04/16 12:43:27] d2.utils.events INFO:  eta: 1:33:13  iter: 1439  total_loss: 0.01835  loss_rel: 0.01835  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2266  data_time: 0.2779  lr: 0.00010594  max_mem: 23242M
[04/16 12:44:11] d2.utils.events INFO:  eta: 1:32:21  iter: 1459  total_loss: 0.01906  loss_rel: 0.01906  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2262  data_time: 0.2519  lr: 0.00010707  max_mem: 23242M
[04/16 12:44:56] d2.utils.events INFO:  eta: 1:31:47  iter: 1479  total_loss: 0.0194  loss_rel: 0.0194  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2263  data_time: 0.2748  lr: 0.00010819  max_mem: 23242M
[04/16 12:45:39] d2.utils.events INFO:  eta: 1:31:03  iter: 1499  total_loss: 0.02063  loss_rel: 0.02063  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2255  data_time: 0.2566  lr: 0.00010932  max_mem: 23242M
[04/16 12:46:23] d2.utils.events INFO:  eta: 1:30:19  iter: 1519  total_loss: 0.01721  loss_rel: 0.01721  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2251  data_time: 0.2795  lr: 0.00011044  max_mem: 23242M
[04/16 12:47:09] d2.utils.events INFO:  eta: 1:29:38  iter: 1539  total_loss: 0.021  loss_rel: 0.021  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2259  data_time: 0.2748  lr: 0.00011157  max_mem: 23242M
[04/16 12:47:53] d2.utils.events INFO:  eta: 1:28:59  iter: 1559  total_loss: 0.01629  loss_rel: 0.01629  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2259  data_time: 0.2757  lr: 0.00011269  max_mem: 23242M
[04/16 12:48:37] d2.utils.events INFO:  eta: 1:28:15  iter: 1579  total_loss: 0.01685  loss_rel: 0.01685  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2251  data_time: 0.2480  lr: 0.00011382  max_mem: 23242M
[04/16 12:49:24] d2.utils.events INFO:  eta: 1:27:37  iter: 1599  total_loss: 0.01755  loss_rel: 0.01755  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2268  data_time: 0.3175  lr: 0.00011494  max_mem: 23242M
[04/16 12:50:07] d2.utils.events INFO:  eta: 1:26:52  iter: 1619  total_loss: 0.02145  loss_rel: 0.02145  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2261  data_time: 0.2867  lr: 0.00011607  max_mem: 23242M
[04/16 12:50:51] d2.utils.events INFO:  eta: 1:26:02  iter: 1639  total_loss: 0.01174  loss_rel: 0.01174  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2254  data_time: 0.2951  lr: 0.00011719  max_mem: 23242M
[04/16 12:51:35] d2.utils.events INFO:  eta: 1:25:18  iter: 1659  total_loss: 0.01259  loss_rel: 0.01259  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2252  data_time: 0.2992  lr: 0.00011832  max_mem: 23242M
[04/16 12:52:20] d2.utils.events INFO:  eta: 1:24:28  iter: 1679  total_loss: 0.01961  loss_rel: 0.01961  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2255  data_time: 0.2750  lr: 0.00011944  max_mem: 23242M
[04/16 12:53:05] d2.utils.events INFO:  eta: 1:23:48  iter: 1699  total_loss: 0.01737  loss_rel: 0.01737  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2260  data_time: 0.2915  lr: 0.00012057  max_mem: 23242M
[04/16 12:53:49] d2.utils.events INFO:  eta: 1:23:06  iter: 1719  total_loss: 0.02143  loss_rel: 0.02143  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2257  data_time: 0.2798  lr: 0.00012169  max_mem: 23242M
[04/16 12:54:33] d2.utils.events INFO:  eta: 1:22:18  iter: 1739  total_loss: 0.0157  loss_rel: 0.0157  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2252  data_time: 0.2545  lr: 0.00012282  max_mem: 23242M
[04/16 12:55:17] d2.utils.events INFO:  eta: 1:21:37  iter: 1759  total_loss: 0.01468  loss_rel: 0.01468  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2250  data_time: 0.2877  lr: 0.00012394  max_mem: 23242M
[04/16 12:56:02] d2.utils.events INFO:  eta: 1:20:51  iter: 1779  total_loss: 0.022  loss_rel: 0.022  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2250  data_time: 0.2853  lr: 0.00012507  max_mem: 23242M
[04/16 12:56:47] d2.utils.events INFO:  eta: 1:20:08  iter: 1799  total_loss: 0.01718  loss_rel: 0.01718  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2252  data_time: 0.2894  lr: 0.00012619  max_mem: 23242M
[04/16 12:57:31] d2.utils.events INFO:  eta: 1:19:22  iter: 1819  total_loss: 0.01494  loss_rel: 0.01494  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2251  data_time: 0.2642  lr: 0.00012732  max_mem: 23242M
[04/16 12:58:15] d2.utils.events INFO:  eta: 1:18:37  iter: 1839  total_loss: 0.01649  loss_rel: 0.01649  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2249  data_time: 0.2689  lr: 0.00012844  max_mem: 23242M
[04/16 12:58:59] d2.utils.events INFO:  eta: 1:17:48  iter: 1859  total_loss: 0.01513  loss_rel: 0.01513  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2247  data_time: 0.2666  lr: 0.00012957  max_mem: 23242M
[04/16 12:59:42] d2.utils.events INFO:  eta: 1:17:05  iter: 1879  total_loss: 0.01254  loss_rel: 0.01254  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2238  data_time: 0.2626  lr: 0.00013069  max_mem: 23242M
[04/16 13:00:26] d2.utils.events INFO:  eta: 1:16:22  iter: 1899  total_loss: 0.01082  loss_rel: 0.01082  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2235  data_time: 0.2606  lr: 0.00013182  max_mem: 23242M
[04/16 13:01:12] d2.utils.events INFO:  eta: 1:15:37  iter: 1919  total_loss: 0.01185  loss_rel: 0.01185  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2241  data_time: 0.3096  lr: 0.00013294  max_mem: 23242M
[04/16 13:01:55] d2.utils.events INFO:  eta: 1:14:54  iter: 1939  total_loss: 0.01683  loss_rel: 0.01683  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2235  data_time: 0.2807  lr: 0.00013407  max_mem: 23242M
[04/16 13:02:41] d2.utils.events INFO:  eta: 1:14:12  iter: 1959  total_loss: 0.01262  loss_rel: 0.01262  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2242  data_time: 0.2856  lr: 0.00013519  max_mem: 23242M
[04/16 13:03:25] d2.utils.events INFO:  eta: 1:13:30  iter: 1979  total_loss: 0.01207  loss_rel: 0.01207  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2239  data_time: 0.2691  lr: 0.00013632  max_mem: 23242M
[04/16 13:04:08] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-motif-short/model_0001999.pth
[04/16 13:04:37] d2.utils.events INFO:  eta: 1:12:43  iter: 1999  total_loss: 0.01221  loss_rel: 0.01221  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2233  data_time: 0.2377  lr: 0.00013744  max_mem: 23242M
[04/16 13:05:20] d2.utils.events INFO:  eta: 1:11:56  iter: 2019  total_loss: 0.01308  loss_rel: 0.01308  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2227  data_time: 0.2460  lr: 0.00013857  max_mem: 23242M
[04/16 13:06:04] d2.utils.events INFO:  eta: 1:11:14  iter: 2039  total_loss: 0.01597  loss_rel: 0.01597  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2228  data_time: 0.3004  lr: 0.00013969  max_mem: 23242M
[04/16 13:06:49] d2.utils.events INFO:  eta: 1:10:34  iter: 2059  total_loss: 0.0129  loss_rel: 0.0129  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2228  data_time: 0.2632  lr: 0.00014082  max_mem: 23242M
[04/16 13:07:32] d2.utils.events INFO:  eta: 1:09:46  iter: 2079  total_loss: 0.009955  loss_rel: 0.009955  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2219  data_time: 0.2379  lr: 0.00014194  max_mem: 23242M
[04/16 13:08:17] d2.utils.events INFO:  eta: 1:09:03  iter: 2099  total_loss: 0.01331  loss_rel: 0.01331  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2223  data_time: 0.3035  lr: 0.00014307  max_mem: 23242M
[04/16 13:09:01] d2.utils.events INFO:  eta: 1:08:18  iter: 2119  total_loss: 0.01192  loss_rel: 0.01192  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2220  data_time: 0.2630  lr: 0.00014419  max_mem: 23242M
[04/16 13:09:46] d2.utils.events INFO:  eta: 1:07:36  iter: 2139  total_loss: 0.0136  loss_rel: 0.0136  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2223  data_time: 0.2769  lr: 0.00014532  max_mem: 23242M
[04/16 13:10:30] d2.utils.events INFO:  eta: 1:06:54  iter: 2159  total_loss: 0.01342  loss_rel: 0.01342  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2224  data_time: 0.2549  lr: 0.00014644  max_mem: 23242M
[04/16 13:11:15] d2.utils.events INFO:  eta: 1:06:14  iter: 2179  total_loss: 0.01118  loss_rel: 0.01118  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2225  data_time: 0.2881  lr: 0.00014757  max_mem: 23242M
[04/16 13:11:59] d2.utils.events INFO:  eta: 1:05:28  iter: 2199  total_loss: 0.01509  loss_rel: 0.01509  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2221  data_time: 0.2685  lr: 0.00014869  max_mem: 23242M
[04/16 13:12:43] d2.utils.events INFO:  eta: 1:04:44  iter: 2219  total_loss: 0.01786  loss_rel: 0.01786  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2222  data_time: 0.2814  lr: 0.00014982  max_mem: 23242M
[04/16 13:13:28] d2.utils.events INFO:  eta: 1:03:59  iter: 2239  total_loss: 0.007893  loss_rel: 0.007893  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2222  data_time: 0.2596  lr: 0.00015094  max_mem: 23242M
[04/16 13:14:11] d2.utils.events INFO:  eta: 1:03:12  iter: 2259  total_loss: 0.01035  loss_rel: 0.01035  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2215  data_time: 0.2647  lr: 0.00015207  max_mem: 23242M
[04/16 13:14:55] d2.utils.events INFO:  eta: 1:02:28  iter: 2279  total_loss: 0.01492  loss_rel: 0.01492  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2216  data_time: 0.2843  lr: 0.00015319  max_mem: 23242M
[04/16 13:15:40] d2.utils.events INFO:  eta: 1:01:45  iter: 2299  total_loss: 0.01009  loss_rel: 0.01009  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2218  data_time: 0.2870  lr: 0.00015432  max_mem: 23242M
[04/16 13:16:25] d2.utils.events INFO:  eta: 1:01:01  iter: 2319  total_loss: 0.01206  loss_rel: 0.01206  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2219  data_time: 0.2675  lr: 0.00015544  max_mem: 23242M
[04/16 13:17:09] d2.utils.events INFO:  eta: 1:00:20  iter: 2339  total_loss: 0.01253  loss_rel: 0.01253  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2217  data_time: 0.2486  lr: 0.00015657  max_mem: 23242M
[04/16 13:17:53] d2.utils.events INFO:  eta: 0:59:36  iter: 2359  total_loss: 0.02029  loss_rel: 0.02029  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2214  data_time: 0.2637  lr: 0.00015769  max_mem: 23242M
[04/16 13:18:37] d2.utils.events INFO:  eta: 0:58:51  iter: 2379  total_loss: 0.01327  loss_rel: 0.01327  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2215  data_time: 0.2621  lr: 0.00015882  max_mem: 23242M
[04/16 13:19:22] d2.utils.events INFO:  eta: 0:58:07  iter: 2399  total_loss: 0.009727  loss_rel: 0.009727  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2213  data_time: 0.2709  lr: 0.00015994  max_mem: 23242M
[04/16 13:20:05] d2.utils.events INFO:  eta: 0:57:23  iter: 2419  total_loss: 0.01047  loss_rel: 0.01047  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2209  data_time: 0.2515  lr: 0.00016107  max_mem: 23242M
[04/16 13:20:50] d2.utils.events INFO:  eta: 0:56:41  iter: 2439  total_loss: 0.01129  loss_rel: 0.01129  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2213  data_time: 0.2966  lr: 0.00016219  max_mem: 23242M
[04/16 13:21:35] d2.utils.events INFO:  eta: 0:55:58  iter: 2459  total_loss: 0.01149  loss_rel: 0.01149  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2214  data_time: 0.2687  lr: 0.00016332  max_mem: 23242M
[04/16 13:22:19] d2.utils.events INFO:  eta: 0:55:13  iter: 2479  total_loss: 0.01189  loss_rel: 0.01189  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2211  data_time: 0.2642  lr: 0.00016444  max_mem: 23242M
[04/16 13:23:03] d2.utils.events INFO:  eta: 0:54:29  iter: 2499  total_loss: 0.01189  loss_rel: 0.01189  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2211  data_time: 0.2688  lr: 0.00016557  max_mem: 23242M
[04/16 13:23:46] d2.utils.events INFO:  eta: 0:53:44  iter: 2519  total_loss: 0.00855  loss_rel: 0.00855  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2206  data_time: 0.2518  lr: 0.00016669  max_mem: 23242M
[04/16 13:24:30] d2.utils.events INFO:  eta: 0:52:59  iter: 2539  total_loss: 0.007224  loss_rel: 0.007224  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2204  data_time: 0.2703  lr: 0.00016782  max_mem: 23242M
[04/16 13:25:15] d2.utils.events INFO:  eta: 0:52:15  iter: 2559  total_loss: 0.00593  loss_rel: 0.00593  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2205  data_time: 0.2706  lr: 0.00016894  max_mem: 23242M
[04/16 13:25:59] d2.utils.events INFO:  eta: 0:51:32  iter: 2579  total_loss: 0.01086  loss_rel: 0.01086  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2204  data_time: 0.2691  lr: 0.00017007  max_mem: 23242M
[04/16 13:26:43] d2.utils.events INFO:  eta: 0:50:44  iter: 2599  total_loss: 0.0114  loss_rel: 0.0114  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2203  data_time: 0.2634  lr: 0.00017119  max_mem: 23242M
[04/16 13:27:27] d2.utils.events INFO:  eta: 0:50:00  iter: 2619  total_loss: 0.01151  loss_rel: 0.01151  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2200  data_time: 0.2651  lr: 0.00017232  max_mem: 23242M
[04/16 13:28:11] d2.utils.events INFO:  eta: 0:49:17  iter: 2639  total_loss: 0.01077  loss_rel: 0.01077  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2200  data_time: 0.2845  lr: 0.00017344  max_mem: 23242M
[04/16 13:28:56] d2.utils.events INFO:  eta: 0:48:36  iter: 2659  total_loss: 0.01037  loss_rel: 0.01037  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2200  data_time: 0.2673  lr: 0.00017457  max_mem: 23242M
[04/16 13:29:40] d2.utils.events INFO:  eta: 0:47:54  iter: 2679  total_loss: 0.009347  loss_rel: 0.009347  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2198  data_time: 0.2607  lr: 0.00017569  max_mem: 23242M
[04/16 13:30:24] d2.utils.events INFO:  eta: 0:47:10  iter: 2699  total_loss: 0.009361  loss_rel: 0.009361  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2196  data_time: 0.2955  lr: 0.00017682  max_mem: 23242M
[04/16 13:31:09] d2.utils.events INFO:  eta: 0:46:27  iter: 2719  total_loss: 0.005905  loss_rel: 0.005905  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2200  data_time: 0.2740  lr: 0.00017794  max_mem: 23242M
[04/16 13:31:54] d2.utils.events INFO:  eta: 0:45:45  iter: 2739  total_loss: 0.007776  loss_rel: 0.007776  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2203  data_time: 0.2796  lr: 0.00017907  max_mem: 23242M
[04/16 13:32:38] d2.utils.events INFO:  eta: 0:45:02  iter: 2759  total_loss: 0.01078  loss_rel: 0.01078  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2200  data_time: 0.2715  lr: 0.00018019  max_mem: 23242M
[04/16 13:33:21] d2.utils.events INFO:  eta: 0:44:17  iter: 2779  total_loss: 0.006248  loss_rel: 0.006248  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2197  data_time: 0.2610  lr: 0.00018132  max_mem: 23242M
[04/16 13:34:06] d2.utils.events INFO:  eta: 0:43:35  iter: 2799  total_loss: 0.01034  loss_rel: 0.01034  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2197  data_time: 0.2700  lr: 0.00018244  max_mem: 23242M
[04/16 13:34:50] d2.utils.events INFO:  eta: 0:42:50  iter: 2819  total_loss: 0.0104  loss_rel: 0.0104  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2196  data_time: 0.2457  lr: 0.00018357  max_mem: 23242M
[04/16 13:35:34] d2.utils.events INFO:  eta: 0:42:06  iter: 2839  total_loss: 0.01635  loss_rel: 0.01635  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2195  data_time: 0.2785  lr: 0.00018469  max_mem: 23242M
[04/16 13:36:19] d2.utils.events INFO:  eta: 0:41:22  iter: 2859  total_loss: 0.009585  loss_rel: 0.009585  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2195  data_time: 0.2818  lr: 0.00018582  max_mem: 23242M
[04/16 13:37:04] d2.utils.events INFO:  eta: 0:40:41  iter: 2879  total_loss: 0.01096  loss_rel: 0.01096  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2197  data_time: 0.2952  lr: 0.00018694  max_mem: 23242M
[04/16 13:37:48] d2.utils.events INFO:  eta: 0:39:57  iter: 2899  total_loss: 0.006977  loss_rel: 0.006977  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2196  data_time: 0.2793  lr: 0.00018807  max_mem: 23242M
[04/16 13:38:34] d2.utils.events INFO:  eta: 0:39:13  iter: 2919  total_loss: 0.0076  loss_rel: 0.0076  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2201  data_time: 0.2813  lr: 0.00018919  max_mem: 23242M
[04/16 13:39:17] d2.utils.events INFO:  eta: 0:38:30  iter: 2939  total_loss: 0.01044  loss_rel: 0.01044  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2199  data_time: 0.2688  lr: 0.00019032  max_mem: 23242M
[04/16 13:40:03] d2.utils.events INFO:  eta: 0:37:47  iter: 2959  total_loss: 0.01285  loss_rel: 0.01285  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2202  data_time: 0.3015  lr: 0.00019144  max_mem: 23242M
[04/16 13:40:46] d2.utils.events INFO:  eta: 0:37:04  iter: 2979  total_loss: 0.004975  loss_rel: 0.004975  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2200  data_time: 0.2695  lr: 0.00019257  max_mem: 23242M
[04/16 13:41:30] d2.utils.events INFO:  eta: 0:36:21  iter: 2999  total_loss: 0.009059  loss_rel: 0.009059  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2197  data_time: 0.2827  lr: 0.00019369  max_mem: 23242M
[04/16 13:42:14] d2.utils.events INFO:  eta: 0:35:38  iter: 3019  total_loss: 0.007976  loss_rel: 0.007976  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2194  data_time: 0.2514  lr: 0.00019482  max_mem: 23242M
[04/16 13:42:58] d2.utils.events INFO:  eta: 0:34:55  iter: 3039  total_loss: 0.008701  loss_rel: 0.008701  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2194  data_time: 0.2551  lr: 0.00019594  max_mem: 23242M
[04/16 13:43:41] d2.utils.events INFO:  eta: 0:34:09  iter: 3059  total_loss: 0.008327  loss_rel: 0.008327  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2191  data_time: 0.2655  lr: 0.00019707  max_mem: 23242M
[04/16 13:44:26] d2.utils.events INFO:  eta: 0:33:30  iter: 3079  total_loss: 0.008922  loss_rel: 0.008922  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2191  data_time: 0.2633  lr: 0.00019819  max_mem: 23242M
[04/16 13:45:11] d2.utils.events INFO:  eta: 0:32:44  iter: 3099  total_loss: 0.01391  loss_rel: 0.01391  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2192  data_time: 0.2844  lr: 0.00019932  max_mem: 23242M
[04/16 13:45:55] d2.utils.events INFO:  eta: 0:32:03  iter: 3119  total_loss: 0.007883  loss_rel: 0.007883  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2193  data_time: 0.2600  lr: 0.00020044  max_mem: 23242M
[04/16 13:46:39] d2.utils.events INFO:  eta: 0:31:16  iter: 3139  total_loss: 0.005773  loss_rel: 0.005773  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2581  lr: 0.00020157  max_mem: 23242M
[04/16 13:47:25] d2.utils.events INFO:  eta: 0:30:36  iter: 3159  total_loss: 0.01183  loss_rel: 0.01183  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2195  data_time: 0.2801  lr: 0.00020269  max_mem: 23242M
[04/16 13:48:08] d2.utils.events INFO:  eta: 0:29:48  iter: 3179  total_loss: 0.003962  loss_rel: 0.003962  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2591  lr: 0.00020382  max_mem: 23242M
[04/16 13:48:52] d2.utils.events INFO:  eta: 0:29:04  iter: 3199  total_loss: 0.005557  loss_rel: 0.005557  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.3028  lr: 0.00020494  max_mem: 23242M
[04/16 13:49:36] d2.utils.events INFO:  eta: 0:28:22  iter: 3219  total_loss: 0.01202  loss_rel: 0.01202  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2727  lr: 0.00020607  max_mem: 23242M
[04/16 13:50:21] d2.utils.events INFO:  eta: 0:27:41  iter: 3239  total_loss: 0.005324  loss_rel: 0.005324  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2192  data_time: 0.2931  lr: 0.00020719  max_mem: 23242M
[04/16 13:51:05] d2.utils.events INFO:  eta: 0:26:56  iter: 3259  total_loss: 0.007963  loss_rel: 0.007963  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2189  data_time: 0.2926  lr: 0.00020832  max_mem: 23242M
[04/16 13:51:50] d2.utils.events INFO:  eta: 0:26:12  iter: 3279  total_loss: 0.006075  loss_rel: 0.006075  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2739  lr: 0.00020944  max_mem: 23242M
[04/16 13:52:36] d2.utils.events INFO:  eta: 0:25:30  iter: 3299  total_loss: 0.007418  loss_rel: 0.007418  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2195  data_time: 0.2757  lr: 0.00021057  max_mem: 23242M
[04/16 13:53:19] d2.utils.events INFO:  eta: 0:24:45  iter: 3319  total_loss: 0.00594  loss_rel: 0.00594  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2193  data_time: 0.2951  lr: 0.00021169  max_mem: 23242M
[04/16 13:54:04] d2.utils.events INFO:  eta: 0:23:59  iter: 3339  total_loss: 0.01002  loss_rel: 0.01002  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2194  data_time: 0.2588  lr: 0.00021282  max_mem: 23242M
[04/16 13:54:47] d2.utils.events INFO:  eta: 0:23:15  iter: 3359  total_loss: 0.004582  loss_rel: 0.004582  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2189  data_time: 0.2615  lr: 0.00021394  max_mem: 23242M
[04/16 13:55:32] d2.utils.events INFO:  eta: 0:22:31  iter: 3379  total_loss: 0.005299  loss_rel: 0.005299  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2843  lr: 0.00021507  max_mem: 23242M
[04/16 13:56:16] d2.utils.events INFO:  eta: 0:21:51  iter: 3399  total_loss: 0.004598  loss_rel: 0.004598  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2645  lr: 0.00021619  max_mem: 23242M
[04/16 13:57:02] d2.utils.events INFO:  eta: 0:21:08  iter: 3419  total_loss: 0.008934  loss_rel: 0.008934  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2193  data_time: 0.2676  lr: 0.00021732  max_mem: 23242M
[04/16 13:57:45] d2.utils.events INFO:  eta: 0:20:21  iter: 3439  total_loss: 0.004672  loss_rel: 0.004672  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2189  data_time: 0.2794  lr: 0.00021844  max_mem: 23242M
[04/16 13:58:29] d2.utils.events INFO:  eta: 0:19:38  iter: 3459  total_loss: 0.009398  loss_rel: 0.009398  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2189  data_time: 0.2619  lr: 0.00021957  max_mem: 23242M
[04/16 13:59:14] d2.utils.events INFO:  eta: 0:18:54  iter: 3479  total_loss: 0.00629  loss_rel: 0.00629  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2752  lr: 0.00022069  max_mem: 23242M
[04/16 13:59:57] d2.utils.events INFO:  eta: 0:18:10  iter: 3499  total_loss: 0.002949  loss_rel: 0.002949  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.2587  lr: 0.00022182  max_mem: 23242M
[04/16 14:00:42] d2.utils.events INFO:  eta: 0:17:27  iter: 3519  total_loss: 0.004359  loss_rel: 0.004359  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2946  lr: 0.00022294  max_mem: 23242M
[04/16 14:01:26] d2.utils.events INFO:  eta: 0:16:43  iter: 3539  total_loss: 0.005314  loss_rel: 0.005314  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.2555  lr: 0.00022407  max_mem: 23242M
[04/16 14:02:11] d2.utils.events INFO:  eta: 0:16:01  iter: 3559  total_loss: 0.003714  loss_rel: 0.003714  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.2746  lr: 0.00022519  max_mem: 23242M
[04/16 14:02:55] d2.utils.events INFO:  eta: 0:15:18  iter: 3579  total_loss: 0.004749  loss_rel: 0.004749  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.2711  lr: 0.00022632  max_mem: 23242M
[04/16 14:03:39] d2.utils.events INFO:  eta: 0:14:34  iter: 3599  total_loss: 0.00636  loss_rel: 0.00636  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2187  data_time: 0.2688  lr: 0.00022744  max_mem: 23242M
[04/16 14:04:25] d2.utils.events INFO:  eta: 0:13:51  iter: 3619  total_loss: 0.006915  loss_rel: 0.006915  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2191  data_time: 0.2905  lr: 0.00022857  max_mem: 23242M
[04/16 14:05:08] d2.utils.events INFO:  eta: 0:13:07  iter: 3639  total_loss: 0.008803  loss_rel: 0.008803  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2189  data_time: 0.2710  lr: 0.00022969  max_mem: 23242M
[04/16 14:05:52] d2.utils.events INFO:  eta: 0:12:23  iter: 3659  total_loss: 0.004308  loss_rel: 0.004308  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.2931  lr: 0.00023082  max_mem: 23242M
[04/16 14:06:37] d2.utils.events INFO:  eta: 0:11:40  iter: 3679  total_loss: 0.004995  loss_rel: 0.004995  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.2635  lr: 0.00023194  max_mem: 23242M
[04/16 14:07:21] d2.utils.events INFO:  eta: 0:10:56  iter: 3699  total_loss: 0.004358  loss_rel: 0.004358  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2186  data_time: 0.2622  lr: 0.00023307  max_mem: 23242M
[04/16 14:08:06] d2.utils.events INFO:  eta: 0:10:12  iter: 3719  total_loss: 0.007193  loss_rel: 0.007193  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2189  data_time: 0.2928  lr: 0.00023419  max_mem: 23242M
[04/16 14:08:50] d2.utils.events INFO:  eta: 0:09:28  iter: 3739  total_loss: 0.007178  loss_rel: 0.007178  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2187  data_time: 0.2595  lr: 0.00023532  max_mem: 23242M
[04/16 14:09:35] d2.utils.events INFO:  eta: 0:08:45  iter: 3759  total_loss: 0.01039  loss_rel: 0.01039  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2773  lr: 0.00023644  max_mem: 23242M
[04/16 14:10:18] d2.utils.events INFO:  eta: 0:08:01  iter: 3779  total_loss: 0.003257  loss_rel: 0.003257  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2186  data_time: 0.2499  lr: 0.00023757  max_mem: 23242M
[04/16 14:11:04] d2.utils.events INFO:  eta: 0:07:17  iter: 3799  total_loss: 0.005498  loss_rel: 0.005498  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2998  lr: 0.00023869  max_mem: 23242M
[04/16 14:11:47] d2.utils.events INFO:  eta: 0:06:33  iter: 3819  total_loss: 0.009006  loss_rel: 0.009006  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2187  data_time: 0.2786  lr: 0.00023982  max_mem: 23242M
[04/16 14:12:32] d2.utils.events INFO:  eta: 0:05:50  iter: 3839  total_loss: 0.007671  loss_rel: 0.007671  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.2637  lr: 0.00024094  max_mem: 23242M
[04/16 14:13:16] d2.utils.events INFO:  eta: 0:05:06  iter: 3859  total_loss: 0.00655  loss_rel: 0.00655  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2187  data_time: 0.2584  lr: 0.00024207  max_mem: 23242M
[04/16 14:14:01] d2.utils.events INFO:  eta: 0:04:22  iter: 3879  total_loss: 0.004279  loss_rel: 0.004279  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2187  data_time: 0.2799  lr: 0.00024319  max_mem: 23242M
[04/16 14:14:46] d2.utils.events INFO:  eta: 0:03:38  iter: 3899  total_loss: 0.00268  loss_rel: 0.00268  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2189  data_time: 0.2675  lr: 0.00024432  max_mem: 23242M
[04/16 14:15:29] d2.utils.events INFO:  eta: 0:02:54  iter: 3919  total_loss: 0.00614  loss_rel: 0.00614  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2187  data_time: 0.2741  lr: 0.00024544  max_mem: 23242M
[04/16 14:16:13] d2.utils.events INFO:  eta: 0:02:10  iter: 3939  total_loss: 0.005735  loss_rel: 0.005735  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2186  data_time: 0.2612  lr: 0.00024657  max_mem: 23242M
[04/16 14:16:57] d2.utils.events INFO:  eta: 0:01:27  iter: 3959  total_loss: 0.00438  loss_rel: 0.00438  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2185  data_time: 0.2755  lr: 0.00024769  max_mem: 23242M
[04/16 14:17:43] d2.utils.events INFO:  eta: 0:00:43  iter: 3979  total_loss: 0.004117  loss_rel: 0.004117  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2188  data_time: 0.3030  lr: 0.00024882  max_mem: 23242M
[04/16 14:18:28] d2.data.datasets.coco INFO: Loaded 55 images in COCO format from ../datasets/coco/annotations/instances_val2017.json
[04/16 14:18:28] d2.data.build INFO: Distribution of instances among all 3 categories:
[36m|   category   | #instances   |  category  | #instances   |   category   | #instances   |
|:------------:|:-------------|:----------:|:-------------|:------------:|:-------------|
| intersection | 3237         |  spacing   | 4793         | _background_ | 0            |
|              |              |            |              |              |              |
|    total     | 8030         |            |              |              |              |[0m
[04/16 14:18:28] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/16 14:18:28] d2.data.common INFO: Serializing 55 elements to byte tensors and concatenating them all ...
[04/16 14:18:28] d2.data.common INFO: Serialized dataset takes 0.85 MiB
[04/16 14:18:28] d2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[04/16 14:19:04] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/16 14:19:04] d2.evaluation.coco_evaluation INFO: Saving results to ../output-step3-predcl-motif-short/coco_instances_results.json
[04/16 14:19:04] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/16 14:19:04] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/16 14:19:04] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.23 seconds.
[04/16 14:19:04] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/16 14:19:04] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/16 14:19:04] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl  |
|:------:|:------:|:------:|:------:|:------:|:-----:|
| 84.143 | 84.143 | 84.143 | 79.687 | 94.554 |  nan  |
[04/16 14:19:04] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[04/16 14:19:04] d2.evaluation.coco_evaluation INFO: Per-category bbox AP: 
| category     | AP     | category   | AP     | category     | AP   |
|:-------------|:-------|:-----------|:-------|:-------------|:-----|
| intersection | 91.058 | spacing    | 77.228 | _background_ | nan  |
[04/16 14:19:04] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *segm*
[04/16 14:19:05] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.35 seconds.
[04/16 14:19:05] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/16 14:19:05] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.01 seconds.
[04/16 14:19:05] d2.evaluation.coco_evaluation INFO: Evaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl  |
|:------:|:------:|:------:|:------:|:------:|:-----:|
| 51.489 | 81.545 | 59.105 | 49.092 | 65.249 |  nan  |
[04/16 14:19:05] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[04/16 14:19:05] d2.evaluation.coco_evaluation INFO: Per-category segm AP: 
| category     | AP     | category   | AP     | category     | AP   |
|:-------------|:-------|:-----------|:-------|:-------------|:-----|
| intersection | 55.721 | spacing    | 47.258 | _background_ | nan  |
[04/16 14:19:05] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/16 14:19:05] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/16 14:19:05] d2.evaluation.testing INFO: copypaste: 84.1430,84.1430,84.1430,79.6873,94.5545,nan
[04/16 14:19:05] d2.evaluation.testing INFO: copypaste: Task: segm
[04/16 14:19:05] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/16 14:19:05] d2.evaluation.testing INFO: copypaste: 51.4894,81.5446,59.1050,49.0920,65.2495,nan
[04/16 14:19:05] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[04/16 14:19:05] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|   category   | #instances   |
|:------------:|:-------------|
| intersection | 3397         |
|              |              |[0m
[04/16 14:19:05] d2.data.common INFO: Serializing 42 elements to byte tensors and concatenating them all ...
[04/16 14:19:05] d2.data.common INFO: Serialized dataset takes 0.44 MiB
[04/16 14:19:05] detectron2 INFO: Following metrics will be use for evaluation
[04/16 14:19:05] detectron2 INFO: ('SGRecall', 'SGNoGraphConstraintRecall', 'SGZeroShotRecall', 'SGPairAccuracy', 'SGMeanRecall')
[04/16 14:19:05] d2.evaluation.coco_evaluation WARNING: COCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[04/16 14:19:05] d2.evaluation.coco_evaluation INFO: Trying to convert 'VG_test' to COCO format ...
[04/16 14:19:05] d2.data.datasets.coco INFO: Converting annotations of dataset 'VG_test' to COCO format ...)
[04/16 14:19:05] d2.data.datasets.coco INFO: Converting dataset dicts into COCO format
[04/16 14:19:05] d2.data.datasets.coco INFO: Conversion finished, #images: 42, #annotations: 3397
[04/16 14:19:05] d2.data.datasets.coco INFO: Caching COCO format annotations at '../output-step3-predcl-motif-short/inference/VG_test_coco_format.json' ...
[04/16 14:19:05] detectron2 INFO: Loading zero shot triplets
[04/16 14:19:06] detectron2 INFO: Start inference on 42 images
[04/16 14:19:08] detectron2 INFO: Inference done 14/42. 0.1006 s / img. ETA=0:00:03
[04/16 14:19:09] detectron2 INFO: Total inference time: 0:00:02.660975 (0.071918 s / img per device, on 1 devices)
[04/16 14:19:09] detectron2 INFO: Total inference pure compute time: 0:00:01 (0.041777 s / img per device, on 1 devices)
[04/16 14:19:10] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[04/16 14:19:10] d2.evaluation.coco_evaluation INFO: Saving results to ../output-step3-predcl-motif-short/inference/coco_instances_results.json
[04/16 14:19:10] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[04/16 14:19:10] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[04/16 14:19:10] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.02 seconds.
[04/16 14:19:10] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[04/16 14:19:10] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.00 seconds.
[04/16 14:19:10] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |   APm   |  APl  |
|:-----:|:------:|:------:|:-----:|:-------:|:-----:|
| 7.921 | 7.921  | 7.921  | 6.931 | 100.000 |  nan  |
[04/16 14:19:10] d2.evaluation.coco_evaluation INFO: Some metrics cannot be computed and is shown as NaN.
[04/16 14:19:10] detectron2 INFO: Gathering data
[04/16 14:19:10] detectron2 INFO: Predictions Gathered
[04/16 14:19:10] detectron2 INFO: Saving output prediction
[04/16 14:19:10] detectron2 INFO: Computing Scene Graph Metrics
[04/16 14:19:10] detectron2 INFO: Preparing Global Container
[04/16 14:19:10] detectron2 INFO: Scene Graph Metric Evaluation Complete. Computing recall statistics...
[04/16 14:19:10] detectron2 INFO: Scene Graph Results for mode: predcls
[04/16 14:19:10] d2.evaluation.testing INFO: copypaste: Task: bbox
[04/16 14:19:10] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[04/16 14:19:10] d2.evaluation.testing INFO: copypaste: 7.9208,7.9208,7.9208,6.9307,100.0000,nan
[04/16 14:19:10] d2.evaluation.testing INFO: copypaste: Task: SG
[04/16 14:19:10] d2.evaluation.testing INFO: copypaste: SGMeanRecall@20,SGMeanRecall@50,SGMeanRecall@100
[04/16 14:19:10] d2.evaluation.testing INFO: copypaste: 0.3519,0.6132,0.8717
[04/16 14:19:10] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-motif-short/best_model_final.pth.pth
[04/16 14:19:36] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-motif-short/model_0003999.pth
[04/16 14:20:01] fvcore.common.checkpoint INFO: Saving checkpoint to ../output-step3-predcl-motif-short/model_final.pth
[04/16 14:20:33] d2.utils.events INFO:  eta: 0:00:00  iter: 3999  total_loss: 0.005372  loss_rel: 0.005372  loss_refine_obj: 0  loss_mask_segmentation: 0  time: 2.2190  data_time: 0.2627  lr: 0.00024994  max_mem: 23242M
[04/16 14:20:33] d2.engine.hooks INFO: Overall training speed: 3998 iterations in 2:27:51 (2.2190 s / it)
[04/16 14:20:33] d2.engine.hooks INFO: Total training time: 2:30:29 (0:02:37 on hooks)
