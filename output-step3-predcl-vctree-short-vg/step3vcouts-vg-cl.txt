
============================ Messages from Goddess ============================
 * Job starting from: Sun Apr 17 23:16:27 CST 2022
 * Job ID           : 22598
 * Job name         : VGVCTree
 * Job partition    : v100-32g
 * Nodes            : 1
 * Cores            : 4
 * Working directory: ~/segmentationsg/scripts
===============================================================================

Namespace(config_file='../configs/sg_dev_masktransfer.yaml', dist_url='tcp://127.0.0.1:17598', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1-vg/resnet_pretrain_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-vctree-short-vg', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets-real/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets-real/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets-real/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets-real/vg/VG-SGG-with-attri.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets-real/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets-real/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'VCTreeSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'DATASETS.VISUAL_GENOME.NUMBER_OF_VALIDATION_IMAGES', '5000', 'MODEL.ROI_HEADS.MASK_NUM_CLASSES', '80', 'MODEL.ROI_HEADS.NUM_OUTPUT_CLASSES', '80', 'MODEL.ROI_SCENEGRAPH_HEAD.NUM_CLASSES', '50', 'SOLVER.REFERENCE_WORLD_SIZE', '4', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch'], resume=True)
loading cached file:  tmp/visual_genome_train_data_.pkl
loading cached file:  tmp/visual_genome_val_data_.pkl
loading cached file:  tmp/visual_genome_test_data_.pkl
[32m[04/17 23:17:10 detectron2]: [0mRank of current process: 0. World size: 1
[32m[04/17 23:17:13 detectron2]: [0mEnvironment info:
----------------------  ----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Sep 23 2021, 22:44:21) [GCC 8.4.1 20200928 (Red Hat 8.4.1-1.0.1)]
numpy                   1.19.0
detectron2              0.6 @/home/r09521612/.local/lib/python3.8/site-packages/detectron2
Compiler                GCC 7.3
CUDA compiler           CUDA 10.2
detectron2 arch flags   3.7, 5.0, 5.2, 6.0, 6.1, 7.0, 7.5
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-32GB (arch=7.0)
Driver version          460.73.01
CUDA_HOME               /opt/cuda-11.2
Pillow                  8.3.2
torchvision             0.11.1+cu102 @/home/r09521612/.local/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5
fvcore                  0.1.5.post20211023
iopath                  0.1.9
cv2                     4.5.3
----------------------  ----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[32m[04/17 23:17:13 detectron2]: [0mCommand line arguments: Namespace(config_file='../configs/sg_dev_masktransfer.yaml', dist_url='tcp://127.0.0.1:17598', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['DATALOADER.NUM_WORKERS', '2', 'MODEL.WEIGHTS', '../output-step1-vg/resnet_pretrain_weights.pth', 'OUTPUT_DIR', '../output-step3-predcl-vctree-short-vg', 'DATASETS.VISUAL_GENOME.IMAGES', '../datasets-real/vg/images', 'DATASETS.VISUAL_GENOME.MAPPING_DICTIONARY', '../datasets-real/vg/VG-SGG-dicts-with-attri.json', 'DATASETS.VISUAL_GENOME.IMAGE_DATA', '../datasets-real/vg/image_data.json', 'DATASETS.VISUAL_GENOME.VG_ATTRIBUTE_H5', '../datasets-real/vg/VG-SGG-with-attri.h5', 'DATASETS.MSCOCO.ANNOTATIONS', '../datasets-real/coco/annotations/', 'DATASETS.MSCOCO.DATAROOT', '../datasets-real/coco/', 'MODEL.MASK_ON', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_BOX', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_GT_OBJECT_LABEL', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.USE_MASK_ATTENTION', 'True', 'MODEL.ROI_SCENEGRAPH_HEAD.MASK_ATTENTION_TYPE', 'Weighted', 'MODEL.ROI_SCENEGRAPH_HEAD.SIGMOID_ATTENTION', 'True', 'TEST.EVAL_PERIOD', '50000', 'MODEL.ROI_RELATION_FEATURE_EXTRACTORS.MULTIPLY_LOGITS_WITH_MASKS', 'False', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.BOX_FEATURE_MASK', 'True', 'MODEL.ROI_BOX_FEATURE_EXTRACTORS.CLASS_LOGITS_WITH_MASK', 'False', 'SOLVER.IMS_PER_BATCH', '16', 'DATASETS.SEG_DATA_DIVISOR', '2', 'MODEL.ROI_SCENEGRAPH_HEAD.PREDICTOR', 'VCTreeSegmentationPredictorC', 'MODEL.ROI_HEADS.REFINE_SEG_MASKS', 'False', 'TEST.DETECTIONS_PER_IMAGE', '40', 'SOLVER.MAX_ITER', '1000', 'DATASETS.VISUAL_GENOME.NUMBER_OF_VALIDATION_IMAGES', '5000', 'MODEL.ROI_HEADS.MASK_NUM_CLASSES', '80', 'MODEL.ROI_HEADS.NUM_OUTPUT_CLASSES', '80', 'MODEL.ROI_SCENEGRAPH_HEAD.NUM_CLASSES', '50', 'SOLVER.REFERENCE_WORLD_SIZE', '4', 'MODEL.ROI_SCENEGRAPH_HEAD.ZERO_SHOT_TRIPLETS', '/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch'], resume=True)
[32m[04/17 23:17:14 detectron2]: [0mContents of args.config_file=../configs/sg_dev_masktransfer.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mBase-RCNN-FPN.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationRCNN[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m57.375[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m58.395[39m]
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse[38;5;15m  [39m[38;5;242m# this is a C2 model[39m
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSGSegmentationROIHeadsMaskTransfer[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m150
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphSegmentationHead[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mMotifSegmentationPredictor[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mSceneGraphMaskHeadTransfer[39m[38;5;186m'[39m
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mproposal_generator[39m,[38;5;15m [39m[38;5;15mbackbone[39m]
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15mbox_pooler[39m,[38;5;15m [39m[38;5;15mbox_head[39m,[38;5;15m [39m[38;5;15mbox_predictor[39m,[38;5;15m [39m[38;5;15mmask_pooler[39m,[38;5;15m [39m[38;5;15mmask_head[39m,[38;5;15m [39m[38;5;15mkeypoint_pooler[39m,[38;5;15m [39m[38;5;15mkeypoint_head[39m]
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186mBoxFeatureSegmentationExtractor[39m[38;5;186m'[39m
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mVISUAL[39m[38;5;15m [39m[38;5;186mGENOME[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m('VG_train',)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m('coco_val_2017','VG_test',)
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(25000, 35000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m40000
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m5000
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m../glove/[39m[38;5;186m'[39m

[32m[04/17 23:17:14 detectron2]: [0mRunning with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mMASK_TEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m[38;5;197mMASK_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2017
[38;5;15m  [39m[38;5;197mMSCOCO[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m../datasets-real/coco/annotations/
[38;5;15m    [39m[38;5;197mDATAROOT[39m[38;5;15m:[39m[38;5;15m [39m../datasets-real/coco/
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mSEG_DATA_DIVISOR[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_val_2017
[38;5;15m  [39m-[38;5;15m [39mVG_test
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mVG_train
[38;5;15m  [39m[38;5;197mTRANSFER[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_train_2014
[38;5;15m  [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mVISUAL GENOME
[38;5;15m  [39m[38;5;197mVISUAL_GENOME[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mCLIPPED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFILTER_DUPLICATE_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_EMPTY_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mFILTER_NON_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mIMAGES[39m[38;5;15m:[39m[38;5;15m [39m../datasets-real/vg/images
[38;5;15m    [39m[38;5;197mIMAGE_DATA[39m[38;5;15m:[39m[38;5;15m [39m../datasets-real/vg/image_data.json
[38;5;15m    [39m[38;5;197mMAPPING_DICTIONARY[39m[38;5;15m:[39m[38;5;15m [39m../datasets-real/vg/VG-SGG-dicts-with-attri.json
[38;5;15m    [39m[38;5;197mNUMBER_OF_VALIDATION_IMAGES[39m[38;5;15m:[39m[38;5;15m [39m5000
[38;5;15m    [39m[38;5;197mTEST_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mTRAIN_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVAL_MASKS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mVG_ATTRIBUTE_H5[39m[38;5;15m:[39m[38;5;15m [39m../datasets-real/vg/VG-SGG-with-attri.h5
[38;5;197mDEV_RUN[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mGLOVE_DIR[39m[38;5;15m:[39m[38;5;15m [39m../glove/
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1333
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m672
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m736
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m800
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mFREEZE_LAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMETA_ARCH[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mproposal_generator
[38;5;15m    [39m-[38;5;15m [39mbackbone
[38;5;15m    [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mbox_pooler
[38;5;15m    [39m-[38;5;15m [39mbox_head
[38;5;15m    [39m-[38;5;15m [39mbox_predictor
[38;5;15m    [39m-[38;5;15m [39mmask_pooler
[38;5;15m    [39m-[38;5;15m [39mmask_head
[38;5;15m    [39m-[38;5;15m [39mkeypoint_pooler
[38;5;15m    [39m-[38;5;15m [39mkeypoint_head
[38;5;15m  [39m[38;5;197mGROUP_NORM[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDIM_PER_GP[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mEPSILON[39m[38;5;15m:[39m[38;5;15m [39m1.0e-05
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationRCNN
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBOX_FEATURE_MASK[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mCLASS_LOGITS_WITH_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mBoxFeatureSegmentationExtractor
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m28
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mFastRCNNConvFCHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m7
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_vg
[38;5;15m    [39m[38;5;197mEMBEDDINGS_PATH_COCO[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/data/embeddings/glove_mean_coco
[38;5;15m    [39m[38;5;197mFG_IOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLINGUAL_MATRIX_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mMASK_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSGSegmentationROIHeadsMaskTransfer
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m150
[38;5;15m    [39m[38;5;197mNUM_OUTPUT_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mOBJECTNESS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREFINE_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSEGMENTATION_STEP_MASK_REFINE[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphMaskHeadTransfer
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_RELATION_FEATURE_EXTRACTORS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMULTIPLY_LOGITS_WITH_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRelationFeatureExtractor
[38;5;15m    [39m[38;5;197mUSE_MASK_COMBINER[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_SCENEGRAPH_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mADD_GTBOX_TO_PROPOSAL_IN_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mCONTEXT_DROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.2
[38;5;15m    [39m[38;5;197mCONTEXT_HIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mCONTEXT_OBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mCONTEXT_POOLING_DIM[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mCONTEXT_REL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mLABEL_SMOOTHING_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mMASK_ATTENTION_TYPE[39m[38;5;15m:[39m[38;5;15m [39mWeighted
[38;5;15m    [39m[38;5;197mMODE[39m[38;5;15m:[39m[38;5;15m [39mpredcls
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSceneGraphSegmentationHead
[38;5;15m    [39m[38;5;197mNMS_FILTER_DUPLICATES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNUM_SAMPLE_PER_GT_REL[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPREDICTOR[39m[38;5;15m:[39m[38;5;15m [39mVCTreeSegmentationPredictorC
[38;5;15m    [39m[38;5;197mPREDICT_USE_BIAS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mPREDICT_USE_VISION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mREL_PROP[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.01858
[38;5;15m    [39m-[38;5;15m [39m0.00057
[38;5;15m    [39m-[38;5;15m [39m0.00051
[38;5;15m    [39m-[38;5;15m [39m0.00109
[38;5;15m    [39m-[38;5;15m [39m0.0015
[38;5;15m    [39m-[38;5;15m [39m0.00489
[38;5;15m    [39m-[38;5;15m [39m0.00432
[38;5;15m    [39m-[38;5;15m [39m0.02913
[38;5;15m    [39m-[38;5;15m [39m0.00245
[38;5;15m    [39m-[38;5;15m [39m0.00121
[38;5;15m    [39m-[38;5;15m [39m0.00404
[38;5;15m    [39m-[38;5;15m [39m0.0011
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00172
[38;5;15m    [39m-[38;5;15m [39m5.0e-05
[38;5;15m    [39m-[38;5;15m [39m0.00242
[38;5;15m    [39m-[38;5;15m [39m0.0005
[38;5;15m    [39m-[38;5;15m [39m0.00048
[38;5;15m    [39m-[38;5;15m [39m0.00208
[38;5;15m    [39m-[38;5;15m [39m0.15608
[38;5;15m    [39m-[38;5;15m [39m0.0265
[38;5;15m    [39m-[38;5;15m [39m0.06091
[38;5;15m    [39m-[38;5;15m [39m0.009
[38;5;15m    [39m-[38;5;15m [39m0.00183
[38;5;15m    [39m-[38;5;15m [39m0.00225
[38;5;15m    [39m-[38;5;15m [39m0.0009
[38;5;15m    [39m-[38;5;15m [39m0.00028
[38;5;15m    [39m-[38;5;15m [39m0.00077
[38;5;15m    [39m-[38;5;15m [39m0.04844
[38;5;15m    [39m-[38;5;15m [39m0.08645
[38;5;15m    [39m-[38;5;15m [39m0.31621
[38;5;15m    [39m-[38;5;15m [39m0.00088
[38;5;15m    [39m-[38;5;15m [39m0.00301
[38;5;15m    [39m-[38;5;15m [39m0.00042
[38;5;15m    [39m-[38;5;15m [39m0.00186
[38;5;15m    [39m-[38;5;15m [39m0.001
[38;5;15m    [39m-[38;5;15m [39m0.00027
[38;5;15m    [39m-[38;5;15m [39m0.01012
[38;5;15m    [39m-[38;5;15m [39m0.0001
[38;5;15m    [39m-[38;5;15m [39m0.01286
[38;5;15m    [39m-[38;5;15m [39m0.00647
[38;5;15m    [39m-[38;5;15m [39m0.00084
[38;5;15m    [39m-[38;5;15m [39m0.01077
[38;5;15m    [39m-[38;5;15m [39m0.00132
[38;5;15m    [39m-[38;5;15m [39m0.00069
[38;5;15m    [39m-[38;5;15m [39m0.00376
[38;5;15m    [39m-[38;5;15m [39m0.00214
[38;5;15m    [39m-[38;5;15m [39m0.11424
[38;5;15m    [39m-[38;5;15m [39m0.01205
[38;5;15m    [39m-[38;5;15m [39m0.02958
[38;5;15m    [39m[38;5;197mREQUIRE_BOX_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mRETURN_SEG_ANNOS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mRETURN_SEG_MASKS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mSEG_BBOX_LOSS_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIGMOID_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mTRANSFORMER[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mDROPOUT_RATE[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m      [39m[38;5;197mINNER_DIM[39m[38;5;15m:[39m[38;5;15m [39m2048
[38;5;15m      [39m[38;5;197mKEY_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m      [39m[38;5;197mNUM_HEAD[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m      [39m[38;5;197mOBJ_LAYER[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m      [39m[38;5;197mREL_LAYER[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m      [39m[38;5;197mVAL_DIM[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mUSE_GT_BOX[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_GT_OBJECT_LABEL[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_MASK_ATTENTION[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mUSE_ONLY_FG_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mZERO_SHOT_TRIPLETS[39m[38;5;15m:[39m[38;5;15m [39m/home/r09521612/segmentationsg/segmentationsg/evaluation/datasets/vg/zeroshot_triplet.pytorch
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSCENEGRAPH_ON[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mUSE_MASK_ON_NODE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m../output-step1-vg/resnet_pretrain_weights.pth
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m../output-step3-predcl-vctree-short-vg
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m500
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m25000
[38;5;15m  [39m-[38;5;15m [39m35000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m40
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m  [39m[38;5;197mRELATION[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mIOU_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mLATER_NMS_PREDICTION_THRES[39m[38;5;15m:[39m[38;5;15m [39m0.3
[38;5;15m    [39m[38;5;197mMULTIPLE_PREDS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mREQUIRE_OVERLAP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[32m[04/17 23:17:14 detectron2]: [0mFull config saved to ../output-step3-predcl-vctree-short-vg/config.yaml
[32m[04/17 23:17:14 d2.utils.env]: [0mUsing a generated random seed 14707548
[32m[04/17 23:17:14 d2.engine.defaults]: [0mAuto-scaling the config to batch_size=4, learning_rate=0.0025, max_iter=4000, warmup=4000.
loading word vectors from ../glove/glove.6B.200d.pt
loading word vectors from ../glove/glove.6B.200d.pt
loading word vectors from ../glove/glove.6B.200d.pt
animal
bag
basket
beach
board
boot
box
building
cabinet
cap
coat
counter
curtain
desk
door
drawer
ear
engine
eye
fence
finger
flag
flower
food
fruit
glass
glove
hair
hand
handle
hat
helmet
hill
house
lamp
leaf
letter
light
logo
mountain
mouth
neck
nose
number
paper
paw
pillow
plate
pole
post
pot
racket
railing
rock
roof
room
seat
shelf
shirt
shoe
sidewalk
sign
skier
sneaker
snow
sock
stand
street
tail
tile
tire
towel
tower
track
tree
trunk
vegetable
vehicle
wave
wheel
window
windshield
wing
wire
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_head.fc1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_head.fc1.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_head.fc2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_head.fc2.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.cls_score.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.cls_score.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.bbox_pred.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.bbox_pred.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.transfer_cls_score.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.transfer_cls_score.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.transfer_bbox_pred.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: box_predictor.transfer_bbox_pred.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn1.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn2.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn3.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn4.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.mask_fcn4.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.deconv.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.deconv.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.predictor.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: mask_head.predictor.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral2.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output2.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral3.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output3.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral4.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral4.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output4.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output4.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral5.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_lateral5.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output5.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.fpn_output5.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.stem.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.0.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.1.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.1.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.1.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.2.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.2.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res2.2.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.0.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.1.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.1.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.1.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.2.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.2.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.2.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.3.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.3.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res3.3.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.0.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.1.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.1.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.1.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.2.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.2.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.2.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.3.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.3.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.3.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.4.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.4.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.4.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.5.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.5.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.5.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.6.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.6.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.6.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.7.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.7.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.7.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.8.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.8.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.8.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.9.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.9.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.9.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.10.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.10.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.10.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.11.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.11.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.11.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.12.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.12.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.12.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.13.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.13.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.13.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.14.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.14.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.14.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.15.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.15.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.15.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.16.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.16.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.16.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.17.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.17.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.17.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.18.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.18.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.18.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.19.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.19.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.19.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.20.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.20.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.20.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.21.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.21.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.21.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.22.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.22.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res4.22.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.shortcut.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.0.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.1.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.1.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.1.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.2.conv1.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.2.conv2.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: backbone.bottom_up.res5.2.conv3.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.conv.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.conv.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.objectness_logits.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.objectness_logits.bias
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.anchor_deltas.weight
[5m[31mWARNING[0m [32m[04/17 23:17:32 detectron2]: [0mFreezed Layer: proposal_generator.rpn_head.anchor_deltas.bias
[32m[04/17 23:17:33 d2.engine.defaults]: [0mModel:
SceneGraphSegmentationRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2): Conv2d(
            1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2): Conv2d(
            2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): SGSegmentationROIHeadsMaskTransfer(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayersSGMaskTransfer(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
      (transfer_cls_score): Linear(in_features=1024, out_features=151, bias=True)
      (transfer_bbox_pred): Linear(in_features=1024, out_features=600, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): SceneGraphMaskHeadTransfer(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
    )
    (scenegraph_head): SceneGraphSegmentationHead(
      (box_feature_extractor): BoxFeatureSegmentationExtractor(
        (mask_combiner): Conv2d(406, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (mask_combiner_segmentation): Conv2d(336, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (pooler): ROIPooler(
          (level_poolers): ModuleList(
            (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
            (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
            (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
            (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
          )
        )
        (fc6): Linear(in_features=200704, out_features=1024, bias=True)
        (fc7): Linear(in_features=1024, out_features=1024, bias=True)
      )
      (union_feature_extractor): RelationFeatureExtractor(
        (feature_extractor): BoxFeatureExtractor(
          (mask_combiner): Conv2d(406, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (pooler): ROIPooler(
            (level_poolers): ModuleList(
              (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
              (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
              (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
              (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
            )
          )
          (fc6): Linear(in_features=200704, out_features=1024, bias=True)
          (fc7): Linear(in_features=1024, out_features=1024, bias=True)
        )
        (variance_net): Linear(in_features=302, out_features=6, bias=True)
      )
      (predictor): VCTreeSegmentationPredictorC(
        (post_emb): Linear(in_features=512, out_features=1024, bias=True)
        (post_cat): Linear(in_features=1024, out_features=4096, bias=True)
        (ctx_compress): Linear(in_features=4096, out_features=51, bias=True)
        (up_dim): Linear(in_features=1024, out_features=4096, bias=True)
        (freq_bias): FrequencyBias(
          (obj_baseline): Embedding(22801, 51)
        )
        (context_layer): VCTreeLSTMSegmentationContextC(
          (obj_embed1): Embedding(151, 200)
          (obj_embed2): Embedding(151, 200)
          (pos_embed): Sequential(
            (0): Linear(in_features=9, out_features=32, bias=True)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): Linear(in_features=32, out_features=128, bias=True)
            (3): ReLU(inplace=True)
          )
          (overlap_embed): Sequential(
            (0): Linear(in_features=6, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (box_embed): Sequential(
            (0): Linear(in_features=9, out_features=128, bias=True)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (bi_freq_prior): Linear(in_features=22801, out_features=1, bias=False)
          (obj_reduce): Linear(in_features=1024, out_features=128, bias=True)
          (emb_reduce): Linear(in_features=200, out_features=128, bias=True)
          (score_pre): Linear(in_features=512, out_features=512, bias=True)
          (score_sub): Linear(in_features=512, out_features=512, bias=True)
          (score_obj): Linear(in_features=512, out_features=512, bias=True)
          (vision_prior): Linear(in_features=1537, out_features=1, bias=True)
          (obj_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1352, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1352, out_features=256, bias=True)
                    (iofux): Linear(in_features=1352, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (edge_ctx_rnn): MultiLayer_BTreeLSTM(
            (multi_layer_lstm): ModuleList(
              (0): BidirectionalTreeLSTM(
                (treeLSTM_foreward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Foreward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (ioffux): Linear(in_features=1736, out_features=1536, bias=True)
                    (ioffuh_left): Linear(in_features=256, out_features=1536, bias=True)
                    (ioffuh_right): Linear(in_features=256, out_features=1536, bias=True)
                  )
                )
                (treeLSTM_backward): OneDirectionalTreeLSTM(
                  (treeLSTM): BiTreeLSTM_Backward(
                    (px): Linear(in_features=1736, out_features=256, bias=True)
                    (iofux): Linear(in_features=1736, out_features=1280, bias=True)
                    (iofuh): Linear(in_features=256, out_features=1280, bias=True)
                  )
                )
              )
            )
          )
          (sg_segmentation_features): Linear(in_features=1864, out_features=256, bias=True)
          (segmentation_head): SGSceneGraphMaskHead(
            (mask_fcn1): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn2): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn3): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (mask_fcn4): Conv2d(
              256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
              (activation): ReLU()
            )
            (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
            (deconv_relu): ReLU()
            (predictor): Conv2d(256, 80, kernel_size=(1, 1), stride=(1, 1))
          )
          (obj_embed_segmentation): Embedding(81, 200)
          (segmentation_reducer): Conv2d(
            512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)
            (activation): ReLU()
          )
        )
      )
      (post_processor): PostProcessor()
      (pooler): ROIPooler(
        (level_poolers): ModuleList(
          (0): ROIAlign(output_size=(28, 28), spatial_scale=0.25, sampling_ratio=0, aligned=True)
          (1): ROIAlign(output_size=(28, 28), spatial_scale=0.125, sampling_ratio=0, aligned=True)
          (2): ROIAlign(output_size=(28, 28), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
          (3): ROIAlign(output_size=(28, 28), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
        )
      )
      (segmentation_criterion_loss): CrossEntropyLoss()
    )
    (embeddings): Embedding(150, 300)
    (embeddings_coco): Embedding(80, 300)
  )
)
[32m[04/17 23:17:33 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[04/17 23:17:33 d2.data.build]: [0mRemoved 0 images with no usable annotations. 61070 images left.
[32m[04/17 23:17:36 d2.data.build]: [0mDistribution of instances among all 150 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|  airplane  | 947          |   animal   | 1425         |    arm     | 6074         |
|    bag     | 4778         |   banana   | 2380         |   basket   | 1612         |
|   beach    | 2141         |    bear    | 1903         |    bed     | 2077         |
|   bench    | 3490         |    bike    | 3176         |    bird    | 2219         |
|   board    | 2548         |    boat    | 2970         |    book    | 2872         |
|    boot    | 1843         |   bottle   | 3774         |    bowl    | 2903         |
|    box     | 3173         |    boy     | 4542         |   branch   | 3882         |
|  building  | 21059        |    bus     | 3232         |  cabinet   | 2442         |
|    cap     | 2515         |    car     | 11576        |    cat     | 2228         |
|   chair    | 7875         |   child    | 1930         |   clock    | 2910         |
|    coat    | 2676         |  counter   | 2479         |    cow     | 2508         |
|    cup     | 2552         |  curtain   | 2021         |    desk    | 1654         |
|    dog     | 2790         |    door    | 8495         |   drawer   | 1547         |
|    ear     | 7759         |  elephant  | 2933         |   engine   | 1691         |
|    eye     | 3401         |    face    | 5558         |   fence    | 7742         |
|   finger   | 1795         |    flag    | 2060         |   flower   | 4870         |
|    food    | 3414         |    fork    | 1600         |   fruit    | 1188         |
|  giraffe   | 2891         |    girl    | 3943         |   glass    | 7105         |
|   glove    | 2536         |    guy     | 1150         |    hair    | 11599        |
|    hand    | 11042        |   handle   | 4574         |    hat     | 5535         |
|    head    | 13335        |   helmet   | 3908         |    hill    | 2464         |
|   horse    | 3168         |   house    | 3104         |   jacket   | 6918         |
|    jean    | 3700         |    kid     | 1000         |    kite    | 1865         |
|    lady    | 1404         |    lamp    | 2693         |   laptop   | 1939         |
|    leaf    | 8355         |    leg     | 13513        |   letter   | 3623         |
|   light    | 8820         |    logo    | 2970         |    man     | 35555        |
|    men     | 1164         | motorcycle | 2675         |  mountain  | 2837         |
|   mouth    | 2313         |    neck    | 2917         |    nose    | 3860         |
|   number   | 1948         |   orange   | 1377         |    pant    | 8514         |
|   paper    | 2780         |    paw     | 1569         |   people   | 8657         |
|   person   | 22621        |   phone    | 1636         |   pillow   | 3545         |
|   pizza    | 2001         |   plane    | 2732         |   plant    | 3857         |
|   plate    | 6811         |   player   | 2385         |    pole    | 13537        |
|    post    | 3846         |    pot     | 1633         |   racket   | 1615         |
|  railing   | 1938         |    rock    | 4721         |    roof    | 4377         |
|    room    | 1528         |   screen   | 1453         |    seat    | 2760         |
|   sheep    | 2070         |   shelf    | 3336         |   shirt    | 22841        |
|    shoe    | 7943         |   short    | 5151         |  sidewalk  | 6442         |
|    sign    | 14806        |    sink    | 1683         | skateboard | 2405         |
|    ski     | 2349         |   skier    | 1360         |  sneaker   | 1398         |
|    snow    | 5825         |    sock    | 1999         |   stand    | 1623         |
|   street   | 7315         | surfboard  | 2297         |   table    | 11740        |
|    tail    | 5665         |    tie     | 1670         |    tile    | 3388         |
|    tire    | 4064         |   toilet   | 1221         |   towel    | 1768         |
|   tower    | 1723         |   track    | 4349         |   train    | 3791         |
|    tree    | 31548        |   truck    | 2863         |   trunk    | 3377         |
|  umbrella  | 4037         |    vase    | 1660         | vegetable  | 1078         |
|  vehicle   | 2160         |    wave    | 3294         |   wheel    | 5864         |
|   window   | 28402        | windshield | 2105         |    wing    | 2648         |
|    wire    | 2540         |   woman    | 16722        |   zebra    | 2494         |
|            |              |            |              |            |              |
|   total    | 720559       |            |              |            |              |[0m
[32m[04/17 23:17:36 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[04/17 23:17:36 d2.data.common]: [0mSerializing 61070 elements to byte tensors and concatenating them all ...
[32m[04/17 23:17:44 d2.data.common]: [0mSerialized dataset takes 155.03 MiB
[5m[31mWARNING[0m [32m[04/17 23:17:44 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[04/17 23:18:03 d2.data.datasets.coco]: [0mLoading ../datasets-real/coco/annotations/instances_train2017.json takes 4.85 seconds.
[32m[04/17 23:18:03 d2.data.datasets.coco]: [0mLoaded 25000 images in COCO format from ../datasets-real/coco/annotations/instances_train2017.json
[32m[04/17 23:18:04 d2.data.build]: [0mRemoved 0 images with no usable annotations. 25000 images left.
[32m[04/17 23:18:05 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 55096        |   bicycle    | 1504         |      car      | 8873         |
|  motorcycle   | 1884         |   airplane   | 1054         |      bus      | 1215         |
|     train     | 976          |    truck     | 2040         |     boat      | 2259         |
| traffic light | 2631         | fire hydrant | 353          |   stop sign   | 376          |
| parking meter | 214          |    bench     | 2229         |     bird      | 2102         |
|      cat      | 1033         |     dog      | 1099         |     horse     | 1349         |
|     sheep     | 2006         |     cow      | 1634         |   elephant    | 1190         |
|     bear      | 296          |    zebra     | 1081         |    giraffe    | 1085         |
|   backpack    | 1854         |   umbrella   | 2432         |    handbag    | 2802         |
|      tie      | 1265         |   suitcase   | 1291         |    frisbee    | 573          |
|     skis      | 1431         |  snowboard   | 570          |  sports ball  | 1353         |
|     kite      | 1808         | baseball bat | 713          | baseball gl.. | 842          |
|  skateboard   | 1254         |  surfboard   | 1190         | tennis racket | 1078         |
|    bottle     | 5152         |  wine glass  | 1654         |      cup      | 4478         |
|     fork      | 1264         |    knife     | 1733         |     spoon     | 1373         |
|     bowl      | 3224         |    banana    | 2157         |     apple     | 1357         |
|   sandwich    | 1053         |    orange    | 1444         |   broccoli    | 1548         |
|    carrot     | 1539         |   hot dog    | 705          |     pizza     | 1174         |
|     donut     | 1508         |     cake     | 1299         |     chair     | 8158         |
|     couch     | 1231         | potted plant | 1855         |      bed      | 937          |
| dining table  | 3450         |    toilet    | 885          |      tv       | 1174         |
|    laptop     | 1060         |    mouse     | 441          |    remote     | 1204         |
|   keyboard    | 571          |  cell phone  | 1309         |   microwave   | 367          |
|     oven      | 698          |   toaster    | 46           |     sink      | 1258         |
| refrigerator  | 622          |     book     | 4976         |     clock     | 1336         |
|     vase      | 1423         |   scissors   | 323          |  teddy bear   | 1014         |
|  hair drier   | 40           |  toothbrush  | 400          |               |              |
|     total     | 181475       |              |              |               |              |[0m
[32m[04/17 23:18:05 d2.data.common]: [0mSerializing 25000 elements to byte tensors and concatenating them all ...
[32m[04/17 23:18:06 d2.data.common]: [0mSerialized dataset takes 96.38 MiB
[32m[04/17 23:18:06 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[04/17 23:18:06 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from ../output-step1-vg/resnet_pretrain_weights.pth ...
[5m[31mWARNING[0m [32m[04/17 23:18:07 fvcore.common.checkpoint]: [0mSome model parameters or buffers are not found in the checkpoint:
[34mroi_heads.embeddings.weight[0m
[34mroi_heads.embeddings_coco.weight[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.box_feature_extractor.mask_combiner_segmentation.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.bi_freq_prior.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.box_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.edge_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.emb_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofuh.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.iofux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_backward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_left.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffuh_right.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.ioffux.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_ctx_rnn.multi_layer_lstm.0.treeLSTM_foreward.treeLSTM.px.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed1.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed2.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_embed_segmentation.weight[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.obj_reduce.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.overlap_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.0.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.1.{bias, running_mean, running_var, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.pos_embed.2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_obj.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_pre.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.score_sub.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.deconv.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_head.predictor.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.segmentation_reducer.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.sg_segmentation_features.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.context_layer.vision_prior.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.ctx_compress.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.freq_bias.obj_baseline.weight[0m
[34mroi_heads.scenegraph_head.predictor.post_cat.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.post_emb.{bias, weight}[0m
[34mroi_heads.scenegraph_head.predictor.up_dim.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc6.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.fc7.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.feature_extractor.mask_combiner.{bias, weight}[0m
[34mroi_heads.scenegraph_head.union_feature_extractor.variance_net.{bias, weight}[0m
[5m[31mWARNING[0m [32m[04/17 23:18:07 fvcore.common.checkpoint]: [0mThe checkpoint state_dict contains keys that are not used by the model:
  [35mpixel_mean[0m
  [35mpixel_std[0m
[32m[04/17 23:18:07 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[04/17 23:18:43 d2.utils.events]: [0m eta: 1:50:56  iter: 19  total_loss: 1.324  loss_rel: 0.3359  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2709  time: 1.6941  data_time: 0.2515  lr: 0.00026069  max_mem: 10207M
[32m[04/17 23:19:17 d2.utils.events]: [0m eta: 1:51:21  iter: 39  total_loss: 1.297  loss_rel: 0.3471  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2751  time: 1.7096  data_time: 0.1599  lr: 0.00027194  max_mem: 10207M
[32m[04/17 23:19:52 d2.utils.events]: [0m eta: 1:52:02  iter: 59  total_loss: 1.308  loss_rel: 0.3209  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2806  time: 1.7142  data_time: 0.1645  lr: 0.00028319  max_mem: 10207M
[32m[04/17 23:20:26 d2.utils.events]: [0m eta: 1:51:00  iter: 79  total_loss: 1.243  loss_rel: 0.2667  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2758  time: 1.7112  data_time: 0.1651  lr: 0.00029444  max_mem: 10207M
[32m[04/17 23:21:00 d2.utils.events]: [0m eta: 1:51:35  iter: 99  total_loss: 1.251  loss_rel: 0.286  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2709  time: 1.7128  data_time: 0.1404  lr: 0.00030569  max_mem: 10207M
[32m[04/17 23:21:35 d2.utils.events]: [0m eta: 1:51:23  iter: 119  total_loss: 1.252  loss_rel: 0.2616  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2715  time: 1.7124  data_time: 0.1529  lr: 0.00031694  max_mem: 10207M
[32m[04/17 23:22:08 d2.utils.events]: [0m eta: 1:49:26  iter: 139  total_loss: 1.226  loss_rel: 0.2835  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2751  time: 1.7073  data_time: 0.1552  lr: 0.00032819  max_mem: 10207M
[32m[04/17 23:22:42 d2.utils.events]: [0m eta: 1:48:53  iter: 159  total_loss: 1.213  loss_rel: 0.2525  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2782  time: 1.7082  data_time: 0.1485  lr: 0.00033944  max_mem: 10207M
[32m[04/17 23:23:17 d2.utils.events]: [0m eta: 1:49:16  iter: 179  total_loss: 1.244  loss_rel: 0.2726  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2844  time: 1.7107  data_time: 0.1494  lr: 0.00035069  max_mem: 10207M
[32m[04/17 23:23:51 d2.utils.events]: [0m eta: 1:48:14  iter: 199  total_loss: 1.261  loss_rel: 0.2674  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2987  time: 1.7089  data_time: 0.1549  lr: 0.00036194  max_mem: 10207M
[32m[04/17 23:24:25 d2.utils.events]: [0m eta: 1:47:55  iter: 219  total_loss: 1.22  loss_rel: 0.2694  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2694  time: 1.7095  data_time: 0.1580  lr: 0.00037319  max_mem: 10207M
[32m[04/17 23:24:59 d2.utils.events]: [0m eta: 1:47:31  iter: 239  total_loss: 1.22  loss_rel: 0.2515  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2649  time: 1.7093  data_time: 0.1456  lr: 0.00038444  max_mem: 10207M
[32m[04/17 23:25:34 d2.utils.events]: [0m eta: 1:46:57  iter: 259  total_loss: 1.25  loss_rel: 0.2708  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2922  time: 1.7100  data_time: 0.1604  lr: 0.00039569  max_mem: 10207M
[32m[04/17 23:26:10 d2.utils.events]: [0m eta: 1:45:36  iter: 279  total_loss: 1.212  loss_rel: 0.269  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2541  time: 1.7163  data_time: 0.1435  lr: 0.00040694  max_mem: 10207M
[32m[04/17 23:26:44 d2.utils.events]: [0m eta: 1:44:54  iter: 299  total_loss: 1.263  loss_rel: 0.287  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2853  time: 1.7156  data_time: 0.1331  lr: 0.00041819  max_mem: 10207M
[32m[04/17 23:27:18 d2.utils.events]: [0m eta: 1:44:12  iter: 319  total_loss: 1.237  loss_rel: 0.2891  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2704  time: 1.7144  data_time: 0.1460  lr: 0.00042944  max_mem: 10207M
[32m[04/17 23:27:52 d2.utils.events]: [0m eta: 1:43:44  iter: 339  total_loss: 1.241  loss_rel: 0.2729  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2742  time: 1.7146  data_time: 0.1554  lr: 0.00044069  max_mem: 10207M
[32m[04/17 23:28:27 d2.utils.events]: [0m eta: 1:43:10  iter: 359  total_loss: 1.222  loss_rel: 0.2463  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2619  time: 1.7158  data_time: 0.1613  lr: 0.00045194  max_mem: 10207M
[32m[04/17 23:29:01 d2.utils.events]: [0m eta: 1:42:36  iter: 379  total_loss: 1.246  loss_rel: 0.2812  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2766  time: 1.7146  data_time: 0.1348  lr: 0.00046319  max_mem: 10207M
[32m[04/17 23:29:36 d2.utils.events]: [0m eta: 1:42:04  iter: 399  total_loss: 1.164  loss_rel: 0.2337  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2563  time: 1.7161  data_time: 0.1607  lr: 0.00047444  max_mem: 10249M
[32m[04/17 23:30:10 d2.utils.events]: [0m eta: 1:41:30  iter: 419  total_loss: 1.251  loss_rel: 0.2979  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2764  time: 1.7156  data_time: 0.1360  lr: 0.00048569  max_mem: 10249M
[32m[04/17 23:30:45 d2.utils.events]: [0m eta: 1:41:23  iter: 439  total_loss: 1.244  loss_rel: 0.2654  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2835  time: 1.7173  data_time: 0.1749  lr: 0.00049694  max_mem: 10249M
[32m[04/17 23:31:20 d2.utils.events]: [0m eta: 1:41:03  iter: 459  total_loss: 1.25  loss_rel: 0.2553  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2839  time: 1.7178  data_time: 0.1611  lr: 0.00050819  max_mem: 10249M
[32m[04/17 23:31:53 d2.utils.events]: [0m eta: 1:40:15  iter: 479  total_loss: 1.241  loss_rel: 0.2708  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2471  time: 1.7157  data_time: 0.1487  lr: 0.00051944  max_mem: 10249M
[32m[04/17 23:32:28 d2.utils.events]: [0m eta: 1:39:52  iter: 499  total_loss: 1.236  loss_rel: 0.2794  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.274  time: 1.7178  data_time: 0.1649  lr: 0.00053069  max_mem: 10254M
[32m[04/17 23:33:02 d2.utils.events]: [0m eta: 1:39:17  iter: 519  total_loss: 1.22  loss_rel: 0.2484  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2861  time: 1.7167  data_time: 0.1438  lr: 0.00054194  max_mem: 10254M
[32m[04/17 23:33:35 d2.utils.events]: [0m eta: 1:38:19  iter: 539  total_loss: 1.192  loss_rel: 0.2468  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2573  time: 1.7143  data_time: 0.1419  lr: 0.00055319  max_mem: 10254M
[32m[04/17 23:34:10 d2.utils.events]: [0m eta: 1:38:02  iter: 559  total_loss: 1.236  loss_rel: 0.271  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2622  time: 1.7148  data_time: 0.1511  lr: 0.00056444  max_mem: 10282M
[32m[04/17 23:34:45 d2.utils.events]: [0m eta: 1:37:35  iter: 579  total_loss: 1.208  loss_rel: 0.2324  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2833  time: 1.7162  data_time: 0.1616  lr: 0.00057569  max_mem: 10282M
[32m[04/17 23:35:20 d2.utils.events]: [0m eta: 1:37:07  iter: 599  total_loss: 1.205  loss_rel: 0.2196  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2795  time: 1.7177  data_time: 0.1848  lr: 0.00058694  max_mem: 10282M
[32m[04/17 23:35:55 d2.utils.events]: [0m eta: 1:36:36  iter: 619  total_loss: 1.25  loss_rel: 0.2789  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2584  time: 1.7189  data_time: 0.1612  lr: 0.00059819  max_mem: 10296M
[32m[04/17 23:36:29 d2.utils.events]: [0m eta: 1:35:58  iter: 639  total_loss: 1.199  loss_rel: 0.2409  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2575  time: 1.7183  data_time: 0.1583  lr: 0.00060944  max_mem: 10296M
[32m[04/17 23:37:05 d2.utils.events]: [0m eta: 1:35:29  iter: 659  total_loss: 1.183  loss_rel: 0.2242  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2715  time: 1.7196  data_time: 0.1522  lr: 0.00062069  max_mem: 10296M
[32m[04/17 23:37:40 d2.utils.events]: [0m eta: 1:34:57  iter: 679  total_loss: 1.205  loss_rel: 0.2363  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.275  time: 1.7211  data_time: 0.1763  lr: 0.00063194  max_mem: 10296M
[32m[04/17 23:38:18 d2.utils.events]: [0m eta: 1:34:23  iter: 699  total_loss: 1.191  loss_rel: 0.2562  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.269  time: 1.7266  data_time: 0.1626  lr: 0.00064319  max_mem: 10296M
[32m[04/17 23:38:52 d2.utils.events]: [0m eta: 1:33:49  iter: 719  total_loss: 1.204  loss_rel: 0.2377  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2628  time: 1.7255  data_time: 0.1503  lr: 0.00065444  max_mem: 10296M
[32m[04/17 23:39:27 d2.utils.events]: [0m eta: 1:33:14  iter: 739  total_loss: 1.266  loss_rel: 0.2652  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.284  time: 1.7263  data_time: 0.1558  lr: 0.00066569  max_mem: 10296M
[32m[04/17 23:40:03 d2.utils.events]: [0m eta: 1:32:45  iter: 759  total_loss: 1.245  loss_rel: 0.2711  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2671  time: 1.7284  data_time: 0.1720  lr: 0.00067694  max_mem: 10296M
[32m[04/17 23:40:39 d2.utils.events]: [0m eta: 1:32:10  iter: 779  total_loss: 1.209  loss_rel: 0.2396  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2706  time: 1.7297  data_time: 0.1754  lr: 0.00068819  max_mem: 10296M
[32m[04/17 23:41:14 d2.utils.events]: [0m eta: 1:31:38  iter: 799  total_loss: 1.232  loss_rel: 0.2663  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2709  time: 1.7302  data_time: 0.1565  lr: 0.00069944  max_mem: 10296M
[32m[04/17 23:41:49 d2.utils.events]: [0m eta: 1:31:10  iter: 819  total_loss: 1.222  loss_rel: 0.2475  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.26  time: 1.7306  data_time: 0.1588  lr: 0.00071069  max_mem: 10296M
[32m[04/17 23:42:23 d2.utils.events]: [0m eta: 1:30:36  iter: 839  total_loss: 1.235  loss_rel: 0.2597  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2673  time: 1.7303  data_time: 0.1580  lr: 0.00072194  max_mem: 10296M
[32m[04/17 23:42:59 d2.utils.events]: [0m eta: 1:30:04  iter: 859  total_loss: 1.196  loss_rel: 0.2423  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2763  time: 1.7311  data_time: 0.1639  lr: 0.00073319  max_mem: 10296M
[32m[04/17 23:43:33 d2.utils.events]: [0m eta: 1:29:28  iter: 879  total_loss: 1.25  loss_rel: 0.2596  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2789  time: 1.7312  data_time: 0.1575  lr: 0.00074444  max_mem: 10296M
[32m[04/17 23:44:08 d2.utils.events]: [0m eta: 1:28:57  iter: 899  total_loss: 1.217  loss_rel: 0.2549  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2758  time: 1.7317  data_time: 0.1654  lr: 0.00075569  max_mem: 10296M
[32m[04/17 23:44:43 d2.utils.events]: [0m eta: 1:28:25  iter: 919  total_loss: 1.206  loss_rel: 0.2269  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2755  time: 1.7320  data_time: 0.1650  lr: 0.00076694  max_mem: 10296M
[32m[04/17 23:45:19 d2.utils.events]: [0m eta: 1:27:53  iter: 939  total_loss: 1.231  loss_rel: 0.2399  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2796  time: 1.7329  data_time: 0.1714  lr: 0.00077819  max_mem: 10296M
[32m[04/17 23:45:53 d2.utils.events]: [0m eta: 1:27:18  iter: 959  total_loss: 1.198  loss_rel: 0.2036  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2804  time: 1.7329  data_time: 0.1727  lr: 0.00078944  max_mem: 10296M
[32m[04/17 23:46:28 d2.utils.events]: [0m eta: 1:26:44  iter: 979  total_loss: 1.218  loss_rel: 0.2507  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2783  time: 1.7332  data_time: 0.1797  lr: 0.00080069  max_mem: 10296M
[32m[04/17 23:47:05 d2.utils.events]: [0m eta: 1:26:10  iter: 999  total_loss: 1.21  loss_rel: 0.258  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.3012  time: 1.7350  data_time: 0.1773  lr: 0.00081194  max_mem: 10296M
[32m[04/17 23:47:39 d2.utils.events]: [0m eta: 1:25:36  iter: 1019  total_loss: 1.196  loss_rel: 0.2317  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2779  time: 1.7347  data_time: 0.1478  lr: 0.00082319  max_mem: 10296M
[32m[04/17 23:48:13 d2.utils.events]: [0m eta: 1:25:01  iter: 1039  total_loss: 1.232  loss_rel: 0.242  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2569  time: 1.7338  data_time: 0.1598  lr: 0.00083444  max_mem: 10296M
[32m[04/17 23:48:48 d2.utils.events]: [0m eta: 1:24:35  iter: 1059  total_loss: 1.225  loss_rel: 0.2761  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.288  time: 1.7341  data_time: 0.1620  lr: 0.00084569  max_mem: 10296M
[32m[04/17 23:49:24 d2.utils.events]: [0m eta: 1:24:04  iter: 1079  total_loss: 1.218  loss_rel: 0.26  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2832  time: 1.7349  data_time: 0.1566  lr: 0.00085694  max_mem: 10296M
[32m[04/17 23:49:58 d2.utils.events]: [0m eta: 1:23:29  iter: 1099  total_loss: 1.191  loss_rel: 0.2568  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2759  time: 1.7346  data_time: 0.1580  lr: 0.00086819  max_mem: 10296M
[32m[04/17 23:50:36 d2.utils.events]: [0m eta: 1:22:55  iter: 1119  total_loss: 1.227  loss_rel: 0.2598  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2619  time: 1.7376  data_time: 0.1674  lr: 0.00087944  max_mem: 10296M
[32m[04/17 23:51:11 d2.utils.events]: [0m eta: 1:22:25  iter: 1139  total_loss: 1.239  loss_rel: 0.2508  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2566  time: 1.7373  data_time: 0.1857  lr: 0.00089069  max_mem: 10296M
[32m[04/17 23:51:46 d2.utils.events]: [0m eta: 1:21:59  iter: 1159  total_loss: 1.201  loss_rel: 0.2393  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2751  time: 1.7378  data_time: 0.1721  lr: 0.00090194  max_mem: 10296M
[32m[04/17 23:52:21 d2.utils.events]: [0m eta: 1:21:26  iter: 1179  total_loss: 1.165  loss_rel: 0.234  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2497  time: 1.7379  data_time: 0.1711  lr: 0.00091319  max_mem: 10296M
[32m[04/17 23:52:56 d2.utils.events]: [0m eta: 1:20:53  iter: 1199  total_loss: 1.241  loss_rel: 0.2579  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2644  time: 1.7379  data_time: 0.1531  lr: 0.00092444  max_mem: 10296M
[32m[04/17 23:53:32 d2.utils.events]: [0m eta: 1:20:23  iter: 1219  total_loss: 1.245  loss_rel: 0.2808  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2812  time: 1.7390  data_time: 0.1718  lr: 0.00093569  max_mem: 10296M
[32m[04/17 23:54:06 d2.utils.events]: [0m eta: 1:19:44  iter: 1239  total_loss: 1.222  loss_rel: 0.2702  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2753  time: 1.7381  data_time: 0.1537  lr: 0.00094694  max_mem: 10296M
[32m[04/17 23:54:40 d2.utils.events]: [0m eta: 1:19:11  iter: 1259  total_loss: 1.23  loss_rel: 0.237  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2747  time: 1.7382  data_time: 0.1686  lr: 0.00095819  max_mem: 10296M
[32m[04/17 23:55:15 d2.utils.events]: [0m eta: 1:18:40  iter: 1279  total_loss: 1.193  loss_rel: 0.2384  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2776  time: 1.7380  data_time: 0.1601  lr: 0.00096944  max_mem: 10296M
[32m[04/17 23:55:50 d2.utils.events]: [0m eta: 1:18:10  iter: 1299  total_loss: 1.202  loss_rel: 0.2394  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2844  time: 1.7383  data_time: 0.1714  lr: 0.00098069  max_mem: 10296M
[32m[04/17 23:56:25 d2.utils.events]: [0m eta: 1:17:42  iter: 1319  total_loss: 1.183  loss_rel: 0.218  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2726  time: 1.7381  data_time: 0.1621  lr: 0.00099194  max_mem: 10296M
[32m[04/17 23:57:00 d2.utils.events]: [0m eta: 1:17:08  iter: 1339  total_loss: 1.208  loss_rel: 0.2123  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2728  time: 1.7382  data_time: 0.1741  lr: 0.0010032  max_mem: 10296M
[32m[04/17 23:57:34 d2.utils.events]: [0m eta: 1:16:34  iter: 1359  total_loss: 1.186  loss_rel: 0.2241  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2505  time: 1.7380  data_time: 0.1653  lr: 0.0010144  max_mem: 10296M
[32m[04/17 23:58:10 d2.utils.events]: [0m eta: 1:16:09  iter: 1379  total_loss: 1.205  loss_rel: 0.2473  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2619  time: 1.7388  data_time: 0.1769  lr: 0.0010257  max_mem: 10296M
[32m[04/17 23:58:44 d2.utils.events]: [0m eta: 1:15:34  iter: 1399  total_loss: 1.21  loss_rel: 0.2507  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.262  time: 1.7382  data_time: 0.1579  lr: 0.0010369  max_mem: 10296M
[32m[04/17 23:59:19 d2.utils.events]: [0m eta: 1:15:02  iter: 1419  total_loss: 1.257  loss_rel: 0.2682  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2703  time: 1.7383  data_time: 0.1591  lr: 0.0010482  max_mem: 10296M
[32m[04/17 23:59:54 d2.utils.events]: [0m eta: 1:14:27  iter: 1439  total_loss: 1.223  loss_rel: 0.2712  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2803  time: 1.7385  data_time: 0.1691  lr: 0.0010594  max_mem: 10296M
[32m[04/18 00:00:30 d2.utils.events]: [0m eta: 1:13:53  iter: 1459  total_loss: 1.254  loss_rel: 0.2219  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2951  time: 1.7395  data_time: 0.1805  lr: 0.0010707  max_mem: 10296M
[32m[04/18 00:01:05 d2.utils.events]: [0m eta: 1:13:22  iter: 1479  total_loss: 1.209  loss_rel: 0.249  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2796  time: 1.7397  data_time: 0.1833  lr: 0.0010819  max_mem: 10296M
[32m[04/18 00:01:40 d2.utils.events]: [0m eta: 1:12:47  iter: 1499  total_loss: 1.26  loss_rel: 0.2839  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2933  time: 1.7398  data_time: 0.1614  lr: 0.0010932  max_mem: 10296M
[32m[04/18 00:02:16 d2.utils.events]: [0m eta: 1:12:16  iter: 1519  total_loss: 1.221  loss_rel: 0.2504  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2776  time: 1.7403  data_time: 0.1736  lr: 0.0011044  max_mem: 10296M
[32m[04/18 00:02:53 d2.utils.events]: [0m eta: 1:11:43  iter: 1539  total_loss: 1.194  loss_rel: 0.2192  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2648  time: 1.7420  data_time: 0.1802  lr: 0.0011157  max_mem: 10296M
[32m[04/18 00:03:30 d2.utils.events]: [0m eta: 1:11:21  iter: 1559  total_loss: 1.207  loss_rel: 0.2541  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2812  time: 1.7431  data_time: 0.1807  lr: 0.0011269  max_mem: 10296M
[32m[04/18 00:04:04 d2.utils.events]: [0m eta: 1:10:46  iter: 1579  total_loss: 1.173  loss_rel: 0.2213  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2668  time: 1.7430  data_time: 0.1998  lr: 0.0011382  max_mem: 10296M
[32m[04/18 00:04:39 d2.utils.events]: [0m eta: 1:10:05  iter: 1599  total_loss: 1.181  loss_rel: 0.2266  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2721  time: 1.7426  data_time: 0.1702  lr: 0.0011494  max_mem: 10296M
[32m[04/18 00:05:14 d2.utils.events]: [0m eta: 1:09:30  iter: 1619  total_loss: 1.219  loss_rel: 0.2589  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2694  time: 1.7431  data_time: 0.1760  lr: 0.0011607  max_mem: 10296M
[32m[04/18 00:05:50 d2.utils.events]: [0m eta: 1:09:02  iter: 1639  total_loss: 1.242  loss_rel: 0.2659  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.288  time: 1.7438  data_time: 0.2223  lr: 0.0011719  max_mem: 10296M
[32m[04/18 00:06:26 d2.utils.events]: [0m eta: 1:08:27  iter: 1659  total_loss: 1.206  loss_rel: 0.2456  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2773  time: 1.7439  data_time: 0.1870  lr: 0.0011832  max_mem: 10315M
[32m[04/18 00:07:02 d2.utils.events]: [0m eta: 1:07:52  iter: 1679  total_loss: 1.212  loss_rel: 0.2484  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2742  time: 1.7447  data_time: 0.2048  lr: 0.0011944  max_mem: 10315M
[32m[04/18 00:07:37 d2.utils.events]: [0m eta: 1:07:17  iter: 1699  total_loss: 1.236  loss_rel: 0.2357  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2921  time: 1.7450  data_time: 0.1638  lr: 0.0012057  max_mem: 10315M
[32m[04/18 00:08:13 d2.utils.events]: [0m eta: 1:06:43  iter: 1719  total_loss: 1.188  loss_rel: 0.2378  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2781  time: 1.7454  data_time: 0.1893  lr: 0.0012169  max_mem: 10315M
[32m[04/18 00:08:49 d2.utils.events]: [0m eta: 1:06:12  iter: 1739  total_loss: 1.233  loss_rel: 0.2563  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2705  time: 1.7459  data_time: 0.1742  lr: 0.0012282  max_mem: 10315M
[32m[04/18 00:09:24 d2.utils.events]: [0m eta: 1:05:35  iter: 1759  total_loss: 1.184  loss_rel: 0.247  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2675  time: 1.7460  data_time: 0.1751  lr: 0.0012394  max_mem: 10315M
[32m[04/18 00:09:59 d2.utils.events]: [0m eta: 1:05:01  iter: 1779  total_loss: 1.203  loss_rel: 0.2395  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2779  time: 1.7462  data_time: 0.1792  lr: 0.0012507  max_mem: 10315M
[32m[04/18 00:10:35 d2.utils.events]: [0m eta: 1:04:28  iter: 1799  total_loss: 1.246  loss_rel: 0.2628  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2908  time: 1.7468  data_time: 0.1978  lr: 0.0012619  max_mem: 10315M
[32m[04/18 00:11:11 d2.utils.events]: [0m eta: 1:03:55  iter: 1819  total_loss: 1.231  loss_rel: 0.2375  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2888  time: 1.7474  data_time: 0.1982  lr: 0.0012732  max_mem: 10315M
[32m[04/18 00:11:47 d2.utils.events]: [0m eta: 1:03:21  iter: 1839  total_loss: 1.23  loss_rel: 0.2634  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.268  time: 1.7478  data_time: 0.1705  lr: 0.0012844  max_mem: 10315M
[32m[04/18 00:12:22 d2.utils.events]: [0m eta: 1:02:43  iter: 1859  total_loss: 1.176  loss_rel: 0.2224  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.273  time: 1.7477  data_time: 0.1695  lr: 0.0012957  max_mem: 10315M
[32m[04/18 00:12:57 d2.utils.events]: [0m eta: 1:02:12  iter: 1879  total_loss: 1.221  loss_rel: 0.2647  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2852  time: 1.7481  data_time: 0.1810  lr: 0.0013069  max_mem: 10315M
[32m[04/18 00:13:32 d2.utils.events]: [0m eta: 1:01:37  iter: 1899  total_loss: 1.211  loss_rel: 0.2538  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.272  time: 1.7481  data_time: 0.1640  lr: 0.0013182  max_mem: 10315M
[32m[04/18 00:14:08 d2.utils.events]: [0m eta: 1:01:06  iter: 1919  total_loss: 1.209  loss_rel: 0.2452  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2705  time: 1.7487  data_time: 0.1802  lr: 0.0013294  max_mem: 10315M
[32m[04/18 00:14:43 d2.utils.events]: [0m eta: 1:00:28  iter: 1939  total_loss: 1.217  loss_rel: 0.2683  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2422  time: 1.7486  data_time: 0.1679  lr: 0.0013407  max_mem: 10315M
[32m[04/18 00:15:22 d2.utils.events]: [0m eta: 0:59:55  iter: 1959  total_loss: 1.213  loss_rel: 0.2454  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2767  time: 1.7506  data_time: 0.1635  lr: 0.0013519  max_mem: 10315M
[32m[04/18 00:15:58 d2.utils.events]: [0m eta: 0:59:22  iter: 1979  total_loss: 1.192  loss_rel: 0.2443  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2601  time: 1.7511  data_time: 0.2022  lr: 0.0013632  max_mem: 10315M
[32m[04/18 00:16:34 fvcore.common.checkpoint]: [0mSaving checkpoint to ../output-step3-predcl-vctree-short-vg/model_0001999.pth
[32m[04/18 00:16:58 d2.utils.events]: [0m eta: 0:58:42  iter: 1999  total_loss: 1.218  loss_rel: 0.2768  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2723  time: 1.7513  data_time: 0.1728  lr: 0.0013744  max_mem: 10315M
[32m[04/18 00:17:33 d2.utils.events]: [0m eta: 0:58:07  iter: 2019  total_loss: 1.221  loss_rel: 0.2461  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2636  time: 1.7512  data_time: 0.1811  lr: 0.0013857  max_mem: 10315M
[32m[04/18 00:18:09 d2.utils.events]: [0m eta: 0:57:35  iter: 2039  total_loss: 1.184  loss_rel: 0.2497  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2814  time: 1.7515  data_time: 0.1760  lr: 0.0013969  max_mem: 10374M
[32m[04/18 00:18:44 d2.utils.events]: [0m eta: 0:57:01  iter: 2059  total_loss: 1.204  loss_rel: 0.2449  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2664  time: 1.7515  data_time: 0.2102  lr: 0.0014082  max_mem: 10374M
[32m[04/18 00:19:18 d2.utils.events]: [0m eta: 0:56:19  iter: 2079  total_loss: 1.206  loss_rel: 0.2252  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2792  time: 1.7514  data_time: 0.1707  lr: 0.0014194  max_mem: 10374M
[32m[04/18 00:19:53 d2.utils.events]: [0m eta: 0:55:45  iter: 2099  total_loss: 1.208  loss_rel: 0.2345  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2828  time: 1.7513  data_time: 0.1676  lr: 0.0014307  max_mem: 10374M
[32m[04/18 00:20:28 d2.utils.events]: [0m eta: 0:55:11  iter: 2119  total_loss: 1.194  loss_rel: 0.2275  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.281  time: 1.7513  data_time: 0.1954  lr: 0.0014419  max_mem: 10374M
[32m[04/18 00:21:03 d2.utils.events]: [0m eta: 0:54:32  iter: 2139  total_loss: 1.242  loss_rel: 0.279  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2701  time: 1.7511  data_time: 0.1747  lr: 0.0014532  max_mem: 10374M
[32m[04/18 00:21:38 d2.utils.events]: [0m eta: 0:53:56  iter: 2159  total_loss: 1.22  loss_rel: 0.2537  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.279  time: 1.7511  data_time: 0.1992  lr: 0.0014644  max_mem: 10374M
[32m[04/18 00:22:13 d2.utils.events]: [0m eta: 0:53:21  iter: 2179  total_loss: 1.226  loss_rel: 0.257  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2765  time: 1.7512  data_time: 0.1776  lr: 0.0014757  max_mem: 10374M
[32m[04/18 00:22:47 d2.utils.events]: [0m eta: 0:52:45  iter: 2199  total_loss: 1.209  loss_rel: 0.2336  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.282  time: 1.7507  data_time: 0.1687  lr: 0.0014869  max_mem: 10374M
[32m[04/18 00:23:22 d2.utils.events]: [0m eta: 0:52:07  iter: 2219  total_loss: 1.176  loss_rel: 0.2169  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2592  time: 1.7507  data_time: 0.1818  lr: 0.0014982  max_mem: 10374M
[32m[04/18 00:23:57 d2.utils.events]: [0m eta: 0:51:35  iter: 2239  total_loss: 1.194  loss_rel: 0.2309  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2765  time: 1.7507  data_time: 0.1691  lr: 0.0015094  max_mem: 10374M
[32m[04/18 00:24:33 d2.utils.events]: [0m eta: 0:51:00  iter: 2259  total_loss: 1.216  loss_rel: 0.2563  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2647  time: 1.7510  data_time: 0.1933  lr: 0.0015207  max_mem: 10374M
[32m[04/18 00:25:08 d2.utils.events]: [0m eta: 0:50:25  iter: 2279  total_loss: 1.229  loss_rel: 0.2317  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2781  time: 1.7510  data_time: 0.1798  lr: 0.0015319  max_mem: 10374M
[32m[04/18 00:25:44 d2.utils.events]: [0m eta: 0:49:50  iter: 2299  total_loss: 1.203  loss_rel: 0.2423  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2607  time: 1.7512  data_time: 0.1855  lr: 0.0015432  max_mem: 10374M
[32m[04/18 00:26:19 d2.utils.events]: [0m eta: 0:49:17  iter: 2319  total_loss: 1.25  loss_rel: 0.2567  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2752  time: 1.7515  data_time: 0.1954  lr: 0.0015544  max_mem: 10374M
[32m[04/18 00:26:55 d2.utils.events]: [0m eta: 0:48:44  iter: 2339  total_loss: 1.184  loss_rel: 0.2207  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2686  time: 1.7518  data_time: 0.1815  lr: 0.0015657  max_mem: 10374M
[32m[04/18 00:27:31 d2.utils.events]: [0m eta: 0:48:10  iter: 2359  total_loss: 1.26  loss_rel: 0.2739  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2951  time: 1.7522  data_time: 0.1683  lr: 0.0015769  max_mem: 10374M
[32m[04/18 00:28:06 d2.utils.events]: [0m eta: 0:47:33  iter: 2379  total_loss: 1.213  loss_rel: 0.2455  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2728  time: 1.7522  data_time: 0.1720  lr: 0.0015882  max_mem: 10374M
[32m[04/18 00:28:45 d2.utils.events]: [0m eta: 0:46:58  iter: 2399  total_loss: 1.216  loss_rel: 0.2571  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2571  time: 1.7536  data_time: 0.1881  lr: 0.0015994  max_mem: 10374M
[32m[04/18 00:29:20 d2.utils.events]: [0m eta: 0:46:22  iter: 2419  total_loss: 1.238  loss_rel: 0.2655  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2786  time: 1.7535  data_time: 0.1639  lr: 0.0016107  max_mem: 10374M
[32m[04/18 00:29:55 d2.utils.events]: [0m eta: 0:45:48  iter: 2439  total_loss: 1.193  loss_rel: 0.2435  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2653  time: 1.7536  data_time: 0.1823  lr: 0.0016219  max_mem: 10374M
[32m[04/18 00:30:30 d2.utils.events]: [0m eta: 0:45:12  iter: 2459  total_loss: 1.203  loss_rel: 0.2502  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2682  time: 1.7536  data_time: 0.1851  lr: 0.0016332  max_mem: 10374M
[32m[04/18 00:31:05 d2.utils.events]: [0m eta: 0:44:36  iter: 2479  total_loss: 1.246  loss_rel: 0.272  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2936  time: 1.7535  data_time: 0.1819  lr: 0.0016444  max_mem: 10374M
[32m[04/18 00:31:40 d2.utils.events]: [0m eta: 0:44:01  iter: 2499  total_loss: 1.185  loss_rel: 0.2164  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2441  time: 1.7535  data_time: 0.1699  lr: 0.0016557  max_mem: 10374M
[32m[04/18 00:32:15 d2.utils.events]: [0m eta: 0:43:26  iter: 2519  total_loss: 1.247  loss_rel: 0.2801  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2727  time: 1.7536  data_time: 0.1773  lr: 0.0016669  max_mem: 10374M
[32m[04/18 00:32:51 d2.utils.events]: [0m eta: 0:42:51  iter: 2539  total_loss: 1.196  loss_rel: 0.2429  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2607  time: 1.7538  data_time: 0.1817  lr: 0.0016782  max_mem: 10374M
[32m[04/18 00:33:27 d2.utils.events]: [0m eta: 0:42:15  iter: 2559  total_loss: 1.228  loss_rel: 0.2388  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2846  time: 1.7542  data_time: 0.1791  lr: 0.0016894  max_mem: 10374M
[32m[04/18 00:34:02 d2.utils.events]: [0m eta: 0:41:39  iter: 2579  total_loss: 1.194  loss_rel: 0.2418  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2903  time: 1.7543  data_time: 0.2000  lr: 0.0017007  max_mem: 10374M
[32m[04/18 00:34:37 d2.utils.events]: [0m eta: 0:41:05  iter: 2599  total_loss: 1.232  loss_rel: 0.2814  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.26  time: 1.7543  data_time: 0.1930  lr: 0.0017119  max_mem: 10374M
[32m[04/18 00:35:12 d2.utils.events]: [0m eta: 0:40:29  iter: 2619  total_loss: 1.193  loss_rel: 0.2274  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2617  time: 1.7543  data_time: 0.1916  lr: 0.0017232  max_mem: 10374M
[32m[04/18 00:35:48 d2.utils.events]: [0m eta: 0:39:53  iter: 2639  total_loss: 1.185  loss_rel: 0.2345  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2603  time: 1.7544  data_time: 0.2003  lr: 0.0017344  max_mem: 10374M
[32m[04/18 00:36:23 d2.utils.events]: [0m eta: 0:39:19  iter: 2659  total_loss: 1.228  loss_rel: 0.2756  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2759  time: 1.7546  data_time: 0.1738  lr: 0.0017457  max_mem: 10374M
[32m[04/18 00:37:00 d2.utils.events]: [0m eta: 0:38:44  iter: 2679  total_loss: 1.2  loss_rel: 0.2237  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2718  time: 1.7551  data_time: 0.2090  lr: 0.0017569  max_mem: 10374M
[32m[04/18 00:37:35 d2.utils.events]: [0m eta: 0:38:08  iter: 2699  total_loss: 1.236  loss_rel: 0.281  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2666  time: 1.7550  data_time: 0.1684  lr: 0.0017682  max_mem: 10374M
[32m[04/18 00:38:09 d2.utils.events]: [0m eta: 0:37:33  iter: 2719  total_loss: 1.223  loss_rel: 0.2593  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2848  time: 1.7548  data_time: 0.1617  lr: 0.0017794  max_mem: 10374M
[32m[04/18 00:38:45 d2.utils.events]: [0m eta: 0:36:57  iter: 2739  total_loss: 1.21  loss_rel: 0.2382  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.272  time: 1.7551  data_time: 0.1875  lr: 0.0017907  max_mem: 10374M
[32m[04/18 00:39:21 d2.utils.events]: [0m eta: 0:36:23  iter: 2759  total_loss: 1.245  loss_rel: 0.2573  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2882  time: 1.7554  data_time: 0.1857  lr: 0.0018019  max_mem: 10374M
[32m[04/18 00:39:57 d2.utils.events]: [0m eta: 0:35:47  iter: 2779  total_loss: 1.214  loss_rel: 0.232  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2718  time: 1.7555  data_time: 0.1900  lr: 0.0018132  max_mem: 10374M
[32m[04/18 00:40:32 d2.utils.events]: [0m eta: 0:35:10  iter: 2799  total_loss: 1.226  loss_rel: 0.2651  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2785  time: 1.7556  data_time: 0.1837  lr: 0.0018244  max_mem: 10374M
[32m[04/18 00:41:11 d2.utils.events]: [0m eta: 0:34:34  iter: 2819  total_loss: 1.229  loss_rel: 0.2561  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2734  time: 1.7569  data_time: 0.2000  lr: 0.0018357  max_mem: 10374M
[32m[04/18 00:41:47 d2.utils.events]: [0m eta: 0:34:01  iter: 2839  total_loss: 1.194  loss_rel: 0.2321  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2716  time: 1.7571  data_time: 0.2034  lr: 0.0018469  max_mem: 10374M
[32m[04/18 00:42:22 d2.utils.events]: [0m eta: 0:33:27  iter: 2859  total_loss: 1.214  loss_rel: 0.285  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2702  time: 1.7572  data_time: 0.1933  lr: 0.0018582  max_mem: 10374M
[32m[04/18 00:42:57 d2.utils.events]: [0m eta: 0:32:50  iter: 2879  total_loss: 1.245  loss_rel: 0.278  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2812  time: 1.7573  data_time: 0.1918  lr: 0.0018694  max_mem: 10374M
[32m[04/18 00:43:32 d2.utils.events]: [0m eta: 0:32:15  iter: 2899  total_loss: 1.199  loss_rel: 0.2238  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2737  time: 1.7573  data_time: 0.1732  lr: 0.0018807  max_mem: 10374M
[32m[04/18 00:44:08 d2.utils.events]: [0m eta: 0:31:39  iter: 2919  total_loss: 1.224  loss_rel: 0.2292  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2919  time: 1.7573  data_time: 0.1953  lr: 0.0018919  max_mem: 10374M
[32m[04/18 00:44:43 d2.utils.events]: [0m eta: 0:31:05  iter: 2939  total_loss: 1.201  loss_rel: 0.2739  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2589  time: 1.7573  data_time: 0.1755  lr: 0.0019032  max_mem: 10374M
[32m[04/18 00:45:19 d2.utils.events]: [0m eta: 0:30:31  iter: 2959  total_loss: 1.244  loss_rel: 0.2824  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2836  time: 1.7575  data_time: 0.2039  lr: 0.0019144  max_mem: 10374M
[32m[04/18 00:45:54 d2.utils.events]: [0m eta: 0:29:54  iter: 2979  total_loss: 1.194  loss_rel: 0.2309  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2644  time: 1.7576  data_time: 0.1876  lr: 0.0019257  max_mem: 10374M
[32m[04/18 00:46:30 d2.utils.events]: [0m eta: 0:29:18  iter: 2999  total_loss: 1.195  loss_rel: 0.2483  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2675  time: 1.7577  data_time: 0.1961  lr: 0.0019369  max_mem: 10374M
[32m[04/18 00:47:05 d2.utils.events]: [0m eta: 0:28:44  iter: 3019  total_loss: 1.215  loss_rel: 0.2128  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2915  time: 1.7579  data_time: 0.1828  lr: 0.0019482  max_mem: 10374M
[32m[04/18 00:47:40 d2.utils.events]: [0m eta: 0:28:09  iter: 3039  total_loss: 1.193  loss_rel: 0.235  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2696  time: 1.7576  data_time: 0.1658  lr: 0.0019594  max_mem: 10374M
[32m[04/18 00:48:16 d2.utils.events]: [0m eta: 0:27:35  iter: 3059  total_loss: 1.175  loss_rel: 0.2193  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2601  time: 1.7579  data_time: 0.1968  lr: 0.0019707  max_mem: 10374M
[32m[04/18 00:48:51 d2.utils.events]: [0m eta: 0:27:01  iter: 3079  total_loss: 1.207  loss_rel: 0.231  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2767  time: 1.7578  data_time: 0.1759  lr: 0.0019819  max_mem: 10374M
[32m[04/18 00:49:25 d2.utils.events]: [0m eta: 0:26:26  iter: 3099  total_loss: 1.239  loss_rel: 0.2917  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2562  time: 1.7576  data_time: 0.1952  lr: 0.0019932  max_mem: 10374M
[32m[04/18 00:50:01 d2.utils.events]: [0m eta: 0:25:50  iter: 3119  total_loss: 1.249  loss_rel: 0.2603  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2821  time: 1.7577  data_time: 0.1866  lr: 0.0020044  max_mem: 10374M
[32m[04/18 00:50:37 d2.utils.events]: [0m eta: 0:25:17  iter: 3139  total_loss: 1.173  loss_rel: 0.1916  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2762  time: 1.7580  data_time: 0.1774  lr: 0.0020157  max_mem: 10374M
[32m[04/18 00:51:12 d2.utils.events]: [0m eta: 0:24:42  iter: 3159  total_loss: 1.205  loss_rel: 0.249  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2731  time: 1.7581  data_time: 0.1606  lr: 0.0020269  max_mem: 10374M
[32m[04/18 00:51:47 d2.utils.events]: [0m eta: 0:24:06  iter: 3179  total_loss: 1.172  loss_rel: 0.2394  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2603  time: 1.7578  data_time: 0.1547  lr: 0.0020382  max_mem: 10374M
[32m[04/18 00:52:25 d2.utils.events]: [0m eta: 0:23:31  iter: 3199  total_loss: 1.215  loss_rel: 0.2257  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2836  time: 1.7587  data_time: 0.1604  lr: 0.0020494  max_mem: 10374M
[32m[04/18 00:52:59 d2.utils.events]: [0m eta: 0:22:56  iter: 3219  total_loss: 1.207  loss_rel: 0.2357  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2793  time: 1.7585  data_time: 0.1617  lr: 0.0020607  max_mem: 10374M
[32m[04/18 00:53:33 d2.utils.events]: [0m eta: 0:22:18  iter: 3239  total_loss: 1.199  loss_rel: 0.2294  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2663  time: 1.7581  data_time: 0.1368  lr: 0.0020719  max_mem: 10374M
[32m[04/18 00:54:08 d2.utils.events]: [0m eta: 0:21:43  iter: 3259  total_loss: 1.217  loss_rel: 0.2478  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2733  time: 1.7580  data_time: 0.1842  lr: 0.0020832  max_mem: 10374M
[32m[04/18 00:54:43 d2.utils.events]: [0m eta: 0:21:08  iter: 3279  total_loss: 1.185  loss_rel: 0.2243  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2754  time: 1.7580  data_time: 0.1624  lr: 0.0020944  max_mem: 10374M
[32m[04/18 00:55:18 d2.utils.events]: [0m eta: 0:20:33  iter: 3299  total_loss: 1.21  loss_rel: 0.2452  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2667  time: 1.7580  data_time: 0.1640  lr: 0.0021057  max_mem: 10374M
[32m[04/18 00:55:53 d2.utils.events]: [0m eta: 0:19:56  iter: 3319  total_loss: 1.218  loss_rel: 0.2446  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2682  time: 1.7578  data_time: 0.1753  lr: 0.0021169  max_mem: 10374M
[32m[04/18 00:56:28 d2.utils.events]: [0m eta: 0:19:21  iter: 3339  total_loss: 1.213  loss_rel: 0.2459  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2838  time: 1.7578  data_time: 0.1510  lr: 0.0021282  max_mem: 10374M
[32m[04/18 00:57:02 d2.utils.events]: [0m eta: 0:18:46  iter: 3359  total_loss: 1.166  loss_rel: 0.2106  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.267  time: 1.7576  data_time: 0.1725  lr: 0.0021394  max_mem: 10374M
[32m[04/18 00:57:37 d2.utils.events]: [0m eta: 0:18:10  iter: 3379  total_loss: 1.198  loss_rel: 0.2338  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2588  time: 1.7575  data_time: 0.1572  lr: 0.0021507  max_mem: 10374M
[32m[04/18 00:58:11 d2.utils.events]: [0m eta: 0:17:35  iter: 3399  total_loss: 1.178  loss_rel: 0.2346  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.247  time: 1.7572  data_time: 0.1681  lr: 0.0021619  max_mem: 10374M
[32m[04/18 00:58:46 d2.utils.events]: [0m eta: 0:17:00  iter: 3419  total_loss: 1.177  loss_rel: 0.2451  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2868  time: 1.7571  data_time: 0.1546  lr: 0.0021732  max_mem: 10374M
[32m[04/18 00:59:20 d2.utils.events]: [0m eta: 0:16:24  iter: 3439  total_loss: 1.164  loss_rel: 0.1975  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2647  time: 1.7568  data_time: 0.1556  lr: 0.0021844  max_mem: 10374M
[32m[04/18 00:59:55 d2.utils.events]: [0m eta: 0:15:48  iter: 3459  total_loss: 1.215  loss_rel: 0.2336  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2792  time: 1.7566  data_time: 0.1552  lr: 0.0021957  max_mem: 10374M
[32m[04/18 01:00:30 d2.utils.events]: [0m eta: 0:15:12  iter: 3479  total_loss: 1.255  loss_rel: 0.2877  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2749  time: 1.7567  data_time: 0.1794  lr: 0.0022069  max_mem: 10374M
[32m[04/18 01:01:05 d2.utils.events]: [0m eta: 0:14:37  iter: 3499  total_loss: 1.209  loss_rel: 0.2465  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2742  time: 1.7566  data_time: 0.1642  lr: 0.0022182  max_mem: 10374M
[32m[04/18 01:01:41 d2.utils.events]: [0m eta: 0:14:02  iter: 3519  total_loss: 1.236  loss_rel: 0.2852  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.266  time: 1.7567  data_time: 0.1589  lr: 0.0022294  max_mem: 10374M
[32m[04/18 01:02:15 d2.utils.events]: [0m eta: 0:13:27  iter: 3539  total_loss: 1.221  loss_rel: 0.2532  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2798  time: 1.7564  data_time: 0.1551  lr: 0.0022407  max_mem: 10374M
[32m[04/18 01:02:49 d2.utils.events]: [0m eta: 0:12:51  iter: 3559  total_loss: 1.15  loss_rel: 0.1817  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2482  time: 1.7561  data_time: 0.1574  lr: 0.0022519  max_mem: 10374M
[32m[04/18 01:03:24 d2.utils.events]: [0m eta: 0:12:16  iter: 3579  total_loss: 1.245  loss_rel: 0.2615  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2756  time: 1.7562  data_time: 0.1549  lr: 0.0022632  max_mem: 10374M
[32m[04/18 01:04:01 d2.utils.events]: [0m eta: 0:11:41  iter: 3599  total_loss: 1.172  loss_rel: 0.2096  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.265  time: 1.7565  data_time: 0.1653  lr: 0.0022744  max_mem: 10400M
[32m[04/18 01:04:39 d2.utils.events]: [0m eta: 0:11:06  iter: 3619  total_loss: 1.205  loss_rel: 0.2351  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2756  time: 1.7574  data_time: 0.1697  lr: 0.0022857  max_mem: 10400M
[32m[04/18 01:05:14 d2.utils.events]: [0m eta: 0:10:31  iter: 3639  total_loss: 1.199  loss_rel: 0.2284  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2671  time: 1.7574  data_time: 0.1694  lr: 0.0022969  max_mem: 10400M
[32m[04/18 01:05:50 d2.utils.events]: [0m eta: 0:09:56  iter: 3659  total_loss: 1.178  loss_rel: 0.2226  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2592  time: 1.7575  data_time: 0.1746  lr: 0.0023082  max_mem: 10533M
[32m[04/18 01:06:25 d2.utils.events]: [0m eta: 0:09:20  iter: 3679  total_loss: 1.237  loss_rel: 0.25  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2758  time: 1.7574  data_time: 0.1757  lr: 0.0023194  max_mem: 10533M
[32m[04/18 01:06:59 d2.utils.events]: [0m eta: 0:08:45  iter: 3699  total_loss: 1.178  loss_rel: 0.2216  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2597  time: 1.7573  data_time: 0.1699  lr: 0.0023307  max_mem: 10533M
[32m[04/18 01:07:34 d2.utils.events]: [0m eta: 0:08:10  iter: 3719  total_loss: 1.202  loss_rel: 0.2675  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.255  time: 1.7571  data_time: 0.1608  lr: 0.0023419  max_mem: 10533M
[32m[04/18 01:08:10 d2.utils.events]: [0m eta: 0:07:35  iter: 3739  total_loss: 1.173  loss_rel: 0.1953  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2905  time: 1.7574  data_time: 0.1757  lr: 0.0023532  max_mem: 10533M
[32m[04/18 01:08:46 d2.utils.events]: [0m eta: 0:06:59  iter: 3759  total_loss: 1.224  loss_rel: 0.2531  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2736  time: 1.7575  data_time: 0.1555  lr: 0.0023644  max_mem: 10533M
[32m[04/18 01:09:20 d2.utils.events]: [0m eta: 0:06:24  iter: 3779  total_loss: 1.229  loss_rel: 0.2747  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2603  time: 1.7573  data_time: 0.1576  lr: 0.0023757  max_mem: 10533M
[32m[04/18 01:09:55 d2.utils.events]: [0m eta: 0:05:50  iter: 3799  total_loss: 1.243  loss_rel: 0.2892  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2688  time: 1.7571  data_time: 0.1829  lr: 0.0023869  max_mem: 10533M
[32m[04/18 01:10:30 d2.utils.events]: [0m eta: 0:05:15  iter: 3819  total_loss: 1.192  loss_rel: 0.2306  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2605  time: 1.7571  data_time: 0.1854  lr: 0.0023982  max_mem: 10533M
[32m[04/18 01:11:05 d2.utils.events]: [0m eta: 0:04:39  iter: 3839  total_loss: 1.219  loss_rel: 0.2366  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2652  time: 1.7572  data_time: 0.1749  lr: 0.0024094  max_mem: 10533M
[32m[04/18 01:11:38 d2.utils.events]: [0m eta: 0:04:04  iter: 3859  total_loss: 1.215  loss_rel: 0.2823  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2627  time: 1.7567  data_time: 0.1469  lr: 0.0024207  max_mem: 10533M
[32m[04/18 01:12:13 d2.utils.events]: [0m eta: 0:03:29  iter: 3879  total_loss: 1.194  loss_rel: 0.2536  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2672  time: 1.7564  data_time: 0.1501  lr: 0.0024319  max_mem: 10533M
[32m[04/18 01:12:47 d2.utils.events]: [0m eta: 0:02:54  iter: 3899  total_loss: 1.218  loss_rel: 0.2568  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2663  time: 1.7563  data_time: 0.1596  lr: 0.0024432  max_mem: 10533M
[32m[04/18 01:13:22 d2.utils.events]: [0m eta: 0:02:19  iter: 3919  total_loss: 1.214  loss_rel: 0.2501  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2772  time: 1.7563  data_time: 0.1601  lr: 0.0024544  max_mem: 10533M
[32m[04/18 01:13:56 d2.utils.events]: [0m eta: 0:01:44  iter: 3939  total_loss: 1.181  loss_rel: 0.2184  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2695  time: 1.7560  data_time: 0.1543  lr: 0.0024657  max_mem: 10533M
[32m[04/18 01:14:30 d2.utils.events]: [0m eta: 0:01:09  iter: 3959  total_loss: 1.212  loss_rel: 0.2541  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2694  time: 1.7558  data_time: 0.1516  lr: 0.0024769  max_mem: 10533M
[32m[04/18 01:15:05 d2.utils.events]: [0m eta: 0:00:34  iter: 3979  total_loss: 1.206  loss_rel: 0.2457  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2594  time: 1.7555  data_time: 0.1588  lr: 0.0024882  max_mem: 10533M
[32m[04/18 01:15:43 d2.data.datasets.coco]: [0mLoading ../datasets-real/coco/annotations/instances_val2017.json takes 3.62 seconds.
[32m[04/18 01:15:43 d2.data.datasets.coco]: [0mLoaded 5000 images in COCO format from ../datasets-real/coco/annotations/instances_val2017.json
[32m[04/18 01:15:43 d2.data.build]: [0mDistribution of instances among all 80 categories:
[36m|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 10777        |   bicycle    | 314          |      car      | 1918         |
|  motorcycle   | 367          |   airplane   | 143          |      bus      | 283          |
|     train     | 190          |    truck     | 414          |     boat      | 424          |
| traffic light | 634          | fire hydrant | 101          |   stop sign   | 75           |
| parking meter | 60           |    bench     | 411          |     bird      | 427          |
|      cat      | 202          |     dog      | 218          |     horse     | 272          |
|     sheep     | 354          |     cow      | 372          |   elephant    | 252          |
|     bear      | 71           |    zebra     | 266          |    giraffe    | 232          |
|   backpack    | 371          |   umbrella   | 407          |    handbag    | 540          |
|      tie      | 252          |   suitcase   | 299          |    frisbee    | 115          |
|     skis      | 241          |  snowboard   | 69           |  sports ball  | 260          |
|     kite      | 327          | baseball bat | 145          | baseball gl.. | 148          |
|  skateboard   | 179          |  surfboard   | 267          | tennis racket | 225          |
|    bottle     | 1013         |  wine glass  | 341          |      cup      | 895          |
|     fork      | 215          |    knife     | 325          |     spoon     | 253          |
|     bowl      | 623          |    banana    | 370          |     apple     | 236          |
|   sandwich    | 177          |    orange    | 285          |   broccoli    | 312          |
|    carrot     | 365          |   hot dog    | 125          |     pizza     | 284          |
|     donut     | 328          |     cake     | 310          |     chair     | 1771         |
|     couch     | 261          | potted plant | 342          |      bed      | 163          |
| dining table  | 695          |    toilet    | 179          |      tv       | 288          |
|    laptop     | 231          |    mouse     | 106          |    remote     | 283          |
|   keyboard    | 153          |  cell phone  | 262          |   microwave   | 55           |
|     oven      | 143          |   toaster    | 9            |     sink      | 225          |
| refrigerator  | 126          |     book     | 1129         |     clock     | 267          |
|     vase      | 274          |   scissors   | 36           |  teddy bear   | 190          |
|  hair drier   | 11           |  toothbrush  | 57           |               |              |
|     total     | 36335        |              |              |               |              |[0m
[32m[04/18 01:15:43 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[04/18 01:15:43 d2.data.common]: [0mSerializing 5000 elements to byte tensors and concatenating them all ...
[32m[04/18 01:15:43 d2.data.common]: [0mSerialized dataset takes 19.14 MiB
[5m[31mWARNING[0m [32m[04/18 01:15:43 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[04/18 01:26:18 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[04/18 01:26:18 d2.evaluation.coco_evaluation]: [0mSaving results to ../output-step3-predcl-vctree-short-vg/coco_instances_results.json
[32m[04/18 01:26:18 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.05s)
creating index...
index created!
[32m[04/18 01:26:18 d2.evaluation.fast_eval_api]: [0mEvaluate annotation type *bbox*
[32m[04/18 01:26:28 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.evaluate() finished in 9.51 seconds.
[32m[04/18 01:26:28 d2.evaluation.fast_eval_api]: [0mAccumulating evaluation results...
[32m[04/18 01:26:29 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.accumulate() finished in 0.82 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 1.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 1.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.563
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.976
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 1.000
[32m[04/18 01:26:29 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP    |  AP50   |  AP75   |   APs   |   APm   |   APl   |
|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|
| 100.000 | 100.000 | 100.000 | 100.000 | 100.000 | 100.000 |
[32m[04/18 01:26:29 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category      | AP      | category     | AP      | category       | AP      |
|:--------------|:--------|:-------------|:--------|:---------------|:--------|
| person        | 100.000 | bicycle      | 100.000 | car            | 100.000 |
| motorcycle    | 100.000 | airplane     | 100.000 | bus            | 100.000 |
| train         | 100.000 | truck        | 100.000 | boat           | 100.000 |
| traffic light | 100.000 | fire hydrant | 100.000 | stop sign      | 100.000 |
| parking meter | 100.000 | bench        | 100.000 | bird           | 100.000 |
| cat           | 100.000 | dog          | 100.000 | horse          | 100.000 |
| sheep         | 100.000 | cow          | 100.000 | elephant       | 100.000 |
| bear          | 100.000 | zebra        | 100.000 | giraffe        | 100.000 |
| backpack      | 100.000 | umbrella     | 100.000 | handbag        | 100.000 |
| tie           | 100.000 | suitcase     | 100.000 | frisbee        | 100.000 |
| skis          | 100.000 | snowboard    | 100.000 | sports ball    | 100.000 |
| kite          | 100.000 | baseball bat | 100.000 | baseball glove | 100.000 |
| skateboard    | 100.000 | surfboard    | 100.000 | tennis racket  | 100.000 |
| bottle        | 100.000 | wine glass   | 100.000 | cup            | 100.000 |
| fork          | 100.000 | knife        | 100.000 | spoon          | 100.000 |
| bowl          | 100.000 | banana       | 100.000 | apple          | 100.000 |
| sandwich      | 100.000 | orange       | 100.000 | broccoli       | 100.000 |
| carrot        | 100.000 | hot dog      | 100.000 | pizza          | 100.000 |
| donut         | 100.000 | cake         | 100.000 | chair          | 100.000 |
| couch         | 100.000 | potted plant | 100.000 | bed            | 100.000 |
| dining table  | 100.000 | toilet       | 100.000 | tv             | 100.000 |
| laptop        | 100.000 | mouse        | 100.000 | remote         | 100.000 |
| keyboard      | 100.000 | cell phone   | 100.000 | microwave      | 100.000 |
| oven          | 100.000 | toaster      | 100.000 | sink           | 100.000 |
| refrigerator  | 100.000 | book         | 100.000 | clock          | 100.000 |
| vase          | 100.000 | scissors     | 100.000 | teddy bear     | 100.000 |
| hair drier    | 100.000 | toothbrush   | 100.000 |                |         |
Loading and preparing results...
DONE (t=0.51s)
creating index...
index created!
[32m[04/18 01:26:30 d2.evaluation.fast_eval_api]: [0mEvaluate annotation type *segm*
[32m[04/18 01:26:42 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.evaluate() finished in 11.68 seconds.
[32m[04/18 01:26:42 d2.evaluation.fast_eval_api]: [0mAccumulating evaluation results...
[32m[04/18 01:26:43 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.accumulate() finished in 0.76 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.554
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.882
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.593
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.473
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.583
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.682
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.401
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.649
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.663
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.575
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.676
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.755
[32m[04/18 01:26:43 d2.evaluation.coco_evaluation]: [0mEvaluation results for segm: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 55.444 | 88.180 | 59.327 | 47.332 | 58.263 | 68.225 |
[32m[04/18 01:26:44 d2.evaluation.coco_evaluation]: [0mPer-category segm AP: 
| category      | AP     | category     | AP     | category       | AP     |
|:--------------|:-------|:-------------|:-------|:---------------|:-------|
| person        | 53.886 | bicycle      | 26.125 | car            | 58.368 |
| motorcycle    | 42.127 | airplane     | 54.139 | bus            | 73.378 |
| train         | 69.533 | truck        | 64.571 | boat           | 44.199 |
| traffic light | 63.089 | fire hydrant | 75.545 | stop sign      | 81.276 |
| parking meter | 77.355 | bench        | 38.805 | bird           | 43.279 |
| cat           | 76.014 | dog          | 68.461 | horse          | 45.868 |
| sheep         | 50.805 | cow          | 54.992 | elephant       | 63.714 |
| bear          | 79.461 | zebra        | 59.914 | giraffe        | 53.286 |
| backpack      | 44.021 | umbrella     | 54.355 | handbag        | 40.889 |
| tie           | 41.605 | suitcase     | 64.721 | frisbee        | 71.889 |
| skis          | 4.714  | snowboard    | 35.733 | sports ball    | 68.392 |
| kite          | 43.269 | baseball bat | 30.380 | baseball glove | 60.305 |
| skateboard    | 38.802 | surfboard    | 42.877 | tennis racket  | 56.518 |
| bottle        | 64.067 | wine glass   | 49.004 | cup            | 72.605 |
| fork          | 22.147 | knife        | 28.282 | spoon          | 27.739 |
| bowl          | 66.604 | banana       | 50.934 | apple          | 62.942 |
| sandwich      | 71.454 | orange       | 68.326 | broccoli       | 46.692 |
| carrot        | 47.618 | hot dog      | 53.210 | pizza          | 65.808 |
| donut         | 73.096 | cake         | 67.192 | chair          | 37.331 |
| couch         | 53.004 | potted plant | 47.386 | bed            | 52.295 |
| dining table  | 31.033 | toilet       | 71.234 | tv             | 77.535 |
| laptop        | 70.588 | mouse        | 72.655 | remote         | 51.431 |
| keyboard      | 64.824 | cell phone   | 52.809 | microwave      | 79.048 |
| oven          | 53.289 | toaster      | 80.978 | sink           | 59.432 |
| refrigerator  | 74.579 | book         | 41.687 | clock          | 74.837 |
| vase          | 65.571 | scissors     | 29.397 | teddy bear     | 58.329 |
| hair drier    | 47.912 | toothbrush   | 33.951 |                |        |
[32m[04/18 01:26:44 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[04/18 01:26:44 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[04/18 01:26:44 d2.evaluation.testing]: [0mcopypaste: 100.0000,100.0000,100.0000,100.0000,100.0000,100.0000
[32m[04/18 01:26:44 d2.evaluation.testing]: [0mcopypaste: Task: segm
[32m[04/18 01:26:44 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[04/18 01:26:44 d2.evaluation.testing]: [0mcopypaste: 55.4440,88.1804,59.3266,47.3315,58.2626,68.2252
[32m[04/18 01:26:44 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[04/18 01:26:45 d2.data.build]: [0mDistribution of instances among all 150 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|  airplane  | 460          |   animal   | 897          |    arm     | 3387         |
|    bag     | 1906         |   banana   | 1352         |   basket   | 645          |
|   beach    | 1090         |    bear    | 1036         |    bed     | 929          |
|   bench    | 1542         |    bike    | 1445         |    bird    | 1261         |
|   board    | 1376         |    boat    | 1407         |    book    | 1105         |
|    boot    | 749          |   bottle   | 1679         |    bowl    | 1303         |
|    box     | 1436         |    boy     | 2110         |   branch   | 1766         |
|  building  | 7373         |    bus     | 1412         |  cabinet   | 1011         |
|    cap     | 1073         |    car     | 4150         |    cat     | 1188         |
|   chair    | 2893         |   child    | 895          |   clock    | 1327         |
|    coat    | 1094         |  counter   | 1159         |    cow     | 1192         |
|    cup     | 1087         |  curtain   | 763          |    desk    | 667          |
|    dog     | 1406         |    door    | 3383         |   drawer   | 618          |
|    ear     | 3770         |  elephant  | 1353         |   engine   | 757          |
|    eye     | 1965         |    face    | 2462         |   fence    | 3079         |
|   finger   | 1034         |    flag    | 903          |   flower   | 2299         |
|    food    | 1781         |    fork    | 649          |   fruit    | 660          |
|  giraffe   | 1562         |    girl    | 1792         |   glass    | 2983         |
|   glove    | 1228         |    guy     | 544          |    hair    | 4915         |
|    hand    | 5566         |   handle   | 1931         |    hat     | 2435         |
|    head    | 7112         |   helmet   | 1792         |    hill    | 1045         |
|   horse    | 1590         |   house    | 1113         |   jacket   | 2959         |
|    jean    | 1467         |    kid     | 564          |    kite    | 995          |
|    lady    | 657          |    lamp    | 942          |   laptop   | 927          |
|    leaf    | 3971         |    leg     | 7752         |   letter   | 2399         |
|   light    | 3604         |    logo    | 1267         |    man     | 16310        |
|    men     | 485          | motorcycle | 1088         |  mountain  | 1064         |
|   mouth    | 1139         |    neck    | 1379         |    nose    | 1892         |
|   number   | 1077         |   orange   | 749          |    pant    | 3834         |
|   paper    | 1119         |    paw     | 883          |   people   | 3751         |
|   person   | 12808        |   phone    | 839          |   pillow   | 1468         |
|   pizza    | 1000         |   plane    | 1641         |   plant    | 1714         |
|   plate    | 3203         |   player   | 1314         |    pole    | 5765         |
|    post    | 1596         |    pot     | 679          |   racket   | 840          |
|  railing   | 694          |    rock    | 2095         |    roof    | 1534         |
|    room    | 633          |   screen   | 676          |    seat    | 1076         |
|   sheep    | 1201         |   shelf    | 1477         |   shirt    | 9368         |
|    shoe    | 3725         |   short    | 2229         |  sidewalk  | 2263         |
|    sign    | 6306         |    sink    | 767          | skateboard | 1190         |
|    ski     | 1063         |   skier    | 590          |  sneaker   | 658          |
|    snow    | 2994         |    sock    | 935          |   stand    | 762          |
|   street   | 3007         | surfboard  | 1285         |   table    | 5216         |
|    tail    | 2589         |    tie     | 837          |    tile    | 1841         |
|    tire    | 1727         |   toilet   | 571          |   towel    | 807          |
|   tower    | 688          |   track    | 2287         |   train    | 1932         |
|    tree    | 12679        |   truck    | 1153         |   trunk    | 1386         |
|  umbrella  | 1838         |    vase    | 841          | vegetable  | 646          |
|  vehicle   | 858          |    wave    | 1710         |   wheel    | 2840         |
|   window   | 11751        | windshield | 866          |    wing    | 1400         |
|    wire    | 1030         |   woman    | 7212         |   zebra    | 1304         |
|            |              |            |              |            |              |
|   total    | 325570       |            |              |            |              |[0m
[32m[04/18 01:26:45 d2.data.common]: [0mSerializing 26446 elements to byte tensors and concatenating them all ...
[32m[04/18 01:26:48 d2.data.common]: [0mSerialized dataset takes 69.66 MiB
[32m[04/18 01:26:48 detectron2]: [0mFollowing metrics will be use for evaluation
[32m[04/18 01:26:48 detectron2]: [0m('SGRecall', 'SGNoGraphConstraintRecall', 'SGZeroShotRecall', 'SGPairAccuracy', 'SGMeanRecall')
[5m[31mWARNING[0m [32m[04/18 01:26:48 d2.evaluation.coco_evaluation]: [0mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[04/18 01:26:48 d2.evaluation.coco_evaluation]: [0mTrying to convert 'VG_test' to COCO format ...
[32m[04/18 01:26:48 d2.data.datasets.coco]: [0mConverting annotations of dataset 'VG_test' to COCO format ...)
[32m[04/18 01:26:48 d2.data.datasets.coco]: [0mConverting dataset dicts into COCO format
[32m[04/18 01:27:26 d2.data.datasets.coco]: [0mConversion finished, #images: 26446, #annotations: 325570
[32m[04/18 01:27:26 d2.data.datasets.coco]: [0mCaching COCO format annotations at '../output-step3-predcl-vctree-short-vg/inference/VG_test_coco_format.json' ...
[32m[04/18 01:27:36 detectron2]: [0mLoading zero shot triplets
[32m[04/18 01:27:36 detectron2]: [0mStart inference on 26446 images
[32m[04/18 01:27:39 detectron2]: [0mInference done 11/26446. 0.1633 s / img. ETA=1:13:25
[32m[04/18 01:27:44 detectron2]: [0mInference done 40/26446. 0.1677 s / img. ETA=1:15:32
[32m[04/18 01:27:49 detectron2]: [0mInference done 72/26446. 0.1620 s / img. ETA=1:12:53
[32m[04/18 01:27:54 detectron2]: [0mInference done 104/26446. 0.1600 s / img. ETA=1:11:54
[32m[04/18 01:27:59 detectron2]: [0mInference done 137/26446. 0.1575 s / img. ETA=1:10:42
[32m[04/18 01:28:04 detectron2]: [0mInference done 170/26446. 0.1561 s / img. ETA=1:09:59
[32m[04/18 01:28:09 detectron2]: [0mInference done 201/26446. 0.1567 s / img. ETA=1:10:10
[32m[04/18 01:28:14 detectron2]: [0mInference done 233/26446. 0.1564 s / img. ETA=1:09:59
[32m[04/18 01:28:19 detectron2]: [0mInference done 264/26446. 0.1569 s / img. ETA=1:10:06
[32m[04/18 01:28:24 detectron2]: [0mInference done 296/26446. 0.1566 s / img. ETA=1:09:51
[32m[04/18 01:28:30 detectron2]: [0mInference done 327/26446. 0.1573 s / img. ETA=1:10:06
[32m[04/18 01:28:35 detectron2]: [0mInference done 359/26446. 0.1572 s / img. ETA=1:09:57
[32m[04/18 01:28:40 detectron2]: [0mInference done 389/26446. 0.1579 s / img. ETA=1:10:12
[32m[04/18 01:28:45 detectron2]: [0mInference done 421/26446. 0.1575 s / img. ETA=1:09:57
[32m[04/18 01:28:50 detectron2]: [0mInference done 453/26446. 0.1572 s / img. ETA=1:09:43
[32m[04/18 01:28:55 detectron2]: [0mInference done 485/26446. 0.1571 s / img. ETA=1:09:36
[32m[04/18 01:29:00 detectron2]: [0mInference done 515/26446. 0.1575 s / img. ETA=1:09:41
[32m[04/18 01:29:05 detectron2]: [0mInference done 546/26446. 0.1575 s / img. ETA=1:09:38
[32m[04/18 01:29:10 detectron2]: [0mInference done 576/26446. 0.1580 s / img. ETA=1:09:47
[32m[04/18 01:29:15 detectron2]: [0mInference done 609/26446. 0.1576 s / img. ETA=1:09:31
[32m[04/18 01:29:20 detectron2]: [0mInference done 643/26446. 0.1570 s / img. ETA=1:09:09
[32m[04/18 01:29:25 detectron2]: [0mInference done 674/26446. 0.1571 s / img. ETA=1:09:07
[32m[04/18 01:29:31 detectron2]: [0mInference done 705/26446. 0.1573 s / img. ETA=1:09:05
[32m[04/18 01:29:36 detectron2]: [0mInference done 737/26446. 0.1573 s / img. ETA=1:09:01
[32m[04/18 01:29:41 detectron2]: [0mInference done 770/26446. 0.1570 s / img. ETA=1:08:48
[32m[04/18 01:29:46 detectron2]: [0mInference done 803/26446. 0.1567 s / img. ETA=1:08:36
[32m[04/18 01:29:51 detectron2]: [0mInference done 836/26446. 0.1565 s / img. ETA=1:08:24
[32m[04/18 01:29:56 detectron2]: [0mInference done 868/26446. 0.1564 s / img. ETA=1:08:17
[32m[04/18 01:30:01 detectron2]: [0mInference done 900/26446. 0.1563 s / img. ETA=1:08:10
[32m[04/18 01:30:06 detectron2]: [0mInference done 931/26446. 0.1565 s / img. ETA=1:08:09
[32m[04/18 01:30:11 detectron2]: [0mInference done 963/26446. 0.1564 s / img. ETA=1:08:03
[32m[04/18 01:30:16 detectron2]: [0mInference done 994/26446. 0.1566 s / img. ETA=1:08:01
[32m[04/18 01:30:22 detectron2]: [0mInference done 1025/26446. 0.1567 s / img. ETA=1:08:00
[32m[04/18 01:30:27 detectron2]: [0mInference done 1057/26446. 0.1568 s / img. ETA=1:07:58
[32m[04/18 01:30:32 detectron2]: [0mInference done 1089/26446. 0.1567 s / img. ETA=1:07:50
[32m[04/18 01:30:37 detectron2]: [0mInference done 1122/26446. 0.1565 s / img. ETA=1:07:40
[32m[04/18 01:30:42 detectron2]: [0mInference done 1153/26446. 0.1566 s / img. ETA=1:07:36
[32m[04/18 01:30:47 detectron2]: [0mInference done 1185/26446. 0.1565 s / img. ETA=1:07:28
[32m[04/18 01:30:52 detectron2]: [0mInference done 1216/26446. 0.1566 s / img. ETA=1:07:27
[32m[04/18 01:30:57 detectron2]: [0mInference done 1247/26446. 0.1567 s / img. ETA=1:07:24
[32m[04/18 01:31:02 detectron2]: [0mInference done 1276/26446. 0.1570 s / img. ETA=1:07:26
[32m[04/18 01:31:07 detectron2]: [0mInference done 1307/26446. 0.1570 s / img. ETA=1:07:22
[32m[04/18 01:31:12 detectron2]: [0mInference done 1339/26446. 0.1570 s / img. ETA=1:07:16
[32m[04/18 01:31:17 detectron2]: [0mInference done 1372/26446. 0.1568 s / img. ETA=1:07:06
[32m[04/18 01:31:22 detectron2]: [0mInference done 1404/26446. 0.1568 s / img. ETA=1:07:01
[32m[04/18 01:31:28 detectron2]: [0mInference done 1432/26446. 0.1572 s / img. ETA=1:07:07
[32m[04/18 01:31:33 detectron2]: [0mInference done 1463/26446. 0.1573 s / img. ETA=1:07:03
[32m[04/18 01:31:38 detectron2]: [0mInference done 1492/26446. 0.1575 s / img. ETA=1:07:04
[32m[04/18 01:31:43 detectron2]: [0mInference done 1522/26446. 0.1576 s / img. ETA=1:07:03
[32m[04/18 01:31:48 detectron2]: [0mInference done 1553/26446. 0.1577 s / img. ETA=1:06:59
[32m[04/18 01:31:53 detectron2]: [0mInference done 1585/26446. 0.1576 s / img. ETA=1:06:51
[32m[04/18 01:31:58 detectron2]: [0mInference done 1616/26446. 0.1577 s / img. ETA=1:06:48
[32m[04/18 01:32:03 detectron2]: [0mInference done 1645/26446. 0.1579 s / img. ETA=1:06:49
[32m[04/18 01:32:08 detectron2]: [0mInference done 1675/26446. 0.1580 s / img. ETA=1:06:48
[32m[04/18 01:32:13 detectron2]: [0mInference done 1706/26446. 0.1582 s / img. ETA=1:06:46
[32m[04/18 01:32:18 detectron2]: [0mInference done 1736/26446. 0.1583 s / img. ETA=1:06:44
[32m[04/18 01:32:23 detectron2]: [0mInference done 1767/26446. 0.1583 s / img. ETA=1:06:40
[32m[04/18 01:32:28 detectron2]: [0mInference done 1797/26446. 0.1584 s / img. ETA=1:06:37
[32m[04/18 01:32:34 detectron2]: [0mInference done 1827/26446. 0.1585 s / img. ETA=1:06:35
[32m[04/18 01:32:39 detectron2]: [0mInference done 1855/26446. 0.1588 s / img. ETA=1:06:37
[32m[04/18 01:32:44 detectron2]: [0mInference done 1886/26446. 0.1588 s / img. ETA=1:06:32
[32m[04/18 01:32:49 detectron2]: [0mInference done 1919/26446. 0.1586 s / img. ETA=1:06:23
[32m[04/18 01:32:54 detectron2]: [0mInference done 1949/26446. 0.1587 s / img. ETA=1:06:21
[32m[04/18 01:32:59 detectron2]: [0mInference done 1979/26446. 0.1589 s / img. ETA=1:06:19
[32m[04/18 01:33:04 detectron2]: [0mInference done 2011/26446. 0.1588 s / img. ETA=1:06:12
[32m[04/18 01:33:09 detectron2]: [0mInference done 2042/26446. 0.1589 s / img. ETA=1:06:10
[32m[04/18 01:33:14 detectron2]: [0mInference done 2071/26446. 0.1590 s / img. ETA=1:06:09
[32m[04/18 01:33:19 detectron2]: [0mInference done 2104/26446. 0.1589 s / img. ETA=1:05:59
[32m[04/18 01:33:24 detectron2]: [0mInference done 2134/26446. 0.1589 s / img. ETA=1:05:56
[32m[04/18 01:33:29 detectron2]: [0mInference done 2168/26446. 0.1587 s / img. ETA=1:05:46
[32m[04/18 01:33:35 detectron2]: [0mInference done 2201/26446. 0.1586 s / img. ETA=1:05:38
[32m[04/18 01:33:40 detectron2]: [0mInference done 2237/26446. 0.1583 s / img. ETA=1:05:24
[32m[04/18 01:33:45 detectron2]: [0mInference done 2270/26446. 0.1582 s / img. ETA=1:05:15
[32m[04/18 01:33:50 detectron2]: [0mInference done 2304/26446. 0.1580 s / img. ETA=1:05:05
[32m[04/18 01:33:55 detectron2]: [0mInference done 2337/26446. 0.1579 s / img. ETA=1:04:58
[32m[04/18 01:34:00 detectron2]: [0mInference done 2368/26446. 0.1579 s / img. ETA=1:04:54
[32m[04/18 01:34:05 detectron2]: [0mInference done 2403/26446. 0.1577 s / img. ETA=1:04:42
[32m[04/18 01:34:10 detectron2]: [0mInference done 2434/26446. 0.1577 s / img. ETA=1:04:37
[32m[04/18 01:34:15 detectron2]: [0mInference done 2468/26446. 0.1575 s / img. ETA=1:04:28
[32m[04/18 01:34:20 detectron2]: [0mInference done 2502/26446. 0.1574 s / img. ETA=1:04:18
[32m[04/18 01:34:25 detectron2]: [0mInference done 2536/26446. 0.1572 s / img. ETA=1:04:09
[32m[04/18 01:34:30 detectron2]: [0mInference done 2565/26446. 0.1574 s / img. ETA=1:04:08
[32m[04/18 01:34:35 detectron2]: [0mInference done 2595/26446. 0.1574 s / img. ETA=1:04:05
[32m[04/18 01:34:41 detectron2]: [0mInference done 2631/26446. 0.1572 s / img. ETA=1:03:53
[32m[04/18 01:34:46 detectron2]: [0mInference done 2663/26446. 0.1572 s / img. ETA=1:03:48
[32m[04/18 01:34:51 detectron2]: [0mInference done 2695/26446. 0.1572 s / img. ETA=1:03:42
[32m[04/18 01:34:56 detectron2]: [0mInference done 2727/26446. 0.1571 s / img. ETA=1:03:36
[32m[04/18 01:35:01 detectron2]: [0mInference done 2757/26446. 0.1572 s / img. ETA=1:03:33
[32m[04/18 01:35:06 detectron2]: [0mInference done 2786/26446. 0.1574 s / img. ETA=1:03:32
[32m[04/18 01:35:11 detectron2]: [0mInference done 2817/26446. 0.1574 s / img. ETA=1:03:28
[32m[04/18 01:35:16 detectron2]: [0mInference done 2850/26446. 0.1573 s / img. ETA=1:03:21
[32m[04/18 01:35:21 detectron2]: [0mInference done 2880/26446. 0.1574 s / img. ETA=1:03:18
[32m[04/18 01:35:26 detectron2]: [0mInference done 2912/26446. 0.1574 s / img. ETA=1:03:12
[32m[04/18 01:35:31 detectron2]: [0mInference done 2945/26446. 0.1573 s / img. ETA=1:03:05
[32m[04/18 01:35:36 detectron2]: [0mInference done 2978/26446. 0.1572 s / img. ETA=1:02:58
[32m[04/18 01:35:42 detectron2]: [0mInference done 3011/26446. 0.1571 s / img. ETA=1:02:51
[32m[04/18 01:35:47 detectron2]: [0mInference done 3045/26446. 0.1570 s / img. ETA=1:02:42
[32m[04/18 01:35:52 detectron2]: [0mInference done 3076/26446. 0.1570 s / img. ETA=1:02:38
[32m[04/18 01:35:57 detectron2]: [0mInference done 3108/26446. 0.1570 s / img. ETA=1:02:32
[32m[04/18 01:36:02 detectron2]: [0mInference done 3139/26446. 0.1570 s / img. ETA=1:02:28
[32m[04/18 01:36:07 detectron2]: [0mInference done 3172/26446. 0.1569 s / img. ETA=1:02:20
[32m[04/18 01:36:12 detectron2]: [0mInference done 3205/26446. 0.1568 s / img. ETA=1:02:13
[32m[04/18 01:36:17 detectron2]: [0mInference done 3237/26446. 0.1568 s / img. ETA=1:02:07
[32m[04/18 01:36:22 detectron2]: [0mInference done 3271/26446. 0.1567 s / img. ETA=1:01:58
[32m[04/18 01:36:27 detectron2]: [0mInference done 3304/26446. 0.1566 s / img. ETA=1:01:51
[32m[04/18 01:36:32 detectron2]: [0mInference done 3338/26446. 0.1565 s / img. ETA=1:01:44
[32m[04/18 01:36:37 detectron2]: [0mInference done 3371/26446. 0.1564 s / img. ETA=1:01:37
[32m[04/18 01:36:42 detectron2]: [0mInference done 3404/26446. 0.1564 s / img. ETA=1:01:30
[32m[04/18 01:36:47 detectron2]: [0mInference done 3437/26446. 0.1563 s / img. ETA=1:01:24
[32m[04/18 01:36:52 detectron2]: [0mInference done 3469/26446. 0.1563 s / img. ETA=1:01:18
[32m[04/18 01:36:57 detectron2]: [0mInference done 3502/26446. 0.1563 s / img. ETA=1:01:11
[32m[04/18 01:37:03 detectron2]: [0mInference done 3535/26446. 0.1562 s / img. ETA=1:01:05
[32m[04/18 01:37:08 detectron2]: [0mInference done 3568/26446. 0.1561 s / img. ETA=1:00:58
[32m[04/18 01:37:13 detectron2]: [0mInference done 3601/26446. 0.1561 s / img. ETA=1:00:51
[32m[04/18 01:37:18 detectron2]: [0mInference done 3632/26446. 0.1561 s / img. ETA=1:00:47
[32m[04/18 01:37:23 detectron2]: [0mInference done 3668/26446. 0.1559 s / img. ETA=1:00:37
[32m[04/18 01:37:28 detectron2]: [0mInference done 3703/26446. 0.1558 s / img. ETA=1:00:28
[32m[04/18 01:37:33 detectron2]: [0mInference done 3736/26446. 0.1557 s / img. ETA=1:00:21
[32m[04/18 01:37:38 detectron2]: [0mInference done 3768/26446. 0.1557 s / img. ETA=1:00:16
[32m[04/18 01:37:43 detectron2]: [0mInference done 3800/26446. 0.1557 s / img. ETA=1:00:10
[32m[04/18 01:37:48 detectron2]: [0mInference done 3834/26446. 0.1556 s / img. ETA=1:00:03
[32m[04/18 01:37:53 detectron2]: [0mInference done 3869/26446. 0.1554 s / img. ETA=0:59:54
[32m[04/18 01:37:58 detectron2]: [0mInference done 3900/26446. 0.1555 s / img. ETA=0:59:50
[32m[04/18 01:38:03 detectron2]: [0mInference done 3935/26446. 0.1554 s / img. ETA=0:59:42
[32m[04/18 01:38:08 detectron2]: [0mInference done 3967/26446. 0.1553 s / img. ETA=0:59:37
[32m[04/18 01:38:13 detectron2]: [0mInference done 4002/26446. 0.1552 s / img. ETA=0:59:29
[32m[04/18 01:38:18 detectron2]: [0mInference done 4035/26446. 0.1552 s / img. ETA=0:59:22
[32m[04/18 01:38:24 detectron2]: [0mInference done 4071/26446. 0.1550 s / img. ETA=0:59:13
[32m[04/18 01:38:29 detectron2]: [0mInference done 4105/26446. 0.1549 s / img. ETA=0:59:06
[32m[04/18 01:38:34 detectron2]: [0mInference done 4141/26446. 0.1548 s / img. ETA=0:58:56
[32m[04/18 01:38:39 detectron2]: [0mInference done 4175/26446. 0.1547 s / img. ETA=0:58:49
[32m[04/18 01:38:44 detectron2]: [0mInference done 4209/26446. 0.1546 s / img. ETA=0:58:42
[32m[04/18 01:38:49 detectron2]: [0mInference done 4244/26446. 0.1545 s / img. ETA=0:58:34
[32m[04/18 01:38:54 detectron2]: [0mInference done 4274/26446. 0.1546 s / img. ETA=0:58:31
[32m[04/18 01:38:59 detectron2]: [0mInference done 4307/26446. 0.1546 s / img. ETA=0:58:26
[32m[04/18 01:39:04 detectron2]: [0mInference done 4342/26446. 0.1545 s / img. ETA=0:58:18
[32m[04/18 01:39:09 detectron2]: [0mInference done 4376/26446. 0.1544 s / img. ETA=0:58:11
[32m[04/18 01:39:14 detectron2]: [0mInference done 4411/26446. 0.1543 s / img. ETA=0:58:03
[32m[04/18 01:39:20 detectron2]: [0mInference done 4444/26446. 0.1543 s / img. ETA=0:57:57
[32m[04/18 01:39:25 detectron2]: [0mInference done 4475/26446. 0.1543 s / img. ETA=0:57:53
[32m[04/18 01:39:30 detectron2]: [0mInference done 4510/26446. 0.1542 s / img. ETA=0:57:45
[32m[04/18 01:39:35 detectron2]: [0mInference done 4541/26446. 0.1543 s / img. ETA=0:57:42
[32m[04/18 01:39:40 detectron2]: [0mInference done 4575/26446. 0.1542 s / img. ETA=0:57:35
[32m[04/18 01:39:45 detectron2]: [0mInference done 4610/26446. 0.1541 s / img. ETA=0:57:27
[32m[04/18 01:39:50 detectron2]: [0mInference done 4644/26446. 0.1540 s / img. ETA=0:57:20
[32m[04/18 01:39:55 detectron2]: [0mInference done 4678/26446. 0.1540 s / img. ETA=0:57:14
[32m[04/18 01:40:00 detectron2]: [0mInference done 4709/26446. 0.1540 s / img. ETA=0:57:09
[32m[04/18 01:40:05 detectron2]: [0mInference done 4742/26446. 0.1540 s / img. ETA=0:57:04
[32m[04/18 01:40:10 detectron2]: [0mInference done 4776/26446. 0.1539 s / img. ETA=0:56:57
[32m[04/18 01:40:15 detectron2]: [0mInference done 4808/26446. 0.1539 s / img. ETA=0:56:52
[32m[04/18 01:40:20 detectron2]: [0mInference done 4842/26446. 0.1538 s / img. ETA=0:56:45
[32m[04/18 01:40:25 detectron2]: [0mInference done 4877/26446. 0.1538 s / img. ETA=0:56:38
[32m[04/18 01:40:31 detectron2]: [0mInference done 4911/26446. 0.1537 s / img. ETA=0:56:31
[32m[04/18 01:40:36 detectron2]: [0mInference done 4945/26446. 0.1537 s / img. ETA=0:56:25
[32m[04/18 01:40:41 detectron2]: [0mInference done 4977/26446. 0.1537 s / img. ETA=0:56:20
[32m[04/18 01:40:46 detectron2]: [0mInference done 5011/26446. 0.1536 s / img. ETA=0:56:13
[32m[04/18 01:40:51 detectron2]: [0mInference done 5044/26446. 0.1536 s / img. ETA=0:56:08
[32m[04/18 01:40:56 detectron2]: [0mInference done 5078/26446. 0.1535 s / img. ETA=0:56:01
[32m[04/18 01:41:01 detectron2]: [0mInference done 5108/26446. 0.1536 s / img. ETA=0:55:58
[32m[04/18 01:41:06 detectron2]: [0mInference done 5141/26446. 0.1536 s / img. ETA=0:55:52
[32m[04/18 01:41:11 detectron2]: [0mInference done 5172/26446. 0.1536 s / img. ETA=0:55:48
[32m[04/18 01:41:16 detectron2]: [0mInference done 5206/26446. 0.1535 s / img. ETA=0:55:41
[32m[04/18 01:41:21 detectron2]: [0mInference done 5241/26446. 0.1535 s / img. ETA=0:55:34
[32m[04/18 01:41:26 detectron2]: [0mInference done 5274/26446. 0.1535 s / img. ETA=0:55:29
[32m[04/18 01:41:32 detectron2]: [0mInference done 5306/26446. 0.1535 s / img. ETA=0:55:25
[32m[04/18 01:41:37 detectron2]: [0mInference done 5335/26446. 0.1536 s / img. ETA=0:55:22
[32m[04/18 01:41:42 detectron2]: [0mInference done 5367/26446. 0.1536 s / img. ETA=0:55:18
[32m[04/18 01:41:47 detectron2]: [0mInference done 5397/26446. 0.1537 s / img. ETA=0:55:14
[32m[04/18 01:41:52 detectron2]: [0mInference done 5428/26446. 0.1537 s / img. ETA=0:55:10
[32m[04/18 01:41:57 detectron2]: [0mInference done 5461/26446. 0.1537 s / img. ETA=0:55:04
[32m[04/18 01:42:02 detectron2]: [0mInference done 5493/26446. 0.1537 s / img. ETA=0:55:00
[32m[04/18 01:42:07 detectron2]: [0mInference done 5525/26446. 0.1537 s / img. ETA=0:54:55
[32m[04/18 01:42:12 detectron2]: [0mInference done 5555/26446. 0.1538 s / img. ETA=0:54:51
[32m[04/18 01:42:17 detectron2]: [0mInference done 5588/26446. 0.1537 s / img. ETA=0:54:46
[32m[04/18 01:42:22 detectron2]: [0mInference done 5622/26446. 0.1537 s / img. ETA=0:54:39
[32m[04/18 01:42:27 detectron2]: [0mInference done 5655/26446. 0.1537 s / img. ETA=0:54:33
[32m[04/18 01:42:33 detectron2]: [0mInference done 5687/26446. 0.1537 s / img. ETA=0:54:28
[32m[04/18 01:42:38 detectron2]: [0mInference done 5716/26446. 0.1537 s / img. ETA=0:54:25
[32m[04/18 01:42:43 detectron2]: [0mInference done 5747/26446. 0.1538 s / img. ETA=0:54:21
[32m[04/18 01:42:48 detectron2]: [0mInference done 5779/26446. 0.1538 s / img. ETA=0:54:16
[32m[04/18 01:42:53 detectron2]: [0mInference done 5811/26446. 0.1538 s / img. ETA=0:54:12
[32m[04/18 01:42:58 detectron2]: [0mInference done 5841/26446. 0.1539 s / img. ETA=0:54:08
[32m[04/18 01:43:03 detectron2]: [0mInference done 5872/26446. 0.1539 s / img. ETA=0:54:04
[32m[04/18 01:43:08 detectron2]: [0mInference done 5903/26446. 0.1539 s / img. ETA=0:53:59
[32m[04/18 01:43:13 detectron2]: [0mInference done 5937/26446. 0.1538 s / img. ETA=0:53:53
[32m[04/18 01:43:18 detectron2]: [0mInference done 5969/26446. 0.1539 s / img. ETA=0:53:48
[32m[04/18 01:43:23 detectron2]: [0mInference done 6000/26446. 0.1539 s / img. ETA=0:53:44
[32m[04/18 01:43:28 detectron2]: [0mInference done 6033/26446. 0.1539 s / img. ETA=0:53:38
[32m[04/18 01:43:33 detectron2]: [0mInference done 6066/26446. 0.1539 s / img. ETA=0:53:33
[32m[04/18 01:43:39 detectron2]: [0mInference done 6101/26446. 0.1538 s / img. ETA=0:53:26
[32m[04/18 01:43:44 detectron2]: [0mInference done 6132/26446. 0.1538 s / img. ETA=0:53:22
[32m[04/18 01:43:49 detectron2]: [0mInference done 6163/26446. 0.1539 s / img. ETA=0:53:17
[32m[04/18 01:43:54 detectron2]: [0mInference done 6194/26446. 0.1539 s / img. ETA=0:53:13
[32m[04/18 01:43:59 detectron2]: [0mInference done 6222/26446. 0.1540 s / img. ETA=0:53:11
[32m[04/18 01:44:04 detectron2]: [0mInference done 6250/26446. 0.1541 s / img. ETA=0:53:08
[32m[04/18 01:44:09 detectron2]: [0mInference done 6283/26446. 0.1541 s / img. ETA=0:53:03
[32m[04/18 01:44:14 detectron2]: [0mInference done 6316/26446. 0.1541 s / img. ETA=0:52:57
[32m[04/18 01:44:19 detectron2]: [0mInference done 6350/26446. 0.1540 s / img. ETA=0:52:51
[32m[04/18 01:44:24 detectron2]: [0mInference done 6381/26446. 0.1540 s / img. ETA=0:52:47
[32m[04/18 01:44:29 detectron2]: [0mInference done 6413/26446. 0.1541 s / img. ETA=0:52:42
[32m[04/18 01:44:34 detectron2]: [0mInference done 6447/26446. 0.1540 s / img. ETA=0:52:35
[32m[04/18 01:44:39 detectron2]: [0mInference done 6478/26446. 0.1540 s / img. ETA=0:52:31
[32m[04/18 01:44:44 detectron2]: [0mInference done 6511/26446. 0.1540 s / img. ETA=0:52:25
[32m[04/18 01:44:50 detectron2]: [0mInference done 6542/26446. 0.1540 s / img. ETA=0:52:21
[32m[04/18 01:44:55 detectron2]: [0mInference done 6574/26446. 0.1540 s / img. ETA=0:52:16
[32m[04/18 01:45:00 detectron2]: [0mInference done 6606/26446. 0.1540 s / img. ETA=0:52:11
[32m[04/18 01:45:05 detectron2]: [0mInference done 6639/26446. 0.1540 s / img. ETA=0:52:06
[32m[04/18 01:45:10 detectron2]: [0mInference done 6672/26446. 0.1540 s / img. ETA=0:52:00
[32m[04/18 01:45:15 detectron2]: [0mInference done 6705/26446. 0.1540 s / img. ETA=0:51:54
[32m[04/18 01:45:20 detectron2]: [0mInference done 6737/26446. 0.1540 s / img. ETA=0:51:49
[32m[04/18 01:45:25 detectron2]: [0mInference done 6769/26446. 0.1540 s / img. ETA=0:51:45
[32m[04/18 01:45:30 detectron2]: [0mInference done 6801/26446. 0.1540 s / img. ETA=0:51:39
[32m[04/18 01:45:35 detectron2]: [0mInference done 6834/26446. 0.1540 s / img. ETA=0:51:34
[32m[04/18 01:45:40 detectron2]: [0mInference done 6866/26446. 0.1540 s / img. ETA=0:51:29
[32m[04/18 01:45:46 detectron2]: [0mInference done 6900/26446. 0.1540 s / img. ETA=0:51:23
[32m[04/18 01:45:51 detectron2]: [0mInference done 6928/26446. 0.1541 s / img. ETA=0:51:20
[32m[04/18 01:45:56 detectron2]: [0mInference done 6959/26446. 0.1541 s / img. ETA=0:51:16
[32m[04/18 01:46:01 detectron2]: [0mInference done 6992/26446. 0.1541 s / img. ETA=0:51:11
[32m[04/18 01:46:06 detectron2]: [0mInference done 7024/26446. 0.1541 s / img. ETA=0:51:06
[32m[04/18 01:46:11 detectron2]: [0mInference done 7058/26446. 0.1540 s / img. ETA=0:51:00
[32m[04/18 01:46:16 detectron2]: [0mInference done 7090/26446. 0.1540 s / img. ETA=0:50:55
[32m[04/18 01:46:21 detectron2]: [0mInference done 7121/26446. 0.1541 s / img. ETA=0:50:50
[32m[04/18 01:46:26 detectron2]: [0mInference done 7153/26446. 0.1541 s / img. ETA=0:50:45
[32m[04/18 01:46:31 detectron2]: [0mInference done 7187/26446. 0.1540 s / img. ETA=0:50:39
[32m[04/18 01:46:36 detectron2]: [0mInference done 7219/26446. 0.1540 s / img. ETA=0:50:34
[32m[04/18 01:46:41 detectron2]: [0mInference done 7252/26446. 0.1540 s / img. ETA=0:50:29
[32m[04/18 01:46:47 detectron2]: [0mInference done 7282/26446. 0.1541 s / img. ETA=0:50:25
[32m[04/18 01:46:52 detectron2]: [0mInference done 7314/26446. 0.1541 s / img. ETA=0:50:20
[32m[04/18 01:46:57 detectron2]: [0mInference done 7345/26446. 0.1541 s / img. ETA=0:50:15
[32m[04/18 01:47:02 detectron2]: [0mInference done 7378/26446. 0.1541 s / img. ETA=0:50:10
[32m[04/18 01:47:07 detectron2]: [0mInference done 7412/26446. 0.1540 s / img. ETA=0:50:04
[32m[04/18 01:47:12 detectron2]: [0mInference done 7445/26446. 0.1540 s / img. ETA=0:49:58
[32m[04/18 01:47:17 detectron2]: [0mInference done 7477/26446. 0.1540 s / img. ETA=0:49:53
[32m[04/18 01:47:22 detectron2]: [0mInference done 7511/26446. 0.1540 s / img. ETA=0:49:47
[32m[04/18 01:47:27 detectron2]: [0mInference done 7546/26446. 0.1539 s / img. ETA=0:49:41
[32m[04/18 01:47:32 detectron2]: [0mInference done 7575/26446. 0.1540 s / img. ETA=0:49:37
[32m[04/18 01:47:37 detectron2]: [0mInference done 7610/26446. 0.1540 s / img. ETA=0:49:31
[32m[04/18 01:47:43 detectron2]: [0mInference done 7643/26446. 0.1540 s / img. ETA=0:49:26
[32m[04/18 01:47:48 detectron2]: [0mInference done 7675/26446. 0.1540 s / img. ETA=0:49:21
[32m[04/18 01:47:53 detectron2]: [0mInference done 7710/26446. 0.1539 s / img. ETA=0:49:14
[32m[04/18 01:47:58 detectron2]: [0mInference done 7744/26446. 0.1539 s / img. ETA=0:49:08
[32m[04/18 01:48:03 detectron2]: [0mInference done 7778/26446. 0.1538 s / img. ETA=0:49:02
[32m[04/18 01:48:08 detectron2]: [0mInference done 7808/26446. 0.1539 s / img. ETA=0:48:58
[32m[04/18 01:48:13 detectron2]: [0mInference done 7841/26446. 0.1538 s / img. ETA=0:48:52
[32m[04/18 01:48:18 detectron2]: [0mInference done 7872/26446. 0.1539 s / img. ETA=0:48:48
[32m[04/18 01:48:23 detectron2]: [0mInference done 7906/26446. 0.1538 s / img. ETA=0:48:42
[32m[04/18 01:48:28 detectron2]: [0mInference done 7941/26446. 0.1538 s / img. ETA=0:48:35
[32m[04/18 01:48:33 detectron2]: [0mInference done 7975/26446. 0.1538 s / img. ETA=0:48:29
[32m[04/18 01:48:39 detectron2]: [0mInference done 8009/26446. 0.1537 s / img. ETA=0:48:24
[32m[04/18 01:48:44 detectron2]: [0mInference done 8042/26446. 0.1537 s / img. ETA=0:48:18
[32m[04/18 01:48:49 detectron2]: [0mInference done 8075/26446. 0.1537 s / img. ETA=0:48:13
[32m[04/18 01:48:54 detectron2]: [0mInference done 8109/26446. 0.1537 s / img. ETA=0:48:07
[32m[04/18 01:48:59 detectron2]: [0mInference done 8139/26446. 0.1537 s / img. ETA=0:48:03
[32m[04/18 01:49:04 detectron2]: [0mInference done 8172/26446. 0.1537 s / img. ETA=0:47:57
[32m[04/18 01:49:09 detectron2]: [0mInference done 8203/26446. 0.1537 s / img. ETA=0:47:53
[32m[04/18 01:49:14 detectron2]: [0mInference done 8235/26446. 0.1537 s / img. ETA=0:47:48
[32m[04/18 01:49:19 detectron2]: [0mInference done 8270/26446. 0.1537 s / img. ETA=0:47:42
[32m[04/18 01:49:24 detectron2]: [0mInference done 8304/26446. 0.1536 s / img. ETA=0:47:36
[32m[04/18 01:49:29 detectron2]: [0mInference done 8336/26446. 0.1536 s / img. ETA=0:47:31
[32m[04/18 01:49:35 detectron2]: [0mInference done 8372/26446. 0.1536 s / img. ETA=0:47:24
[32m[04/18 01:49:40 detectron2]: [0mInference done 8406/26446. 0.1536 s / img. ETA=0:47:18
[32m[04/18 01:49:45 detectron2]: [0mInference done 8442/26446. 0.1535 s / img. ETA=0:47:11
[32m[04/18 01:49:50 detectron2]: [0mInference done 8476/26446. 0.1535 s / img. ETA=0:47:05
[32m[04/18 01:49:55 detectron2]: [0mInference done 8511/26446. 0.1534 s / img. ETA=0:46:59
[32m[04/18 01:50:00 detectron2]: [0mInference done 8546/26446. 0.1534 s / img. ETA=0:46:52
[32m[04/18 01:50:05 detectron2]: [0mInference done 8579/26446. 0.1533 s / img. ETA=0:46:47
[32m[04/18 01:50:10 detectron2]: [0mInference done 8615/26446. 0.1533 s / img. ETA=0:46:40
[32m[04/18 01:50:15 detectron2]: [0mInference done 8650/26446. 0.1532 s / img. ETA=0:46:34
[32m[04/18 01:50:20 detectron2]: [0mInference done 8684/26446. 0.1532 s / img. ETA=0:46:28
[32m[04/18 01:50:25 detectron2]: [0mInference done 8715/26446. 0.1532 s / img. ETA=0:46:23
[32m[04/18 01:50:31 detectron2]: [0mInference done 8749/26446. 0.1532 s / img. ETA=0:46:18
[32m[04/18 01:50:36 detectron2]: [0mInference done 8784/26446. 0.1532 s / img. ETA=0:46:11
[32m[04/18 01:50:41 detectron2]: [0mInference done 8819/26446. 0.1531 s / img. ETA=0:46:05
[32m[04/18 01:50:46 detectron2]: [0mInference done 8854/26446. 0.1531 s / img. ETA=0:45:59
[32m[04/18 01:50:51 detectron2]: [0mInference done 8889/26446. 0.1530 s / img. ETA=0:45:53
[32m[04/18 01:50:56 detectron2]: [0mInference done 8925/26446. 0.1530 s / img. ETA=0:45:46
[32m[04/18 01:51:01 detectron2]: [0mInference done 8961/26446. 0.1529 s / img. ETA=0:45:39
[32m[04/18 01:51:06 detectron2]: [0mInference done 8995/26446. 0.1529 s / img. ETA=0:45:33
[32m[04/18 01:51:11 detectron2]: [0mInference done 9030/26446. 0.1528 s / img. ETA=0:45:27
[32m[04/18 01:51:16 detectron2]: [0mInference done 9065/26446. 0.1528 s / img. ETA=0:45:21
[32m[04/18 01:51:21 detectron2]: [0mInference done 9102/26446. 0.1527 s / img. ETA=0:45:14
[32m[04/18 01:51:27 detectron2]: [0mInference done 9139/26446. 0.1526 s / img. ETA=0:45:07
[32m[04/18 01:51:32 detectron2]: [0mInference done 9174/26446. 0.1526 s / img. ETA=0:45:01
[32m[04/18 01:51:37 detectron2]: [0mInference done 9209/26446. 0.1526 s / img. ETA=0:44:54
[32m[04/18 01:51:42 detectron2]: [0mInference done 9244/26446. 0.1525 s / img. ETA=0:44:48
[32m[04/18 01:51:47 detectron2]: [0mInference done 9278/26446. 0.1525 s / img. ETA=0:44:42
[32m[04/18 01:51:52 detectron2]: [0mInference done 9314/26446. 0.1524 s / img. ETA=0:44:36
[32m[04/18 01:51:57 detectron2]: [0mInference done 9348/26446. 0.1524 s / img. ETA=0:44:30
[32m[04/18 01:52:02 detectron2]: [0mInference done 9383/26446. 0.1524 s / img. ETA=0:44:24
[32m[04/18 01:52:07 detectron2]: [0mInference done 9417/26446. 0.1523 s / img. ETA=0:44:18
[32m[04/18 01:52:12 detectron2]: [0mInference done 9452/26446. 0.1523 s / img. ETA=0:44:12
[32m[04/18 01:52:17 detectron2]: [0mInference done 9491/26446. 0.1522 s / img. ETA=0:44:04
[32m[04/18 01:52:22 detectron2]: [0mInference done 9527/26446. 0.1521 s / img. ETA=0:43:57
[32m[04/18 01:52:27 detectron2]: [0mInference done 9560/26446. 0.1521 s / img. ETA=0:43:52
[32m[04/18 01:52:33 detectron2]: [0mInference done 9593/26446. 0.1521 s / img. ETA=0:43:47
[32m[04/18 01:52:38 detectron2]: [0mInference done 9628/26446. 0.1521 s / img. ETA=0:43:41
[32m[04/18 01:52:43 detectron2]: [0mInference done 9663/26446. 0.1520 s / img. ETA=0:43:35
[32m[04/18 01:52:48 detectron2]: [0mInference done 9698/26446. 0.1520 s / img. ETA=0:43:28
[32m[04/18 01:52:53 detectron2]: [0mInference done 9733/26446. 0.1520 s / img. ETA=0:43:22
[32m[04/18 01:52:58 detectron2]: [0mInference done 9767/26446. 0.1519 s / img. ETA=0:43:16
[32m[04/18 01:53:03 detectron2]: [0mInference done 9800/26446. 0.1519 s / img. ETA=0:43:11
[32m[04/18 01:53:08 detectron2]: [0mInference done 9834/26446. 0.1519 s / img. ETA=0:43:06
[32m[04/18 01:53:13 detectron2]: [0mInference done 9870/26446. 0.1518 s / img. ETA=0:42:59
[32m[04/18 01:53:18 detectron2]: [0mInference done 9906/26446. 0.1518 s / img. ETA=0:42:53
[32m[04/18 01:53:23 detectron2]: [0mInference done 9940/26446. 0.1518 s / img. ETA=0:42:47
[32m[04/18 01:53:28 detectron2]: [0mInference done 9975/26446. 0.1517 s / img. ETA=0:42:41
[32m[04/18 01:53:33 detectron2]: [0mInference done 10011/26446. 0.1517 s / img. ETA=0:42:34
[32m[04/18 01:53:38 detectron2]: [0mInference done 10047/26446. 0.1516 s / img. ETA=0:42:28
[32m[04/18 01:53:43 detectron2]: [0mInference done 10081/26446. 0.1516 s / img. ETA=0:42:22
[32m[04/18 01:53:48 detectron2]: [0mInference done 10115/26446. 0.1516 s / img. ETA=0:42:16
[32m[04/18 01:53:53 detectron2]: [0mInference done 10149/26446. 0.1516 s / img. ETA=0:42:11
[32m[04/18 01:53:59 detectron2]: [0mInference done 10183/26446. 0.1515 s / img. ETA=0:42:05
[32m[04/18 01:54:04 detectron2]: [0mInference done 10217/26446. 0.1515 s / img. ETA=0:42:00
[32m[04/18 01:54:09 detectron2]: [0mInference done 10250/26446. 0.1515 s / img. ETA=0:41:54
[32m[04/18 01:54:14 detectron2]: [0mInference done 10283/26446. 0.1515 s / img. ETA=0:41:49
[32m[04/18 01:54:19 detectron2]: [0mInference done 10320/26446. 0.1514 s / img. ETA=0:41:42
[32m[04/18 01:54:24 detectron2]: [0mInference done 10354/26446. 0.1514 s / img. ETA=0:41:37
[32m[04/18 01:54:29 detectron2]: [0mInference done 10391/26446. 0.1513 s / img. ETA=0:41:30
[32m[04/18 01:54:34 detectron2]: [0mInference done 10426/26446. 0.1513 s / img. ETA=0:41:24
[32m[04/18 01:54:39 detectron2]: [0mInference done 10461/26446. 0.1513 s / img. ETA=0:41:18
[32m[04/18 01:54:44 detectron2]: [0mInference done 10494/26446. 0.1513 s / img. ETA=0:41:12
[32m[04/18 01:54:49 detectron2]: [0mInference done 10527/26446. 0.1512 s / img. ETA=0:41:07
[32m[04/18 01:54:54 detectron2]: [0mInference done 10559/26446. 0.1513 s / img. ETA=0:41:02
[32m[04/18 01:54:59 detectron2]: [0mInference done 10592/26446. 0.1513 s / img. ETA=0:40:57
[32m[04/18 01:55:04 detectron2]: [0mInference done 10626/26446. 0.1512 s / img. ETA=0:40:52
[32m[04/18 01:55:09 detectron2]: [0mInference done 10661/26446. 0.1512 s / img. ETA=0:40:46
[32m[04/18 01:55:14 detectron2]: [0mInference done 10696/26446. 0.1512 s / img. ETA=0:40:40
[32m[04/18 01:55:19 detectron2]: [0mInference done 10731/26446. 0.1511 s / img. ETA=0:40:34
[32m[04/18 01:55:24 detectron2]: [0mInference done 10764/26446. 0.1511 s / img. ETA=0:40:29
[32m[04/18 01:55:29 detectron2]: [0mInference done 10798/26446. 0.1511 s / img. ETA=0:40:23
[32m[04/18 01:55:34 detectron2]: [0mInference done 10830/26446. 0.1511 s / img. ETA=0:40:18
[32m[04/18 01:55:40 detectron2]: [0mInference done 10865/26446. 0.1511 s / img. ETA=0:40:12
[32m[04/18 01:55:45 detectron2]: [0mInference done 10899/26446. 0.1511 s / img. ETA=0:40:07
[32m[04/18 01:55:50 detectron2]: [0mInference done 10935/26446. 0.1510 s / img. ETA=0:40:01
[32m[04/18 01:55:55 detectron2]: [0mInference done 10970/26446. 0.1510 s / img. ETA=0:39:55
[32m[04/18 01:56:00 detectron2]: [0mInference done 11002/26446. 0.1510 s / img. ETA=0:39:50
[32m[04/18 01:56:05 detectron2]: [0mInference done 11034/26446. 0.1510 s / img. ETA=0:39:45
[32m[04/18 01:56:10 detectron2]: [0mInference done 11064/26446. 0.1511 s / img. ETA=0:39:41
[32m[04/18 01:56:15 detectron2]: [0mInference done 11093/26446. 0.1511 s / img. ETA=0:39:38
[32m[04/18 01:56:20 detectron2]: [0mInference done 11126/26446. 0.1511 s / img. ETA=0:39:33
[32m[04/18 01:56:25 detectron2]: [0mInference done 11157/26446. 0.1511 s / img. ETA=0:39:28
[32m[04/18 01:56:31 detectron2]: [0mInference done 11187/26446. 0.1512 s / img. ETA=0:39:24
[32m[04/18 01:56:36 detectron2]: [0mInference done 11221/26446. 0.1512 s / img. ETA=0:39:18
[32m[04/18 01:56:41 detectron2]: [0mInference done 11252/26446. 0.1512 s / img. ETA=0:39:14
[32m[04/18 01:56:46 detectron2]: [0mInference done 11283/26446. 0.1512 s / img. ETA=0:39:09
[32m[04/18 01:56:51 detectron2]: [0mInference done 11315/26446. 0.1512 s / img. ETA=0:39:05
[32m[04/18 01:56:56 detectron2]: [0mInference done 11347/26446. 0.1512 s / img. ETA=0:39:00
[32m[04/18 01:57:01 detectron2]: [0mInference done 11380/26446. 0.1512 s / img. ETA=0:38:55
[32m[04/18 01:57:06 detectron2]: [0mInference done 11414/26446. 0.1512 s / img. ETA=0:38:49
[32m[04/18 01:57:11 detectron2]: [0mInference done 11445/26446. 0.1512 s / img. ETA=0:38:45
[32m[04/18 01:57:16 detectron2]: [0mInference done 11476/26446. 0.1513 s / img. ETA=0:38:40
[32m[04/18 01:57:21 detectron2]: [0mInference done 11509/26446. 0.1513 s / img. ETA=0:38:35
[32m[04/18 01:57:26 detectron2]: [0mInference done 11544/26446. 0.1512 s / img. ETA=0:38:29
[32m[04/18 01:57:31 detectron2]: [0mInference done 11574/26446. 0.1513 s / img. ETA=0:38:25
[32m[04/18 01:57:36 detectron2]: [0mInference done 11604/26446. 0.1513 s / img. ETA=0:38:21
[32m[04/18 01:57:41 detectron2]: [0mInference done 11637/26446. 0.1513 s / img. ETA=0:38:16
[32m[04/18 01:57:47 detectron2]: [0mInference done 11668/26446. 0.1513 s / img. ETA=0:38:11
[32m[04/18 01:57:52 detectron2]: [0mInference done 11700/26446. 0.1513 s / img. ETA=0:38:06
[32m[04/18 01:57:57 detectron2]: [0mInference done 11735/26446. 0.1513 s / img. ETA=0:38:01
[32m[04/18 01:58:02 detectron2]: [0mInference done 11768/26446. 0.1513 s / img. ETA=0:37:55
[32m[04/18 01:58:07 detectron2]: [0mInference done 11799/26446. 0.1513 s / img. ETA=0:37:51
[32m[04/18 01:58:12 detectron2]: [0mInference done 11834/26446. 0.1513 s / img. ETA=0:37:45
[32m[04/18 01:58:17 detectron2]: [0mInference done 11867/26446. 0.1513 s / img. ETA=0:37:40
[32m[04/18 01:58:22 detectron2]: [0mInference done 11900/26446. 0.1513 s / img. ETA=0:37:35
[32m[04/18 01:58:27 detectron2]: [0mInference done 11933/26446. 0.1513 s / img. ETA=0:37:30
[32m[04/18 01:58:32 detectron2]: [0mInference done 11965/26446. 0.1513 s / img. ETA=0:37:25
[32m[04/18 01:58:38 detectron2]: [0mInference done 11998/26446. 0.1513 s / img. ETA=0:37:20
[32m[04/18 01:58:43 detectron2]: [0mInference done 12031/26446. 0.1513 s / img. ETA=0:37:15
[32m[04/18 01:58:48 detectron2]: [0mInference done 12065/26446. 0.1513 s / img. ETA=0:37:09
[32m[04/18 01:58:53 detectron2]: [0mInference done 12097/26446. 0.1513 s / img. ETA=0:37:04
[32m[04/18 01:58:58 detectron2]: [0mInference done 12130/26446. 0.1513 s / img. ETA=0:36:59
[32m[04/18 01:59:03 detectron2]: [0mInference done 12163/26446. 0.1513 s / img. ETA=0:36:54
[32m[04/18 01:59:08 detectron2]: [0mInference done 12195/26446. 0.1513 s / img. ETA=0:36:49
[32m[04/18 01:59:13 detectron2]: [0mInference done 12225/26446. 0.1513 s / img. ETA=0:36:45
[32m[04/18 01:59:18 detectron2]: [0mInference done 12256/26446. 0.1514 s / img. ETA=0:36:41
[32m[04/18 01:59:23 detectron2]: [0mInference done 12290/26446. 0.1513 s / img. ETA=0:36:35
[32m[04/18 01:59:28 detectron2]: [0mInference done 12323/26446. 0.1513 s / img. ETA=0:36:30
[32m[04/18 01:59:33 detectron2]: [0mInference done 12353/26446. 0.1514 s / img. ETA=0:36:26
[32m[04/18 01:59:39 detectron2]: [0mInference done 12385/26446. 0.1514 s / img. ETA=0:36:21
[32m[04/18 01:59:44 detectron2]: [0mInference done 12413/26446. 0.1514 s / img. ETA=0:36:18
[32m[04/18 01:59:49 detectron2]: [0mInference done 12443/26446. 0.1515 s / img. ETA=0:36:13
[32m[04/18 01:59:54 detectron2]: [0mInference done 12476/26446. 0.1515 s / img. ETA=0:36:08
[32m[04/18 01:59:59 detectron2]: [0mInference done 12508/26446. 0.1515 s / img. ETA=0:36:03
[32m[04/18 02:00:04 detectron2]: [0mInference done 12542/26446. 0.1515 s / img. ETA=0:35:58
[32m[04/18 02:00:09 detectron2]: [0mInference done 12577/26446. 0.1514 s / img. ETA=0:35:52
[32m[04/18 02:00:14 detectron2]: [0mInference done 12611/26446. 0.1514 s / img. ETA=0:35:46
[32m[04/18 02:00:19 detectron2]: [0mInference done 12645/26446. 0.1514 s / img. ETA=0:35:41
[32m[04/18 02:00:24 detectron2]: [0mInference done 12679/26446. 0.1514 s / img. ETA=0:35:35
[32m[04/18 02:00:29 detectron2]: [0mInference done 12713/26446. 0.1514 s / img. ETA=0:35:30
[32m[04/18 02:00:34 detectron2]: [0mInference done 12745/26446. 0.1514 s / img. ETA=0:35:25
[32m[04/18 02:00:39 detectron2]: [0mInference done 12779/26446. 0.1514 s / img. ETA=0:35:20
[32m[04/18 02:00:45 detectron2]: [0mInference done 12811/26446. 0.1514 s / img. ETA=0:35:15
[32m[04/18 02:00:50 detectron2]: [0mInference done 12846/26446. 0.1514 s / img. ETA=0:35:09
[32m[04/18 02:00:55 detectron2]: [0mInference done 12878/26446. 0.1514 s / img. ETA=0:35:04
[32m[04/18 02:01:00 detectron2]: [0mInference done 12909/26446. 0.1514 s / img. ETA=0:35:00
[32m[04/18 02:01:05 detectron2]: [0mInference done 12940/26446. 0.1514 s / img. ETA=0:34:55
[32m[04/18 02:01:10 detectron2]: [0mInference done 12971/26446. 0.1514 s / img. ETA=0:34:51
[32m[04/18 02:01:15 detectron2]: [0mInference done 13003/26446. 0.1514 s / img. ETA=0:34:46
[32m[04/18 02:01:20 detectron2]: [0mInference done 13036/26446. 0.1514 s / img. ETA=0:34:41
[32m[04/18 02:01:25 detectron2]: [0mInference done 13067/26446. 0.1515 s / img. ETA=0:34:36
[32m[04/18 02:01:30 detectron2]: [0mInference done 13097/26446. 0.1515 s / img. ETA=0:34:32
[32m[04/18 02:01:35 detectron2]: [0mInference done 13128/26446. 0.1515 s / img. ETA=0:34:27
[32m[04/18 02:01:40 detectron2]: [0mInference done 13159/26446. 0.1515 s / img. ETA=0:34:23
[32m[04/18 02:01:45 detectron2]: [0mInference done 13191/26446. 0.1515 s / img. ETA=0:34:18
[32m[04/18 02:01:50 detectron2]: [0mInference done 13221/26446. 0.1516 s / img. ETA=0:34:13
[32m[04/18 02:01:55 detectron2]: [0mInference done 13254/26446. 0.1516 s / img. ETA=0:34:08
[32m[04/18 02:02:01 detectron2]: [0mInference done 13286/26446. 0.1516 s / img. ETA=0:34:03
[32m[04/18 02:02:06 detectron2]: [0mInference done 13317/26446. 0.1516 s / img. ETA=0:33:59
[32m[04/18 02:02:11 detectron2]: [0mInference done 13350/26446. 0.1516 s / img. ETA=0:33:54
[32m[04/18 02:02:16 detectron2]: [0mInference done 13384/26446. 0.1516 s / img. ETA=0:33:48
[32m[04/18 02:02:21 detectron2]: [0mInference done 13415/26446. 0.1516 s / img. ETA=0:33:44
[32m[04/18 02:02:26 detectron2]: [0mInference done 13444/26446. 0.1516 s / img. ETA=0:33:40
[32m[04/18 02:02:31 detectron2]: [0mInference done 13477/26446. 0.1516 s / img. ETA=0:33:35
[32m[04/18 02:02:36 detectron2]: [0mInference done 13512/26446. 0.1516 s / img. ETA=0:33:29
[32m[04/18 02:02:41 detectron2]: [0mInference done 13547/26446. 0.1516 s / img. ETA=0:33:23
[32m[04/18 02:02:46 detectron2]: [0mInference done 13578/26446. 0.1516 s / img. ETA=0:33:19
[32m[04/18 02:02:51 detectron2]: [0mInference done 13611/26446. 0.1516 s / img. ETA=0:33:13
[32m[04/18 02:02:57 detectron2]: [0mInference done 13643/26446. 0.1516 s / img. ETA=0:33:09
[32m[04/18 02:03:02 detectron2]: [0mInference done 13677/26446. 0.1516 s / img. ETA=0:33:03
[32m[04/18 02:03:07 detectron2]: [0mInference done 13710/26446. 0.1516 s / img. ETA=0:32:58
[32m[04/18 02:03:12 detectron2]: [0mInference done 13742/26446. 0.1516 s / img. ETA=0:32:53
[32m[04/18 02:03:17 detectron2]: [0mInference done 13777/26446. 0.1516 s / img. ETA=0:32:47
[32m[04/18 02:03:22 detectron2]: [0mInference done 13810/26446. 0.1516 s / img. ETA=0:32:42
[32m[04/18 02:03:27 detectron2]: [0mInference done 13841/26446. 0.1516 s / img. ETA=0:32:37
[32m[04/18 02:03:32 detectron2]: [0mInference done 13875/26446. 0.1516 s / img. ETA=0:32:32
[32m[04/18 02:03:37 detectron2]: [0mInference done 13908/26446. 0.1516 s / img. ETA=0:32:27
[32m[04/18 02:03:42 detectron2]: [0mInference done 13941/26446. 0.1516 s / img. ETA=0:32:22
[32m[04/18 02:03:47 detectron2]: [0mInference done 13973/26446. 0.1516 s / img. ETA=0:32:17
[32m[04/18 02:03:52 detectron2]: [0mInference done 14003/26446. 0.1516 s / img. ETA=0:32:13
[32m[04/18 02:03:58 detectron2]: [0mInference done 14034/26446. 0.1516 s / img. ETA=0:32:08
[32m[04/18 02:04:03 detectron2]: [0mInference done 14066/26446. 0.1516 s / img. ETA=0:32:03
[32m[04/18 02:04:08 detectron2]: [0mInference done 14095/26446. 0.1517 s / img. ETA=0:31:59
[32m[04/18 02:04:13 detectron2]: [0mInference done 14127/26446. 0.1517 s / img. ETA=0:31:54
[32m[04/18 02:04:18 detectron2]: [0mInference done 14158/26446. 0.1517 s / img. ETA=0:31:50
[32m[04/18 02:04:23 detectron2]: [0mInference done 14188/26446. 0.1517 s / img. ETA=0:31:45
[32m[04/18 02:04:28 detectron2]: [0mInference done 14219/26446. 0.1518 s / img. ETA=0:31:41
[32m[04/18 02:04:33 detectron2]: [0mInference done 14250/26446. 0.1518 s / img. ETA=0:31:36
[32m[04/18 02:04:38 detectron2]: [0mInference done 14282/26446. 0.1518 s / img. ETA=0:31:31
[32m[04/18 02:04:43 detectron2]: [0mInference done 14313/26446. 0.1518 s / img. ETA=0:31:27
[32m[04/18 02:04:49 detectron2]: [0mInference done 14343/26446. 0.1518 s / img. ETA=0:31:23
[32m[04/18 02:04:54 detectron2]: [0mInference done 14373/26446. 0.1519 s / img. ETA=0:31:18
[32m[04/18 02:04:59 detectron2]: [0mInference done 14399/26446. 0.1519 s / img. ETA=0:31:15
[32m[04/18 02:05:04 detectron2]: [0mInference done 14430/26446. 0.1519 s / img. ETA=0:31:10
[32m[04/18 02:05:09 detectron2]: [0mInference done 14460/26446. 0.1520 s / img. ETA=0:31:06
[32m[04/18 02:05:14 detectron2]: [0mInference done 14492/26446. 0.1520 s / img. ETA=0:31:01
[32m[04/18 02:05:19 detectron2]: [0mInference done 14525/26446. 0.1520 s / img. ETA=0:30:56
[32m[04/18 02:05:24 detectron2]: [0mInference done 14556/26446. 0.1520 s / img. ETA=0:30:51
[32m[04/18 02:05:29 detectron2]: [0mInference done 14588/26446. 0.1520 s / img. ETA=0:30:46
[32m[04/18 02:05:34 detectron2]: [0mInference done 14620/26446. 0.1520 s / img. ETA=0:30:42
[32m[04/18 02:05:39 detectron2]: [0mInference done 14653/26446. 0.1520 s / img. ETA=0:30:36
[32m[04/18 02:05:44 detectron2]: [0mInference done 14684/26446. 0.1520 s / img. ETA=0:30:32
[32m[04/18 02:05:50 detectron2]: [0mInference done 14719/26446. 0.1520 s / img. ETA=0:30:26
[32m[04/18 02:05:55 detectron2]: [0mInference done 14749/26446. 0.1520 s / img. ETA=0:30:22
[32m[04/18 02:06:00 detectron2]: [0mInference done 14779/26446. 0.1521 s / img. ETA=0:30:17
[32m[04/18 02:06:05 detectron2]: [0mInference done 14810/26446. 0.1521 s / img. ETA=0:30:13
[32m[04/18 02:06:10 detectron2]: [0mInference done 14843/26446. 0.1521 s / img. ETA=0:30:07
[32m[04/18 02:06:15 detectron2]: [0mInference done 14876/26446. 0.1521 s / img. ETA=0:30:02
[32m[04/18 02:06:20 detectron2]: [0mInference done 14905/26446. 0.1521 s / img. ETA=0:29:58
[32m[04/18 02:06:25 detectron2]: [0mInference done 14939/26446. 0.1521 s / img. ETA=0:29:53
[32m[04/18 02:06:30 detectron2]: [0mInference done 14970/26446. 0.1521 s / img. ETA=0:29:48
[32m[04/18 02:06:35 detectron2]: [0mInference done 15002/26446. 0.1521 s / img. ETA=0:29:43
[32m[04/18 02:06:40 detectron2]: [0mInference done 15036/26446. 0.1521 s / img. ETA=0:29:38
[32m[04/18 02:06:45 detectron2]: [0mInference done 15068/26446. 0.1521 s / img. ETA=0:29:33
[32m[04/18 02:06:51 detectron2]: [0mInference done 15101/26446. 0.1521 s / img. ETA=0:29:28
[32m[04/18 02:06:56 detectron2]: [0mInference done 15132/26446. 0.1521 s / img. ETA=0:29:23
[32m[04/18 02:07:01 detectron2]: [0mInference done 15165/26446. 0.1521 s / img. ETA=0:29:18
[32m[04/18 02:07:06 detectron2]: [0mInference done 15199/26446. 0.1521 s / img. ETA=0:29:12
[32m[04/18 02:07:11 detectron2]: [0mInference done 15230/26446. 0.1521 s / img. ETA=0:29:08
[32m[04/18 02:07:16 detectron2]: [0mInference done 15261/26446. 0.1521 s / img. ETA=0:29:03
[32m[04/18 02:07:21 detectron2]: [0mInference done 15292/26446. 0.1521 s / img. ETA=0:28:58
[32m[04/18 02:07:26 detectron2]: [0mInference done 15322/26446. 0.1522 s / img. ETA=0:28:54
[32m[04/18 02:07:31 detectron2]: [0mInference done 15354/26446. 0.1522 s / img. ETA=0:28:49
[32m[04/18 02:07:36 detectron2]: [0mInference done 15386/26446. 0.1522 s / img. ETA=0:28:44
[32m[04/18 02:07:41 detectron2]: [0mInference done 15417/26446. 0.1522 s / img. ETA=0:28:40
[32m[04/18 02:07:47 detectron2]: [0mInference done 15450/26446. 0.1522 s / img. ETA=0:28:34
[32m[04/18 02:07:52 detectron2]: [0mInference done 15482/26446. 0.1522 s / img. ETA=0:28:29
[32m[04/18 02:07:57 detectron2]: [0mInference done 15516/26446. 0.1522 s / img. ETA=0:28:24
[32m[04/18 02:08:02 detectron2]: [0mInference done 15547/26446. 0.1522 s / img. ETA=0:28:19
[32m[04/18 02:08:07 detectron2]: [0mInference done 15577/26446. 0.1522 s / img. ETA=0:28:15
[32m[04/18 02:08:12 detectron2]: [0mInference done 15609/26446. 0.1522 s / img. ETA=0:28:10
[32m[04/18 02:08:17 detectron2]: [0mInference done 15641/26446. 0.1522 s / img. ETA=0:28:05
[32m[04/18 02:08:22 detectron2]: [0mInference done 15671/26446. 0.1523 s / img. ETA=0:28:01
[32m[04/18 02:08:27 detectron2]: [0mInference done 15705/26446. 0.1523 s / img. ETA=0:27:55
[32m[04/18 02:08:32 detectron2]: [0mInference done 15738/26446. 0.1523 s / img. ETA=0:27:50
[32m[04/18 02:08:37 detectron2]: [0mInference done 15771/26446. 0.1523 s / img. ETA=0:27:45
[32m[04/18 02:08:43 detectron2]: [0mInference done 15804/26446. 0.1522 s / img. ETA=0:27:40
[32m[04/18 02:08:48 detectron2]: [0mInference done 15836/26446. 0.1522 s / img. ETA=0:27:35
[32m[04/18 02:08:53 detectron2]: [0mInference done 15868/26446. 0.1522 s / img. ETA=0:27:30
[32m[04/18 02:08:58 detectron2]: [0mInference done 15901/26446. 0.1522 s / img. ETA=0:27:25
[32m[04/18 02:09:03 detectron2]: [0mInference done 15934/26446. 0.1522 s / img. ETA=0:27:19
[32m[04/18 02:09:08 detectron2]: [0mInference done 15967/26446. 0.1522 s / img. ETA=0:27:14
[32m[04/18 02:09:13 detectron2]: [0mInference done 15998/26446. 0.1523 s / img. ETA=0:27:10
[32m[04/18 02:09:18 detectron2]: [0mInference done 16032/26446. 0.1522 s / img. ETA=0:27:04
[32m[04/18 02:09:23 detectron2]: [0mInference done 16064/26446. 0.1522 s / img. ETA=0:26:59
[32m[04/18 02:09:28 detectron2]: [0mInference done 16098/26446. 0.1522 s / img. ETA=0:26:54
[32m[04/18 02:09:33 detectron2]: [0mInference done 16127/26446. 0.1523 s / img. ETA=0:26:50
[32m[04/18 02:09:38 detectron2]: [0mInference done 16163/26446. 0.1522 s / img. ETA=0:26:44
[32m[04/18 02:09:43 detectron2]: [0mInference done 16194/26446. 0.1523 s / img. ETA=0:26:39
[32m[04/18 02:09:49 detectron2]: [0mInference done 16226/26446. 0.1523 s / img. ETA=0:26:34
[32m[04/18 02:09:54 detectron2]: [0mInference done 16257/26446. 0.1523 s / img. ETA=0:26:29
[32m[04/18 02:09:59 detectron2]: [0mInference done 16292/26446. 0.1522 s / img. ETA=0:26:24
[32m[04/18 02:10:04 detectron2]: [0mInference done 16325/26446. 0.1522 s / img. ETA=0:26:18
[32m[04/18 02:10:09 detectron2]: [0mInference done 16354/26446. 0.1523 s / img. ETA=0:26:14
[32m[04/18 02:10:14 detectron2]: [0mInference done 16386/26446. 0.1523 s / img. ETA=0:26:09
[32m[04/18 02:10:19 detectron2]: [0mInference done 16418/26446. 0.1523 s / img. ETA=0:26:04
[32m[04/18 02:10:24 detectron2]: [0mInference done 16451/26446. 0.1523 s / img. ETA=0:25:59
[32m[04/18 02:10:29 detectron2]: [0mInference done 16485/26446. 0.1523 s / img. ETA=0:25:54
[32m[04/18 02:10:34 detectron2]: [0mInference done 16516/26446. 0.1523 s / img. ETA=0:25:49
[32m[04/18 02:10:39 detectron2]: [0mInference done 16549/26446. 0.1523 s / img. ETA=0:25:44
[32m[04/18 02:10:44 detectron2]: [0mInference done 16581/26446. 0.1523 s / img. ETA=0:25:39
[32m[04/18 02:10:49 detectron2]: [0mInference done 16614/26446. 0.1523 s / img. ETA=0:25:34
[32m[04/18 02:10:55 detectron2]: [0mInference done 16646/26446. 0.1523 s / img. ETA=0:25:29
[32m[04/18 02:11:00 detectron2]: [0mInference done 16677/26446. 0.1523 s / img. ETA=0:25:24
[32m[04/18 02:11:05 detectron2]: [0mInference done 16709/26446. 0.1523 s / img. ETA=0:25:19
[32m[04/18 02:11:10 detectron2]: [0mInference done 16740/26446. 0.1523 s / img. ETA=0:25:14
[32m[04/18 02:11:15 detectron2]: [0mInference done 16771/26446. 0.1523 s / img. ETA=0:25:10
[32m[04/18 02:11:20 detectron2]: [0mInference done 16805/26446. 0.1523 s / img. ETA=0:25:04
[32m[04/18 02:11:25 detectron2]: [0mInference done 16838/26446. 0.1523 s / img. ETA=0:24:59
[32m[04/18 02:11:30 detectron2]: [0mInference done 16870/26446. 0.1523 s / img. ETA=0:24:54
[32m[04/18 02:11:35 detectron2]: [0mInference done 16901/26446. 0.1523 s / img. ETA=0:24:49
[32m[04/18 02:11:40 detectron2]: [0mInference done 16933/26446. 0.1523 s / img. ETA=0:24:44
[32m[04/18 02:11:45 detectron2]: [0mInference done 16966/26446. 0.1523 s / img. ETA=0:24:39
[32m[04/18 02:11:50 detectron2]: [0mInference done 16994/26446. 0.1524 s / img. ETA=0:24:35
[32m[04/18 02:11:55 detectron2]: [0mInference done 17027/26446. 0.1524 s / img. ETA=0:24:30
[32m[04/18 02:12:00 detectron2]: [0mInference done 17056/26446. 0.1524 s / img. ETA=0:24:26
[32m[04/18 02:12:05 detectron2]: [0mInference done 17087/26446. 0.1524 s / img. ETA=0:24:21
[32m[04/18 02:12:11 detectron2]: [0mInference done 17117/26446. 0.1524 s / img. ETA=0:24:17
[32m[04/18 02:12:16 detectron2]: [0mInference done 17147/26446. 0.1525 s / img. ETA=0:24:12
[32m[04/18 02:12:21 detectron2]: [0mInference done 17177/26446. 0.1525 s / img. ETA=0:24:08
[32m[04/18 02:12:26 detectron2]: [0mInference done 17211/26446. 0.1525 s / img. ETA=0:24:02
[32m[04/18 02:12:31 detectron2]: [0mInference done 17243/26446. 0.1525 s / img. ETA=0:23:57
[32m[04/18 02:12:36 detectron2]: [0mInference done 17273/26446. 0.1525 s / img. ETA=0:23:53
[32m[04/18 02:12:41 detectron2]: [0mInference done 17303/26446. 0.1525 s / img. ETA=0:23:48
[32m[04/18 02:12:46 detectron2]: [0mInference done 17333/26446. 0.1525 s / img. ETA=0:23:44
[32m[04/18 02:12:51 detectron2]: [0mInference done 17363/26446. 0.1526 s / img. ETA=0:23:39
[32m[04/18 02:12:56 detectron2]: [0mInference done 17396/26446. 0.1526 s / img. ETA=0:23:34
[32m[04/18 02:13:01 detectron2]: [0mInference done 17429/26446. 0.1526 s / img. ETA=0:23:29
[32m[04/18 02:13:07 detectron2]: [0mInference done 17463/26446. 0.1525 s / img. ETA=0:23:24
[32m[04/18 02:13:12 detectron2]: [0mInference done 17496/26446. 0.1525 s / img. ETA=0:23:18
[32m[04/18 02:13:17 detectron2]: [0mInference done 17529/26446. 0.1525 s / img. ETA=0:23:13
[32m[04/18 02:13:22 detectron2]: [0mInference done 17561/26446. 0.1525 s / img. ETA=0:23:08
[32m[04/18 02:13:27 detectron2]: [0mInference done 17588/26446. 0.1526 s / img. ETA=0:23:04
[32m[04/18 02:13:32 detectron2]: [0mInference done 17617/26446. 0.1526 s / img. ETA=0:23:00
[32m[04/18 02:13:37 detectron2]: [0mInference done 17648/26446. 0.1526 s / img. ETA=0:22:55
[32m[04/18 02:13:42 detectron2]: [0mInference done 17679/26446. 0.1526 s / img. ETA=0:22:51
[32m[04/18 02:13:47 detectron2]: [0mInference done 17708/26446. 0.1527 s / img. ETA=0:22:47
[32m[04/18 02:13:52 detectron2]: [0mInference done 17738/26446. 0.1527 s / img. ETA=0:22:42
[32m[04/18 02:13:58 detectron2]: [0mInference done 17770/26446. 0.1527 s / img. ETA=0:22:37
[32m[04/18 02:14:03 detectron2]: [0mInference done 17799/26446. 0.1527 s / img. ETA=0:22:33
[32m[04/18 02:14:08 detectron2]: [0mInference done 17827/26446. 0.1528 s / img. ETA=0:22:29
[32m[04/18 02:14:13 detectron2]: [0mInference done 17855/26446. 0.1528 s / img. ETA=0:22:25
[32m[04/18 02:14:18 detectron2]: [0mInference done 17882/26446. 0.1529 s / img. ETA=0:22:21
[32m[04/18 02:14:23 detectron2]: [0mInference done 17911/26446. 0.1529 s / img. ETA=0:22:17
[32m[04/18 02:14:28 detectron2]: [0mInference done 17942/26446. 0.1529 s / img. ETA=0:22:12
[32m[04/18 02:14:33 detectron2]: [0mInference done 17973/26446. 0.1529 s / img. ETA=0:22:07
[32m[04/18 02:14:38 detectron2]: [0mInference done 18004/26446. 0.1529 s / img. ETA=0:22:02
[32m[04/18 02:14:43 detectron2]: [0mInference done 18036/26446. 0.1529 s / img. ETA=0:21:57
[32m[04/18 02:14:49 detectron2]: [0mInference done 18067/26446. 0.1530 s / img. ETA=0:21:53
[32m[04/18 02:14:54 detectron2]: [0mInference done 18101/26446. 0.1529 s / img. ETA=0:21:47
[32m[04/18 02:14:59 detectron2]: [0mInference done 18131/26446. 0.1530 s / img. ETA=0:21:43
[32m[04/18 02:15:04 detectron2]: [0mInference done 18164/26446. 0.1530 s / img. ETA=0:21:37
[32m[04/18 02:15:09 detectron2]: [0mInference done 18195/26446. 0.1530 s / img. ETA=0:21:33
[32m[04/18 02:15:14 detectron2]: [0mInference done 18228/26446. 0.1530 s / img. ETA=0:21:27
[32m[04/18 02:15:19 detectron2]: [0mInference done 18260/26446. 0.1530 s / img. ETA=0:21:22
[32m[04/18 02:15:24 detectron2]: [0mInference done 18291/26446. 0.1530 s / img. ETA=0:21:18
[32m[04/18 02:15:29 detectron2]: [0mInference done 18323/26446. 0.1530 s / img. ETA=0:21:13
[32m[04/18 02:15:34 detectron2]: [0mInference done 18354/26446. 0.1530 s / img. ETA=0:21:08
[32m[04/18 02:15:39 detectron2]: [0mInference done 18387/26446. 0.1530 s / img. ETA=0:21:03
[32m[04/18 02:15:44 detectron2]: [0mInference done 18419/26446. 0.1530 s / img. ETA=0:20:58
[32m[04/18 02:15:50 detectron2]: [0mInference done 18452/26446. 0.1530 s / img. ETA=0:20:53
[32m[04/18 02:15:55 detectron2]: [0mInference done 18481/26446. 0.1530 s / img. ETA=0:20:48
[32m[04/18 02:16:00 detectron2]: [0mInference done 18509/26446. 0.1531 s / img. ETA=0:20:44
[32m[04/18 02:16:05 detectron2]: [0mInference done 18541/26446. 0.1531 s / img. ETA=0:20:39
[32m[04/18 02:16:10 detectron2]: [0mInference done 18573/26446. 0.1531 s / img. ETA=0:20:34
[32m[04/18 02:16:15 detectron2]: [0mInference done 18607/26446. 0.1531 s / img. ETA=0:20:29
[32m[04/18 02:16:20 detectron2]: [0mInference done 18637/26446. 0.1531 s / img. ETA=0:20:24
[32m[04/18 02:16:25 detectron2]: [0mInference done 18669/26446. 0.1531 s / img. ETA=0:20:19
[32m[04/18 02:16:30 detectron2]: [0mInference done 18701/26446. 0.1531 s / img. ETA=0:20:14
[32m[04/18 02:16:36 detectron2]: [0mInference done 18734/26446. 0.1531 s / img. ETA=0:20:09
[32m[04/18 02:16:41 detectron2]: [0mInference done 18765/26446. 0.1531 s / img. ETA=0:20:04
[32m[04/18 02:16:46 detectron2]: [0mInference done 18798/26446. 0.1531 s / img. ETA=0:19:59
[32m[04/18 02:16:51 detectron2]: [0mInference done 18828/26446. 0.1531 s / img. ETA=0:19:55
[32m[04/18 02:16:56 detectron2]: [0mInference done 18861/26446. 0.1531 s / img. ETA=0:19:49
[32m[04/18 02:17:01 detectron2]: [0mInference done 18892/26446. 0.1531 s / img. ETA=0:19:45
[32m[04/18 02:17:06 detectron2]: [0mInference done 18924/26446. 0.1531 s / img. ETA=0:19:40
[32m[04/18 02:17:11 detectron2]: [0mInference done 18958/26446. 0.1531 s / img. ETA=0:19:34
[32m[04/18 02:17:17 detectron2]: [0mInference done 18990/26446. 0.1531 s / img. ETA=0:19:29
[32m[04/18 02:17:22 detectron2]: [0mInference done 19022/26446. 0.1531 s / img. ETA=0:19:24
[32m[04/18 02:17:27 detectron2]: [0mInference done 19053/26446. 0.1532 s / img. ETA=0:19:20
[32m[04/18 02:17:32 detectron2]: [0mInference done 19082/26446. 0.1532 s / img. ETA=0:19:15
[32m[04/18 02:17:37 detectron2]: [0mInference done 19111/26446. 0.1532 s / img. ETA=0:19:11
[32m[04/18 02:17:42 detectron2]: [0mInference done 19141/26446. 0.1532 s / img. ETA=0:19:06
[32m[04/18 02:17:47 detectron2]: [0mInference done 19172/26446. 0.1532 s / img. ETA=0:19:02
[32m[04/18 02:17:52 detectron2]: [0mInference done 19205/26446. 0.1532 s / img. ETA=0:18:56
[32m[04/18 02:17:57 detectron2]: [0mInference done 19237/26446. 0.1532 s / img. ETA=0:18:51
[32m[04/18 02:18:02 detectron2]: [0mInference done 19272/26446. 0.1532 s / img. ETA=0:18:46
[32m[04/18 02:18:07 detectron2]: [0mInference done 19302/26446. 0.1532 s / img. ETA=0:18:41
[32m[04/18 02:18:13 detectron2]: [0mInference done 19336/26446. 0.1532 s / img. ETA=0:18:36
[32m[04/18 02:18:18 detectron2]: [0mInference done 19371/26446. 0.1532 s / img. ETA=0:18:30
[32m[04/18 02:18:23 detectron2]: [0mInference done 19402/26446. 0.1532 s / img. ETA=0:18:25
[32m[04/18 02:18:28 detectron2]: [0mInference done 19432/26446. 0.1532 s / img. ETA=0:18:21
[32m[04/18 02:18:33 detectron2]: [0mInference done 19462/26446. 0.1532 s / img. ETA=0:18:16
[32m[04/18 02:18:38 detectron2]: [0mInference done 19495/26446. 0.1532 s / img. ETA=0:18:11
[32m[04/18 02:18:43 detectron2]: [0mInference done 19528/26446. 0.1532 s / img. ETA=0:18:06
[32m[04/18 02:18:48 detectron2]: [0mInference done 19559/26446. 0.1532 s / img. ETA=0:18:01
[32m[04/18 02:18:53 detectron2]: [0mInference done 19591/26446. 0.1532 s / img. ETA=0:17:56
[32m[04/18 02:18:58 detectron2]: [0mInference done 19623/26446. 0.1532 s / img. ETA=0:17:51
[32m[04/18 02:19:03 detectron2]: [0mInference done 19656/26446. 0.1532 s / img. ETA=0:17:46
[32m[04/18 02:19:08 detectron2]: [0mInference done 19688/26446. 0.1533 s / img. ETA=0:17:41
[32m[04/18 02:19:13 detectron2]: [0mInference done 19719/26446. 0.1533 s / img. ETA=0:17:36
[32m[04/18 02:19:18 detectron2]: [0mInference done 19751/26446. 0.1533 s / img. ETA=0:17:31
[32m[04/18 02:19:23 detectron2]: [0mInference done 19782/26446. 0.1533 s / img. ETA=0:17:26
[32m[04/18 02:19:31 detectron2]: [0mInference done 19806/26446. 0.1535 s / img. ETA=0:17:23
[32m[04/18 02:19:36 detectron2]: [0mInference done 19834/26446. 0.1535 s / img. ETA=0:17:19
[32m[04/18 02:19:41 detectron2]: [0mInference done 19866/26446. 0.1535 s / img. ETA=0:17:14
[32m[04/18 02:19:46 detectron2]: [0mInference done 19897/26446. 0.1535 s / img. ETA=0:17:09
[32m[04/18 02:19:51 detectron2]: [0mInference done 19929/26446. 0.1535 s / img. ETA=0:17:04
[32m[04/18 02:19:56 detectron2]: [0mInference done 19959/26446. 0.1535 s / img. ETA=0:17:00
[32m[04/18 02:20:01 detectron2]: [0mInference done 19988/26446. 0.1535 s / img. ETA=0:16:55
[32m[04/18 02:20:06 detectron2]: [0mInference done 20018/26446. 0.1536 s / img. ETA=0:16:51
[32m[04/18 02:20:12 detectron2]: [0mInference done 20047/26446. 0.1536 s / img. ETA=0:16:46
[32m[04/18 02:20:17 detectron2]: [0mInference done 20077/26446. 0.1536 s / img. ETA=0:16:42
[32m[04/18 02:20:22 detectron2]: [0mInference done 20109/26446. 0.1536 s / img. ETA=0:16:37
[32m[04/18 02:20:27 detectron2]: [0mInference done 20140/26446. 0.1536 s / img. ETA=0:16:32
[32m[04/18 02:20:32 detectron2]: [0mInference done 20173/26446. 0.1536 s / img. ETA=0:16:27
[32m[04/18 02:20:37 detectron2]: [0mInference done 20206/26446. 0.1536 s / img. ETA=0:16:22
[32m[04/18 02:20:42 detectron2]: [0mInference done 20237/26446. 0.1536 s / img. ETA=0:16:17
[32m[04/18 02:20:47 detectron2]: [0mInference done 20266/26446. 0.1536 s / img. ETA=0:16:12
[32m[04/18 02:20:52 detectron2]: [0mInference done 20297/26446. 0.1537 s / img. ETA=0:16:07
[32m[04/18 02:20:57 detectron2]: [0mInference done 20328/26446. 0.1537 s / img. ETA=0:16:03
[32m[04/18 02:21:02 detectron2]: [0mInference done 20360/26446. 0.1537 s / img. ETA=0:15:58
[32m[04/18 02:21:07 detectron2]: [0mInference done 20389/26446. 0.1537 s / img. ETA=0:15:53
[32m[04/18 02:21:13 detectron2]: [0mInference done 20421/26446. 0.1537 s / img. ETA=0:15:48
[32m[04/18 02:21:18 detectron2]: [0mInference done 20451/26446. 0.1537 s / img. ETA=0:15:44
[32m[04/18 02:21:23 detectron2]: [0mInference done 20481/26446. 0.1537 s / img. ETA=0:15:39
[32m[04/18 02:21:28 detectron2]: [0mInference done 20510/26446. 0.1538 s / img. ETA=0:15:35
[32m[04/18 02:21:33 detectron2]: [0mInference done 20539/26446. 0.1538 s / img. ETA=0:15:30
[32m[04/18 02:21:38 detectron2]: [0mInference done 20568/26446. 0.1538 s / img. ETA=0:15:26
[32m[04/18 02:21:43 detectron2]: [0mInference done 20599/26446. 0.1538 s / img. ETA=0:15:21
[32m[04/18 02:21:48 detectron2]: [0mInference done 20630/26446. 0.1538 s / img. ETA=0:15:16
[32m[04/18 02:21:53 detectron2]: [0mInference done 20660/26446. 0.1538 s / img. ETA=0:15:11
[32m[04/18 02:21:58 detectron2]: [0mInference done 20689/26446. 0.1539 s / img. ETA=0:15:07
[32m[04/18 02:22:03 detectron2]: [0mInference done 20718/26446. 0.1539 s / img. ETA=0:15:03
[32m[04/18 02:22:08 detectron2]: [0mInference done 20747/26446. 0.1539 s / img. ETA=0:14:58
[32m[04/18 02:22:13 detectron2]: [0mInference done 20778/26446. 0.1539 s / img. ETA=0:14:53
[32m[04/18 02:22:18 detectron2]: [0mInference done 20809/26446. 0.1539 s / img. ETA=0:14:48
[32m[04/18 02:22:24 detectron2]: [0mInference done 20835/26446. 0.1540 s / img. ETA=0:14:45
[32m[04/18 02:22:29 detectron2]: [0mInference done 20864/26446. 0.1540 s / img. ETA=0:14:40
[32m[04/18 02:22:34 detectron2]: [0mInference done 20892/26446. 0.1540 s / img. ETA=0:14:36
[32m[04/18 02:22:39 detectron2]: [0mInference done 20920/26446. 0.1541 s / img. ETA=0:14:32
[32m[04/18 02:22:44 detectron2]: [0mInference done 20950/26446. 0.1541 s / img. ETA=0:14:27
[32m[04/18 02:22:49 detectron2]: [0mInference done 20981/26446. 0.1541 s / img. ETA=0:14:22
[32m[04/18 02:22:54 detectron2]: [0mInference done 21011/26446. 0.1541 s / img. ETA=0:14:18
[32m[04/18 02:22:59 detectron2]: [0mInference done 21042/26446. 0.1541 s / img. ETA=0:14:13
[32m[04/18 02:23:04 detectron2]: [0mInference done 21073/26446. 0.1541 s / img. ETA=0:14:08
[32m[04/18 02:23:09 detectron2]: [0mInference done 21105/26446. 0.1541 s / img. ETA=0:14:03
[32m[04/18 02:23:14 detectron2]: [0mInference done 21135/26446. 0.1541 s / img. ETA=0:13:58
[32m[04/18 02:23:20 detectron2]: [0mInference done 21166/26446. 0.1542 s / img. ETA=0:13:53
[32m[04/18 02:23:25 detectron2]: [0mInference done 21198/26446. 0.1542 s / img. ETA=0:13:48
[32m[04/18 02:23:30 detectron2]: [0mInference done 21229/26446. 0.1542 s / img. ETA=0:13:43
[32m[04/18 02:23:35 detectron2]: [0mInference done 21259/26446. 0.1542 s / img. ETA=0:13:39
[32m[04/18 02:23:40 detectron2]: [0mInference done 21290/26446. 0.1542 s / img. ETA=0:13:34
[32m[04/18 02:23:45 detectron2]: [0mInference done 21321/26446. 0.1542 s / img. ETA=0:13:29
[32m[04/18 02:23:50 detectron2]: [0mInference done 21354/26446. 0.1542 s / img. ETA=0:13:24
[32m[04/18 02:23:55 detectron2]: [0mInference done 21383/26446. 0.1542 s / img. ETA=0:13:19
[32m[04/18 02:24:00 detectron2]: [0mInference done 21416/26446. 0.1542 s / img. ETA=0:13:14
[32m[04/18 02:24:05 detectron2]: [0mInference done 21446/26446. 0.1542 s / img. ETA=0:13:09
[32m[04/18 02:24:10 detectron2]: [0mInference done 21475/26446. 0.1542 s / img. ETA=0:13:05
[32m[04/18 02:24:15 detectron2]: [0mInference done 21507/26446. 0.1542 s / img. ETA=0:13:00
[32m[04/18 02:24:20 detectron2]: [0mInference done 21538/26446. 0.1543 s / img. ETA=0:12:55
[32m[04/18 02:24:25 detectron2]: [0mInference done 21567/26446. 0.1543 s / img. ETA=0:12:51
[32m[04/18 02:24:31 detectron2]: [0mInference done 21597/26446. 0.1543 s / img. ETA=0:12:46
[32m[04/18 02:24:36 detectron2]: [0mInference done 21628/26446. 0.1543 s / img. ETA=0:12:41
[32m[04/18 02:24:41 detectron2]: [0mInference done 21661/26446. 0.1543 s / img. ETA=0:12:36
[32m[04/18 02:24:46 detectron2]: [0mInference done 21692/26446. 0.1543 s / img. ETA=0:12:31
[32m[04/18 02:24:51 detectron2]: [0mInference done 21722/26446. 0.1543 s / img. ETA=0:12:26
[32m[04/18 02:24:56 detectron2]: [0mInference done 21754/26446. 0.1543 s / img. ETA=0:12:21
[32m[04/18 02:25:01 detectron2]: [0mInference done 21786/26446. 0.1543 s / img. ETA=0:12:16
[32m[04/18 02:25:06 detectron2]: [0mInference done 21815/26446. 0.1543 s / img. ETA=0:12:12
[32m[04/18 02:25:11 detectron2]: [0mInference done 21842/26446. 0.1544 s / img. ETA=0:12:08
[32m[04/18 02:25:16 detectron2]: [0mInference done 21871/26446. 0.1544 s / img. ETA=0:12:03
[32m[04/18 02:25:21 detectron2]: [0mInference done 21905/26446. 0.1544 s / img. ETA=0:11:58
[32m[04/18 02:25:26 detectron2]: [0mInference done 21936/26446. 0.1544 s / img. ETA=0:11:53
[32m[04/18 02:25:31 detectron2]: [0mInference done 21963/26446. 0.1544 s / img. ETA=0:11:49
[32m[04/18 02:25:37 detectron2]: [0mInference done 21996/26446. 0.1544 s / img. ETA=0:11:43
[32m[04/18 02:25:42 detectron2]: [0mInference done 22028/26446. 0.1544 s / img. ETA=0:11:38
[32m[04/18 02:25:47 detectron2]: [0mInference done 22059/26446. 0.1544 s / img. ETA=0:11:33
[32m[04/18 02:25:52 detectron2]: [0mInference done 22091/26446. 0.1544 s / img. ETA=0:11:28
[32m[04/18 02:25:57 detectron2]: [0mInference done 22126/26446. 0.1544 s / img. ETA=0:11:23
[32m[04/18 02:26:02 detectron2]: [0mInference done 22159/26446. 0.1544 s / img. ETA=0:11:18
[32m[04/18 02:26:07 detectron2]: [0mInference done 22192/26446. 0.1544 s / img. ETA=0:11:12
[32m[04/18 02:26:12 detectron2]: [0mInference done 22226/26446. 0.1544 s / img. ETA=0:11:07
[32m[04/18 02:26:17 detectron2]: [0mInference done 22257/26446. 0.1544 s / img. ETA=0:11:02
[32m[04/18 02:26:22 detectron2]: [0mInference done 22292/26446. 0.1544 s / img. ETA=0:10:56
[32m[04/18 02:26:27 detectron2]: [0mInference done 22327/26446. 0.1543 s / img. ETA=0:10:51
[32m[04/18 02:26:32 detectron2]: [0mInference done 22361/26446. 0.1543 s / img. ETA=0:10:45
[32m[04/18 02:26:37 detectron2]: [0mInference done 22393/26446. 0.1543 s / img. ETA=0:10:40
[32m[04/18 02:26:42 detectron2]: [0mInference done 22425/26446. 0.1543 s / img. ETA=0:10:35
[32m[04/18 02:26:47 detectron2]: [0mInference done 22455/26446. 0.1543 s / img. ETA=0:10:30
[32m[04/18 02:26:52 detectron2]: [0mInference done 22485/26446. 0.1544 s / img. ETA=0:10:26
[32m[04/18 02:26:57 detectron2]: [0mInference done 22517/26446. 0.1544 s / img. ETA=0:10:21
[32m[04/18 02:27:03 detectron2]: [0mInference done 22551/26446. 0.1543 s / img. ETA=0:10:15
[32m[04/18 02:27:08 detectron2]: [0mInference done 22585/26446. 0.1543 s / img. ETA=0:10:10
[32m[04/18 02:27:13 detectron2]: [0mInference done 22620/26446. 0.1543 s / img. ETA=0:10:04
[32m[04/18 02:27:18 detectron2]: [0mInference done 22655/26446. 0.1543 s / img. ETA=0:09:59
[32m[04/18 02:27:23 detectron2]: [0mInference done 22689/26446. 0.1543 s / img. ETA=0:09:53
[32m[04/18 02:27:28 detectron2]: [0mInference done 22723/26446. 0.1543 s / img. ETA=0:09:48
[32m[04/18 02:27:33 detectron2]: [0mInference done 22758/26446. 0.1542 s / img. ETA=0:09:42
[32m[04/18 02:27:38 detectron2]: [0mInference done 22792/26446. 0.1542 s / img. ETA=0:09:37
[32m[04/18 02:27:43 detectron2]: [0mInference done 22826/26446. 0.1542 s / img. ETA=0:09:31
[32m[04/18 02:27:48 detectron2]: [0mInference done 22860/26446. 0.1542 s / img. ETA=0:09:26
[32m[04/18 02:27:53 detectron2]: [0mInference done 22895/26446. 0.1542 s / img. ETA=0:09:20
[32m[04/18 02:27:58 detectron2]: [0mInference done 22930/26446. 0.1542 s / img. ETA=0:09:15
[32m[04/18 02:28:03 detectron2]: [0mInference done 22961/26446. 0.1542 s / img. ETA=0:09:10
[32m[04/18 02:28:08 detectron2]: [0mInference done 22996/26446. 0.1542 s / img. ETA=0:09:04
[32m[04/18 02:28:14 detectron2]: [0mInference done 23031/26446. 0.1541 s / img. ETA=0:08:59
[32m[04/18 02:28:19 detectron2]: [0mInference done 23064/26446. 0.1541 s / img. ETA=0:08:53
[32m[04/18 02:28:24 detectron2]: [0mInference done 23093/26446. 0.1541 s / img. ETA=0:08:49
[32m[04/18 02:28:29 detectron2]: [0mInference done 23124/26446. 0.1541 s / img. ETA=0:08:44
[32m[04/18 02:28:34 detectron2]: [0mInference done 23155/26446. 0.1542 s / img. ETA=0:08:39
[32m[04/18 02:28:39 detectron2]: [0mInference done 23185/26446. 0.1542 s / img. ETA=0:08:35
[32m[04/18 02:28:44 detectron2]: [0mInference done 23217/26446. 0.1542 s / img. ETA=0:08:30
[32m[04/18 02:28:49 detectron2]: [0mInference done 23249/26446. 0.1542 s / img. ETA=0:08:24
[32m[04/18 02:28:54 detectron2]: [0mInference done 23279/26446. 0.1542 s / img. ETA=0:08:20
[32m[04/18 02:28:59 detectron2]: [0mInference done 23308/26446. 0.1542 s / img. ETA=0:08:15
[32m[04/18 02:29:04 detectron2]: [0mInference done 23340/26446. 0.1542 s / img. ETA=0:08:10
[32m[04/18 02:29:09 detectron2]: [0mInference done 23372/26446. 0.1542 s / img. ETA=0:08:05
[32m[04/18 02:29:14 detectron2]: [0mInference done 23402/26446. 0.1542 s / img. ETA=0:08:00
[32m[04/18 02:29:19 detectron2]: [0mInference done 23433/26446. 0.1542 s / img. ETA=0:07:56
[32m[04/18 02:29:25 detectron2]: [0mInference done 23465/26446. 0.1542 s / img. ETA=0:07:51
[32m[04/18 02:29:30 detectron2]: [0mInference done 23495/26446. 0.1542 s / img. ETA=0:07:46
[32m[04/18 02:29:35 detectron2]: [0mInference done 23527/26446. 0.1542 s / img. ETA=0:07:41
[32m[04/18 02:29:40 detectron2]: [0mInference done 23557/26446. 0.1543 s / img. ETA=0:07:36
[32m[04/18 02:29:45 detectron2]: [0mInference done 23586/26446. 0.1543 s / img. ETA=0:07:32
[32m[04/18 02:29:50 detectron2]: [0mInference done 23617/26446. 0.1543 s / img. ETA=0:07:27
[32m[04/18 02:29:55 detectron2]: [0mInference done 23651/26446. 0.1543 s / img. ETA=0:07:21
[32m[04/18 02:30:00 detectron2]: [0mInference done 23682/26446. 0.1543 s / img. ETA=0:07:16
[32m[04/18 02:30:05 detectron2]: [0mInference done 23713/26446. 0.1543 s / img. ETA=0:07:11
[32m[04/18 02:30:10 detectron2]: [0mInference done 23745/26446. 0.1543 s / img. ETA=0:07:06
[32m[04/18 02:30:15 detectron2]: [0mInference done 23776/26446. 0.1543 s / img. ETA=0:07:02
[32m[04/18 02:30:20 detectron2]: [0mInference done 23808/26446. 0.1543 s / img. ETA=0:06:56
[32m[04/18 02:30:25 detectron2]: [0mInference done 23841/26446. 0.1543 s / img. ETA=0:06:51
[32m[04/18 02:30:30 detectron2]: [0mInference done 23873/26446. 0.1543 s / img. ETA=0:06:46
[32m[04/18 02:30:36 detectron2]: [0mInference done 23904/26446. 0.1543 s / img. ETA=0:06:41
[32m[04/18 02:30:41 detectron2]: [0mInference done 23936/26446. 0.1543 s / img. ETA=0:06:36
[32m[04/18 02:30:46 detectron2]: [0mInference done 23969/26446. 0.1543 s / img. ETA=0:06:31
[32m[04/18 02:30:51 detectron2]: [0mInference done 24001/26446. 0.1543 s / img. ETA=0:06:26
[32m[04/18 02:30:56 detectron2]: [0mInference done 24035/26446. 0.1543 s / img. ETA=0:06:21
[32m[04/18 02:31:01 detectron2]: [0mInference done 24066/26446. 0.1543 s / img. ETA=0:06:16
[32m[04/18 02:31:06 detectron2]: [0mInference done 24097/26446. 0.1543 s / img. ETA=0:06:11
[32m[04/18 02:31:11 detectron2]: [0mInference done 24129/26446. 0.1543 s / img. ETA=0:06:06
[32m[04/18 02:31:16 detectron2]: [0mInference done 24160/26446. 0.1543 s / img. ETA=0:06:01
[32m[04/18 02:31:21 detectron2]: [0mInference done 24193/26446. 0.1543 s / img. ETA=0:05:56
[32m[04/18 02:31:27 detectron2]: [0mInference done 24224/26446. 0.1543 s / img. ETA=0:05:51
[32m[04/18 02:31:32 detectron2]: [0mInference done 24254/26446. 0.1543 s / img. ETA=0:05:46
[32m[04/18 02:31:37 detectron2]: [0mInference done 24284/26446. 0.1543 s / img. ETA=0:05:41
[32m[04/18 02:31:42 detectron2]: [0mInference done 24319/26446. 0.1543 s / img. ETA=0:05:36
[32m[04/18 02:31:47 detectron2]: [0mInference done 24354/26446. 0.1543 s / img. ETA=0:05:30
[32m[04/18 02:31:52 detectron2]: [0mInference done 24387/26446. 0.1543 s / img. ETA=0:05:25
[32m[04/18 02:31:57 detectron2]: [0mInference done 24420/26446. 0.1543 s / img. ETA=0:05:20
[32m[04/18 02:32:02 detectron2]: [0mInference done 24452/26446. 0.1543 s / img. ETA=0:05:15
[32m[04/18 02:32:07 detectron2]: [0mInference done 24483/26446. 0.1543 s / img. ETA=0:05:10
[32m[04/18 02:32:12 detectron2]: [0mInference done 24517/26446. 0.1543 s / img. ETA=0:05:04
[32m[04/18 02:32:17 detectron2]: [0mInference done 24549/26446. 0.1543 s / img. ETA=0:04:59
[32m[04/18 02:32:22 detectron2]: [0mInference done 24581/26446. 0.1543 s / img. ETA=0:04:54
[32m[04/18 02:32:27 detectron2]: [0mInference done 24614/26446. 0.1543 s / img. ETA=0:04:49
[32m[04/18 02:32:32 detectron2]: [0mInference done 24646/26446. 0.1543 s / img. ETA=0:04:44
[32m[04/18 02:32:37 detectron2]: [0mInference done 24679/26446. 0.1543 s / img. ETA=0:04:39
[32m[04/18 02:32:43 detectron2]: [0mInference done 24714/26446. 0.1543 s / img. ETA=0:04:33
[32m[04/18 02:32:48 detectron2]: [0mInference done 24747/26446. 0.1542 s / img. ETA=0:04:28
[32m[04/18 02:32:53 detectron2]: [0mInference done 24779/26446. 0.1542 s / img. ETA=0:04:23
[32m[04/18 02:32:58 detectron2]: [0mInference done 24809/26446. 0.1542 s / img. ETA=0:04:18
[32m[04/18 02:33:03 detectron2]: [0mInference done 24839/26446. 0.1543 s / img. ETA=0:04:13
[32m[04/18 02:33:08 detectron2]: [0mInference done 24869/26446. 0.1543 s / img. ETA=0:04:09
[32m[04/18 02:33:13 detectron2]: [0mInference done 24899/26446. 0.1543 s / img. ETA=0:04:04
[32m[04/18 02:33:18 detectron2]: [0mInference done 24932/26446. 0.1543 s / img. ETA=0:03:59
[32m[04/18 02:33:23 detectron2]: [0mInference done 24962/26446. 0.1543 s / img. ETA=0:03:54
[32m[04/18 02:33:28 detectron2]: [0mInference done 24993/26446. 0.1543 s / img. ETA=0:03:49
[32m[04/18 02:33:33 detectron2]: [0mInference done 25024/26446. 0.1543 s / img. ETA=0:03:44
[32m[04/18 02:33:38 detectron2]: [0mInference done 25057/26446. 0.1543 s / img. ETA=0:03:39
[32m[04/18 02:33:43 detectron2]: [0mInference done 25089/26446. 0.1543 s / img. ETA=0:03:34
[32m[04/18 02:33:48 detectron2]: [0mInference done 25122/26446. 0.1543 s / img. ETA=0:03:29
[32m[04/18 02:33:53 detectron2]: [0mInference done 25155/26446. 0.1543 s / img. ETA=0:03:24
[32m[04/18 02:33:58 detectron2]: [0mInference done 25182/26446. 0.1543 s / img. ETA=0:03:19
[32m[04/18 02:34:04 detectron2]: [0mInference done 25215/26446. 0.1543 s / img. ETA=0:03:14
[32m[04/18 02:34:09 detectron2]: [0mInference done 25246/26446. 0.1543 s / img. ETA=0:03:09
[32m[04/18 02:34:14 detectron2]: [0mInference done 25277/26446. 0.1543 s / img. ETA=0:03:04
[32m[04/18 02:34:19 detectron2]: [0mInference done 25311/26446. 0.1543 s / img. ETA=0:02:59
[32m[04/18 02:34:24 detectron2]: [0mInference done 25341/26446. 0.1543 s / img. ETA=0:02:54
[32m[04/18 02:34:29 detectron2]: [0mInference done 25369/26446. 0.1543 s / img. ETA=0:02:50
[32m[04/18 02:34:34 detectron2]: [0mInference done 25404/26446. 0.1543 s / img. ETA=0:02:44
[32m[04/18 02:34:39 detectron2]: [0mInference done 25433/26446. 0.1543 s / img. ETA=0:02:40
[32m[04/18 02:34:44 detectron2]: [0mInference done 25465/26446. 0.1543 s / img. ETA=0:02:35
[32m[04/18 02:34:49 detectron2]: [0mInference done 25502/26446. 0.1543 s / img. ETA=0:02:29
[32m[04/18 02:34:54 detectron2]: [0mInference done 25537/26446. 0.1543 s / img. ETA=0:02:23
[32m[04/18 02:34:59 detectron2]: [0mInference done 25569/26446. 0.1543 s / img. ETA=0:02:18
[32m[04/18 02:35:05 detectron2]: [0mInference done 25602/26446. 0.1543 s / img. ETA=0:02:13
[32m[04/18 02:35:10 detectron2]: [0mInference done 25638/26446. 0.1542 s / img. ETA=0:02:07
[32m[04/18 02:35:15 detectron2]: [0mInference done 25672/26446. 0.1542 s / img. ETA=0:02:02
[32m[04/18 02:35:20 detectron2]: [0mInference done 25706/26446. 0.1542 s / img. ETA=0:01:56
[32m[04/18 02:35:25 detectron2]: [0mInference done 25737/26446. 0.1542 s / img. ETA=0:01:52
[32m[04/18 02:35:30 detectron2]: [0mInference done 25771/26446. 0.1542 s / img. ETA=0:01:46
[32m[04/18 02:35:35 detectron2]: [0mInference done 25804/26446. 0.1542 s / img. ETA=0:01:41
[32m[04/18 02:35:40 detectron2]: [0mInference done 25837/26446. 0.1542 s / img. ETA=0:01:36
[32m[04/18 02:35:45 detectron2]: [0mInference done 25871/26446. 0.1542 s / img. ETA=0:01:30
[32m[04/18 02:35:50 detectron2]: [0mInference done 25905/26446. 0.1542 s / img. ETA=0:01:25
[32m[04/18 02:35:55 detectron2]: [0mInference done 25938/26446. 0.1542 s / img. ETA=0:01:20
[32m[04/18 02:36:00 detectron2]: [0mInference done 25971/26446. 0.1542 s / img. ETA=0:01:15
[32m[04/18 02:36:05 detectron2]: [0mInference done 26005/26446. 0.1542 s / img. ETA=0:01:09
[32m[04/18 02:36:10 detectron2]: [0mInference done 26035/26446. 0.1542 s / img. ETA=0:01:04
[32m[04/18 02:36:16 detectron2]: [0mInference done 26067/26446. 0.1542 s / img. ETA=0:00:59
[32m[04/18 02:36:21 detectron2]: [0mInference done 26097/26446. 0.1542 s / img. ETA=0:00:55
[32m[04/18 02:36:26 detectron2]: [0mInference done 26128/26446. 0.1542 s / img. ETA=0:00:50
[32m[04/18 02:36:31 detectron2]: [0mInference done 26160/26446. 0.1542 s / img. ETA=0:00:45
[32m[04/18 02:36:36 detectron2]: [0mInference done 26191/26446. 0.1542 s / img. ETA=0:00:40
[32m[04/18 02:36:41 detectron2]: [0mInference done 26223/26446. 0.1542 s / img. ETA=0:00:35
[32m[04/18 02:36:46 detectron2]: [0mInference done 26255/26446. 0.1542 s / img. ETA=0:00:30
[32m[04/18 02:36:51 detectron2]: [0mInference done 26287/26446. 0.1542 s / img. ETA=0:00:25
[32m[04/18 02:36:56 detectron2]: [0mInference done 26322/26446. 0.1542 s / img. ETA=0:00:19
[32m[04/18 02:37:01 detectron2]: [0mInference done 26358/26446. 0.1541 s / img. ETA=0:00:13
[32m[04/18 02:37:06 detectron2]: [0mInference done 26388/26446. 0.1542 s / img. ETA=0:00:09
[32m[04/18 02:37:11 detectron2]: [0mInference done 26423/26446. 0.1541 s / img. ETA=0:00:03
[32m[04/18 02:37:14 detectron2]: [0mTotal inference time: 1:09:36.614121 (0.157960 s / img per device, on 1 devices)
[32m[04/18 02:37:14 detectron2]: [0mTotal inference pure compute time: 1:07:55 (0.154123 s / img per device, on 1 devices)
[32m[04/18 02:37:19 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[04/18 02:37:19 d2.evaluation.coco_evaluation]: [0mSaving results to ../output-step3-predcl-vctree-short-vg/inference/coco_instances_results.json
[32m[04/18 02:37:21 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.65s)
creating index...
index created!
[32m[04/18 02:37:22 d2.evaluation.fast_eval_api]: [0mEvaluate annotation type *bbox*
[32m[04/18 02:39:05 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.evaluate() finished in 103.02 seconds.
[32m[04/18 02:39:07 d2.evaluation.fast_eval_api]: [0mAccumulating evaluation results...
[32m[04/18 02:39:16 d2.evaluation.fast_eval_api]: [0mCOCOeval_opt.accumulate() finished in 9.33 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.991
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.991
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.991
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.989
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.990
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.995
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.658
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.991
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.995
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.992
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.994
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.998
[32m[04/18 02:39:16 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 99.069 | 99.069 | 99.069 | 98.910 | 99.042 | 99.548 |
[32m[04/18 02:39:16 d2.evaluation.coco_evaluation]: [0mPer-category bbox AP: 
| category   | AP      | category   | AP      | category   | AP      |
|:-----------|:--------|:-----------|:--------|:-----------|:--------|
| airplane   | 100.000 | animal     | 98.020  | arm        | 99.010  |
| bag        | 99.010  | banana     | 99.010  | basket     | 99.010  |
| beach      | 100.000 | bear       | 99.010  | bed        | 100.000 |
| bench      | 99.010  | bike       | 98.020  | bird       | 100.000 |
| board      | 99.010  | boat       | 100.000 | book       | 98.020  |
| boot       | 98.020  | bottle     | 99.010  | bowl       | 98.020  |
| box        | 98.020  | boy        | 98.020  | branch     | 98.020  |
| building   | 99.010  | bus        | 99.010  | cabinet    | 100.000 |
| cap        | 99.010  | car        | 99.010  | cat        | 100.000 |
| chair      | 99.010  | child      | 97.030  | clock      | 100.000 |
| coat       | 99.010  | counter    | 100.000 | cow        | 100.000 |
| cup        | 98.991  | curtain    | 100.000 | desk       | 100.000 |
| dog        | 99.010  | door       | 99.010  | drawer     | 100.000 |
| ear        | 100.000 | elephant   | 99.010  | engine     | 100.000 |
| eye        | 100.000 | face       | 99.010  | fence      | 99.010  |
| finger     | 100.000 | flag       | 100.000 | flower     | 99.010  |
| food       | 99.010  | fork       | 100.000 | fruit      | 98.020  |
| giraffe    | 99.010  | girl       | 98.013  | glass      | 99.010  |
| glove      | 99.010  | guy        | 99.010  | hair       | 99.010  |
| hand       | 99.010  | handle     | 99.010  | hat        | 99.010  |
| head       | 99.010  | helmet     | 99.010  | hill       | 100.000 |
| horse      | 99.010  | house      | 99.010  | jacket     | 98.020  |
| jean       | 99.010  | kid        | 99.010  | kite       | 99.010  |
| lady       | 98.020  | lamp       | 99.010  | laptop     | 98.020  |
| leaf       | 99.010  | leg        | 99.010  | letter     | 99.010  |
| light      | 99.010  | logo       | 99.010  | man        | 99.010  |
| men        | 99.010  | motorcycle | 99.010  | mountain   | 99.010  |
| mouth      | 100.000 | neck       | 99.010  | nose       | 100.000 |
| number     | 99.010  | orange     | 96.040  | pant       | 99.010  |
| paper      | 99.010  | paw        | 100.000 | people     | 98.020  |
| person     | 98.020  | phone      | 99.010  | pillow     | 100.000 |
| pizza      | 99.010  | plane      | 100.000 | plant      | 99.010  |
| plate      | 99.010  | player     | 98.020  | pole       | 99.010  |
| post       | 99.010  | pot        | 100.000 | racket     | 99.010  |
| railing    | 99.010  | rock       | 100.000 | roof       | 99.010  |
| room       | 99.010  | screen     | 98.020  | seat       | 99.010  |
| sheep      | 100.000 | shelf      | 99.010  | shirt      | 99.010  |
| shoe       | 99.009  | short      | 99.010  | sidewalk   | 99.010  |
| sign       | 99.010  | sink       | 100.000 | skateboard | 99.010  |
| ski        | 98.020  | skier      | 98.020  | sneaker    | 99.010  |
| snow       | 98.020  | sock       | 99.010  | stand      | 99.010  |
| street     | 99.010  | surfboard  | 99.010  | table      | 99.010  |
| tail       | 100.000 | tie        | 100.000 | tile       | 100.000 |
| tire       | 99.010  | toilet     | 100.000 | towel      | 99.010  |
| tower      | 100.000 | track      | 99.010  | train      | 99.010  |
| tree       | 99.010  | truck      | 99.010  | trunk      | 99.010  |
| umbrella   | 97.030  | vase       | 100.000 | vegetable  | 100.000 |
| vehicle    | 99.010  | wave       | 100.000 | wheel      | 99.010  |
| window     | 99.010  | windshield | 99.010  | wing       | 99.010  |
| wire       | 99.010  | woman      | 98.020  | zebra      | 99.010  |
[32m[04/18 02:39:29 detectron2]: [0mGathering data
[32m[04/18 02:39:29 detectron2]: [0mPredictions Gathered
[32m[04/18 02:39:45 detectron2]: [0mSaving output prediction
[32m[04/18 02:39:45 detectron2]: [0mComputing Scene Graph Metrics
[32m[04/18 02:39:45 detectron2]: [0mPreparing Global Container
[32m[04/18 02:44:47 detectron2]: [0mScene Graph Metric Evaluation Complete. Computing recall statistics...
[32m[04/18 02:44:47 detectron2]: [0mScene Graph Results for mode: predcls
SGG eval:     R @ 20: 0.5657;     R @ 50: 0.6371;     R @ 100: 0.6576;  for mode=predcls, type=Recall(Main).
SGG eval:  ng-R @ 20: 0.6397;  ng-R @ 50: 0.7860;  ng-R @ 100: 0.8616;  for mode=predcls, type=No Graph Constraint Recall(Main).
SGG eval:    zR @ 20: 0.0077;    zR @ 50: 0.0243;    zR @ 100: 0.0382;  for mode=predcls, type=Zero Shot Recall.
SGG eval:    mR @ 20: 0.1110;    mR @ 50: 0.1415;    mR @ 100: 0.1536;  for mode=predcls, type=Mean Recall.
----------------------- Details ------------------------
(above:0.6545) (across:0.0000) (against:0.0000) (along:0.0000) (and:0.0060) (at:0.2454) (attached to:0.0024) (behind:0.6362) (belonging to:0.0000) (between:0.0035) (carrying:0.0716) (covered in:0.0345) (covering:0.0000) (eating:0.1442) (flying in:0.0000) (for:0.0020) (from:0.0000) (growing on:0.0000) (hanging from:0.0013) (has:0.8144) (holding:0.6802) (in:0.3508) (in front of:0.0620) (laying on:0.0045) (looking at:0.0202) (lying on:0.0000) (made of:0.0000) (mounted on:0.0000) (near:0.3587) (of:0.6648) (on:0.7923) (on back of:0.0000) (over:0.0190) (painted on:0.0000) (parked on:0.0000) (part of:0.0000) (playing:0.0000) (riding:0.3358) (says:0.0000) (sitting on:0.2458) (standing on:0.0116) (to:0.0000) (under:0.2763) (using:0.0115) (walking in:0.0000) (walking on:0.1385) (watching:0.0581) (wearing:0.9697) (wears:0.0000) (with:0.0631) 
--------------------------------------------------------
SGG eval:     A @ 20: 0.6785;     A @ 50: 0.6808;     A @ 100: 0.6808;  for mode=predcls, type=TopK Accuracy.
====================================================================================================

[32m[04/18 02:44:48 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[04/18 02:44:48 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[04/18 02:44:48 d2.evaluation.testing]: [0mcopypaste: 99.0691,99.0693,99.0692,98.9096,99.0419,99.5481
[32m[04/18 02:44:48 d2.evaluation.testing]: [0mcopypaste: Task: SG
[32m[04/18 02:44:48 d2.evaluation.testing]: [0mcopypaste: SGMeanRecall@20,SGMeanRecall@50,SGMeanRecall@100
[32m[04/18 02:44:48 d2.evaluation.testing]: [0mcopypaste: 0.1110,0.1415,0.1536
[32m[04/18 02:44:49 fvcore.common.checkpoint]: [0mSaving checkpoint to ../output-step3-predcl-vctree-short-vg/best_model_final.pth.pth
[32m[04/18 02:45:13 fvcore.common.checkpoint]: [0mSaving checkpoint to ../output-step3-predcl-vctree-short-vg/model_0003999.pth
[4m[5m[31mERROR[0m [32m[04/18 02:45:36 d2.engine.train_loop]: [0mException during training:
Traceback (most recent call last):
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 150, in train
    self.after_step()
  File "/home/r09521612/.local/lib/python3.8/site-packages/detectron2/engine/train_loop.py", line 180, in after_step
    h.after_step()
  File "/home/r09521612/segmentationsg/segmentationsg/checkpoint/detection_checkpoint.py", line 56, in after_step
    self.checkpointer.step(self.trainer.iter)
  File "/home/r09521612/.local/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 428, in step
    self.checkpointer.save(
  File "/home/r09521612/.local/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 126, in save
    torch.save(data, f)
OSError: [Errno 122] Disk quota exceeded
[32m[04/18 02:45:36 d2.engine.hooks]: [0mOverall training speed: 3997 iterations in 1:56:58 (1.7558 s / it)
[32m[04/18 02:45:36 d2.engine.hooks]: [0mTotal training time: 3:27:23 (1:30:25 on hooks)
[32m[04/18 02:45:36 d2.utils.events]: [0m eta: 0:00:00  iter: 3999  total_loss: 1.19  loss_rel: 0.2348  loss_refine_obj: 0  binary_loss: 0.6931  loss_mask_segmentation: 0.2619  time: 1.7554  data_time: 0.1793  lr: 0.0024994  max_mem: 12903M

============================ Messages from Goddess ============================
 * Job ended at     : Mon Apr 18 02:45:50 CST 2022
==============